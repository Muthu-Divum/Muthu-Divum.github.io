{"version":3,"sources":["../node_modules/d3/dist/package.js","../node_modules/d3-axis/src/array.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-selection/src/local.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/point.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3-selection/src/selectAll.js","../node_modules/d3-selection/src/touch.js","../node_modules/d3-drag/src/noevent.js","../node_modules/d3-drag/src/nodrag.js","../node_modules/d3-drag/src/constant.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-ease/src/poly.js","../node_modules/d3-ease/src/sin.js","../node_modules/d3-ease/src/back.js","../node_modules/d3-ease/src/elastic.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-contour/src/array.js","../node_modules/d3-contour/src/density.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-fetch/src/xml.js","../node_modules/d3-force/src/center.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-force/src/link.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-random/src/defaultSource.js","../node_modules/d3-random/src/normal.js","../node_modules/d3-random/src/uniform.js","../node_modules/d3-random/src/irwinHall.js","../node_modules/d3-random/src/logNormal.js","../node_modules/d3/node_modules/d3-scale/src/array.js","../node_modules/d3-random/src/bates.js","../node_modules/d3-random/src/exponential.js","../node_modules/d3/node_modules/d3-scale/src/ordinal.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/d3-voronoi/src/Beach.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3/index.js"],"names":["Array","prototype","slice","noop","value","dispatch","t","i","n","arguments","length","_","Error","Dispatch","this","get","type","name","c","set","callback","concat","push","constructor","on","typename","types","T","trim","split","map","indexOf","hasOwnProperty","copy","call","that","args","apply","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","enter","exit","data","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","ascending","a","b","NaN","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","o","j","m","removeEventListener","capture","onAdd","wrap","d","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","x","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","nodes","empty","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","property","classed","text","html","append","create","insert","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","taskHead","taskTail","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","s","p","sublisteners","p0","clickDistance","sqrt","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","f","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","stop","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","start","state","tick","duration","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","_id","transition_interpolate","d3_interpolate_src","d3_color_src","Object","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","children","inherit","k","l","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","interpolate","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","pow","exponent","polyOut","polyInOut","PI","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","max","elasticIn","sin","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","cos","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","rows","N","I","eof","eol","token","replace","row","formatRow","formatValue","test","parse","convert","object","customConverter","format","columnSet","forEach","column","inferColumns","formatRows","csv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","src_text","input","init","fetch","then","dsvParse","undefined","parser","DOMParser","parseFromString","src_center","force","sx","sy","initialize","d3_force_src_constant","jiggle","random","add_add","tree","isNaN","xm","ym","xp","yp","right","bottom","_root","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","pop","cover","xz","yz","floor","z","visit","extent","find","radius","x2","y2","q","x3","y3","quads","d2","retainer","removeAll","visitAfter","collide","radii","strength","iterations","xi","yi","ri","ri2","prepare","quad","rj","r","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","count","bias","link","distance","alpha","d3_collection_src","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","_nodes","simulation","_alpha","_alphaMin","_alphaDecay","_alphaTarget","_velocityDecay","forces","stepper","step","fx","fy","initializeNodes","angle","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","adder","Adder","reset","_add","temp","valueOf","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","radians","atan","atan2","math_cos","exp","ceil","log","math_sin","sign","tan","acos","noop_noop","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianCross","cartesianNormalizeInPlace","rotationIdentity","round","invert","clip_buffer","line","lines","lineStart","lineEnd","rejoin","shift","result","pointEqual","Intersection","points","other","entry","segments","compareIntersection","startInside","stream","clip","segment","p1","rejoin_link","isSubject","array","sum","polygonContains","polygon","sinPhi","normal","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","src","clip_compareIntersection","sphere","pointLine","clean","ringSegments","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","direction","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","PathString","_string","string_circle","_circle","transformer","methods","TransformStream","azimuthalRaw","scale","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi2","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","src_defaultSource","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","src_array_array","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","d3_scale_src_array_slice","implicit","ordinal","range","domain","unknown","has","RedBlackTree","RedBlackNode","U","C","L","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","red","src_RedBlackTree","createEdge","v0","v1","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","end","endX","endY","nCells","dc","v00","v01","v11","v10","clipCells","edges","polygons","triangles","s0","e1","s1","_found","v2","Transform","translate","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","__webpack_require__","__webpack_exports__","d3_scale_chromatic_src"],"mappings":"2FAAO,aCAAA,MAAAC,UAAAC,MCAP,IAAAC,EAAA,CACAC,MAAA,cAGA,SAAAC,IACA,QAA8CC,EAA9CC,EAAA,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,GAAkDJ,EAAAC,IAAOD,EAAA,CACzD,KAAAD,EAAAG,UAAAF,GAAA,KAAAD,KAAAK,EAAA,UAAAC,MAAA,iBAAAN,GACAK,EAAAL,GAAA,GAGA,WAAAO,EAAAF,GAGA,SAAAE,EAAAF,GACAG,KAAAH,IA0EA,SAAAI,EAAAC,EAAAC,GACA,QAAAC,EAAAX,EAAA,EAAAC,EAAAQ,EAAAN,OAAqCH,EAAAC,IAAOD,EAC5C,IAAAW,EAAAF,EAAAT,IAAAU,SACA,OAAAC,EAAAd,MAKA,SAAAe,EAAAH,EAAAC,EAAAG,GACA,QAAAb,EAAA,EAAAC,EAAAQ,EAAAN,OAAkCH,EAAAC,IAAOD,EACzC,GAAAS,EAAAT,GAAAU,SAAA,CACAD,EAAAT,GAAAJ,EAAAa,IAAAd,MAAA,EAAAK,GAAAc,OAAAL,EAAAd,MAAAK,EAAA,IACA,MAQA,OAJA,MAAAa,GAAAJ,EAAAM,KAAA,CACAL,OACAb,MAAAgB,IAEAJ,EA9EAH,EAAAZ,UAAAI,EAAAJ,UAAA,CACAsB,YAAAV,EACAW,GAAA,SAAAC,EAAAL,GACA,IAEAd,EAlBAoB,EAgBAf,EAAAG,KAAAH,EACAgB,GAjBAD,EAiBAf,GAAAc,EAAA,IAhBAG,OAAAC,MAAA,SAAAC,IAAA,SAAAxB,GACA,IAAAW,EAAA,GACAV,EAAAD,EAAAyB,QAAA,KAEA,GADAxB,GAAA,IAAAU,EAAAX,EAAAJ,MAAAK,EAAA,GAAAD,IAAAJ,MAAA,EAAAK,IACAD,IAAAoB,EAAAM,eAAA1B,GAAA,UAAAM,MAAA,iBAAAN,GACA,OACAU,KAAAV,EACAW,WAWAV,GAAA,EACAC,EAAAmB,EAAAjB,OAEA,KAAAD,UAAAC,OAAA,IAUA,SAAAU,GAAA,oBAAAA,EAAA,UAAAR,MAAA,qBAAAQ,GAEA,OAAAb,EAAAC,GACA,GAAAF,GAAAmB,EAAAE,EAAApB,IAAAS,KAAAL,EAAAL,GAAAa,EAAAR,EAAAL,GAAAmB,EAAAR,KAAAG,QAAgF,SAAAA,EAAA,IAAAd,KAAAK,EAChFA,EAAAL,GAAAa,EAAAR,EAAAL,GAAAmB,EAAAR,KAAA,MAIA,OAAAH,KAjBA,OAAAP,EAAAC,GACA,IAAAF,GAAAmB,EAAAE,EAAApB,IAAAS,QAAAV,EAAAS,EAAAJ,EAAAL,GAAAmB,EAAAR,OAAA,OAAAX,GAkBA2B,KAAA,WACA,IAAAA,EAAA,GACAtB,EAAAG,KAAAH,EAEA,QAAAL,KAAAK,EACAsB,EAAA3B,GAAAK,EAAAL,GAAAJ,QAGA,WAAAW,EAAAoB,IAEAC,KAAA,SAAAlB,EAAAmB,GACA,IAAA3B,EAAAC,UAAAC,OAAA,aAAAF,EAAAF,EAAA8B,EAAA,IAAApC,MAAAQ,GAAAD,EAAA,EAAkFA,EAAAC,IAAOD,EACzF6B,EAAA7B,GAAAE,UAAAF,EAAA,GAEA,IAAAO,KAAAH,EAAAqB,eAAAhB,GAAA,UAAAJ,MAAA,iBAAAI,GAEA,IAAAT,EAAA,EAAAC,GAAAF,EAAAQ,KAAAH,EAAAK,IAAAN,OAA+CH,EAAAC,IAAOD,EACtDD,EAAAC,GAAAH,MAAAiC,MAAAF,EAAAC,IAGAC,MAAA,SAAArB,EAAAmB,EAAAC,GACA,IAAAtB,KAAAH,EAAAqB,eAAAhB,GAAA,UAAAJ,MAAA,iBAAAI,GAEA,QAAAV,EAAAQ,KAAAH,EAAAK,GAAAT,EAAA,EAAAC,EAAAF,EAAAI,OAAmDH,EAAAC,IAAOD,EAC1DD,EAAAC,GAAAH,MAAAiC,MAAAF,EAAAC,KA4Be,IAAAE,EAAA,EC/GRC,EAAA,+BACQC,EAAA,CACfC,IAAA,6BACAF,QACAG,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCCLeC,EAAA,SAAA5B,GACf,IAAA6B,EAAA7B,GAAA,GACAV,EAAAuC,EAAAf,QAAA,KAEA,OADAxB,GAAA,cAAAuC,EAAA7B,EAAAf,MAAA,EAAAK,MAAAU,IAAAf,MAAAK,EAAA,IACSiC,EAAUR,eAAAc,GAAA,CACnBC,MAAWP,EAAUM,GACrBE,MAAA/B,GACGA,GCSY,IAAAgC,EAAA,SAAAhC,GACf,IAAAiC,EAAiBL,EAAS5B,GAC1B,OAAAiC,EAAAF,MARA,SAAAE,GACA,kBACA,OAAApC,KAAAqC,cAAAC,gBAAAF,EAAAH,MAAAG,EAAAF,SAVA,SAAA/B,GACA,kBACA,IAAAoC,EAAAvC,KAAAqC,cACAG,EAAAxC,KAAAyC,aACA,OAAAD,IAAmBf,GAAKc,EAAAG,gBAAAD,eAA8ChB,EAAKc,EAAAI,cAAAxC,GAAAoC,EAAAD,gBAAAE,EAAArC,MAY3EiC,ICnBA,SAAAQ,KAEe,IAAAC,EAAA,SAAAC,GACf,aAAAA,EAAAF,EAAA,WACA,OAAA5C,KAAA+C,cAAAD,KCJA,SAASE,IACT,SAGe,IAAAC,EAAA,SAAAH,GACf,aAAAA,EAA4BE,EAAK,WACjC,OAAAhD,KAAAkD,iBAAAJ,KCNAK,EAAA,SAAAL,GACA,kBACA,OAAA9C,KAAAoD,QAAAN,KAIA,wBAAAP,SAAA,CACA,IAAMc,EAAOd,SAAAG,gBAEb,IAAOW,EAAOD,QAAA,CACd,IAAAE,EAAwBD,EAAOE,uBAA0BF,EAAOG,mBAAsBH,EAAOI,oBAAuBJ,EAAOK,iBAE3HP,EAAA,SAAAL,GACA,kBACA,OAAAQ,EAAAlC,KAAApB,KAAA8C,MAMe,IAAAa,EAAA,ECpBAC,EAAA,SAAAC,GACf,WAAA3E,MAAA2E,EAAAjE,SCIO,SAAAkE,EAAAC,EAAAC,GACPhE,KAAAqC,cAAA0B,EAAA1B,cACArC,KAAAyC,aAAAsB,EAAAtB,aACAzC,KAAAiE,MAAA,KACAjE,KAAAkE,QAAAH,EACA/D,KAAAmE,SAAAH,EAEAF,EAAA3E,UAAA,CACAsB,YAAAqD,EACAM,YAAA,SAAAC,GACA,OAAArE,KAAAkE,QAAAI,aAAAD,EAAArE,KAAAiE,QAEAK,aAAA,SAAAD,EAAAE,GACA,OAAAvE,KAAAkE,QAAAI,aAAAD,EAAAE,IAEAxB,cAAA,SAAAD,GACA,OAAA9C,KAAAkE,QAAAnB,cAAAD,IAEAI,iBAAA,SAAAJ,GACA,OAAA9C,KAAAkE,QAAAhB,iBAAAJ,KCxBe,ICGf0B,EAAA,IAEA,SAAAC,EAAAV,EAAAW,EAAAC,EAAAd,EAAAe,EAAAC,GAQA,IAPA,IACAC,EADArF,EAAA,EAEAsF,EAAAL,EAAA9E,OACAoF,EAAAH,EAAAjF,OAIQH,EAAAuF,IAAgBvF,GACxBqF,EAAAJ,EAAAjF,KACAqF,EAAAX,SAAAU,EAAApF,GACAoE,EAAApE,GAAAqF,GAEAH,EAAAlF,GAAA,IAAqBqE,EAASC,EAAAc,EAAApF,IAK9B,KAAQA,EAAAsF,IAAiBtF,GACzBqF,EAAAJ,EAAAjF,MACAmF,EAAAnF,GAAAqF,GAKA,SAAAG,EAAAlB,EAAAW,EAAAC,EAAAd,EAAAe,EAAAC,EAAAK,GACA,IAAAzF,EACAqF,EAKAK,EAJAC,EAAA,GACAL,EAAAL,EAAA9E,OACAoF,EAAAH,EAAAjF,OACAyF,EAAA,IAAAnG,MAAA6F,GAIA,IAAAtF,EAAA,EAAaA,EAAAsF,IAAiBtF,GAC9BqF,EAAAJ,EAAAjF,MACA4F,EAAA5F,GAAA0F,EAAAX,EAAAU,EAAA9D,KAAA0D,IAAAX,SAAA1E,EAAAiF,GAEAS,KAAAC,EACAR,EAAAnF,GAAAqF,EAEAM,EAAAD,GAAAL,GAQA,IAAArF,EAAA,EAAaA,EAAAuF,IAAgBvF,GAG7BqF,EAAAM,EAFAD,EAAAX,EAAAU,EAAA9D,KAAA2C,EAAAc,EAAApF,KAAAoF,MAGAhB,EAAApE,GAAAqF,EACAA,EAAAX,SAAAU,EAAApF,GACA2F,EAAAD,GAAA,MAEAR,EAAAlF,GAAA,IAAqBqE,EAASC,EAAAc,EAAApF,IAK9B,IAAAA,EAAA,EAAaA,EAAAsF,IAAiBtF,GAC9BqF,EAAAJ,EAAAjF,KAAA2F,EAAAC,EAAA5F,MAAAqF,IACAF,EAAAnF,GAAAqF,GCjDA,SAAAQ,EAAAC,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,ICkBe,ICxCAC,EAAA,SAAAZ,GACf,OAAAA,EAAAzC,eAAAyC,EAAAzC,cAAAsD,aACAb,EAAAvC,UAAAuC,GACAA,EAAAa,aCqBO,SAAAC,EAAAd,EAAA3E,GACP,OAAA2E,EAAAe,MAAAC,iBAAA3F,IAA8CuF,EAAWZ,GAAAiB,iBAAAjB,EAAA,MAAAgB,iBAAA3F,GCzBzD,SAAA6F,EAAAC,GACA,OAAAA,EAAAnF,OAAAC,MAAA,SAGA,SAAAmF,EAAApB,GACA,OAAAA,EAAAoB,WAAA,IAAAC,EAAArB,GAGA,SAAAqB,EAAArB,GACA9E,KAAAoG,MAAAtB,EACA9E,KAAAqG,OAAAL,EAAAlB,EAAAwB,aAAA,cA2BA,SAAAC,EAAAzB,EAAA0B,GAKA,IAJA,IAAAC,EAAAP,EAAApB,GACArF,GAAA,EACAC,EAAA8G,EAAA5G,SAEAH,EAAAC,GACA+G,EAAAC,IAAAF,EAAA/G,IAIA,SAAAkH,EAAA7B,EAAA0B,GAKA,IAJA,IAAAC,EAAAP,EAAApB,GACArF,GAAA,EACAC,EAAA8G,EAAA5G,SAEAH,EAAAC,GACA+G,EAAAG,OAAAJ,EAAA/G,IAxCA0G,EAAAhH,UAAA,CACAuH,IAAA,SAAAvG,GACAH,KAAAqG,OAAApF,QAAAd,GAEA,IACAH,KAAAqG,OAAA7F,KAAAL,GAEAH,KAAAoG,MAAAS,aAAA,QAAA7G,KAAAqG,OAAAS,KAAA,QAGAF,OAAA,SAAAzG,GACA,IAAAV,EAAAO,KAAAqG,OAAApF,QAAAd,GAEAV,GAAA,IACAO,KAAAqG,OAAAU,OAAAtH,EAAA,GAEAO,KAAAoG,MAAAS,aAAA,QAAA7G,KAAAqG,OAAAS,KAAA,QAGAE,SAAA,SAAA7G,GACA,OAAAH,KAAAqG,OAAApF,QAAAd,IAAA,ICjCA,SAAA8G,IACAjH,KAAAkH,YAAA,GCDA,SAAAC,IACAnH,KAAAoH,UAAA,GCDA,SAAAC,IACArH,KAAAsH,aAAAtH,KAAAuH,WAAAnD,YAAApE,MCDA,SAAAwH,IACAxH,KAAAyH,iBAAAzH,KAAAuH,WAAAjD,aAAAtE,UAAAuH,WAAAG,YCEA,SAAAC,IACA,YCJA,SAAAf,IACA,IAAA7C,EAAA/D,KAAAuH,WACAxD,KAAA6D,YAAA5H,MCFA,SAAA6H,IACA,OAAA7H,KAAAuH,WAAAjD,aAAAtE,KAAA8H,WAAA,GAAA9H,KAAAsH,aAGA,SAAAS,IACA,OAAA/H,KAAAuH,WAAAjD,aAAAtE,KAAA8H,WAAA,GAAA9H,KAAAsH,aAGe,ICRfU,EAAA,GACWC,EAAK,KAEhB,qBAAA1F,WAGA,iBAFaA,SAAAG,kBAGbsF,EAAA,CACAE,WAAA,YACAC,WAAA,cAKA,SAAAC,EAAAC,EAAAC,EAAA5D,GAEA,OADA2D,EAAAE,EAAAF,EAAAC,EAAA5D,GACA,SAAA8D,GACA,IAAAC,EAAAD,EAAAE,cAEAD,QAAAzI,MAAA,EAAAyI,EAAAE,wBAAA3I,QACAqI,EAAAjH,KAAApB,KAAAwI,IAKA,SAAAD,EAAAF,EAAAC,EAAA5D,GACA,gBAAAkE,GACA,IAAAC,EAAiBZ,EAEbA,EAAKW,EAET,IACAP,EAAAjH,KAAApB,UAAAmE,SAAAmE,EAAA5D,GACK,QACCuD,EAAKY,IAiBX,SAAAC,EAAAnI,GACA,kBACA,IAAAD,EAAAV,KAAA+I,KACA,GAAArI,EAAA,CAEA,QAAAsI,EAAAC,EAAA,EAAAxJ,GAAA,EAAAyJ,EAAAxI,EAAAd,OAA6CqJ,EAAAC,IAAOD,EACpDD,EAAAtI,EAAAuI,GAAAtI,EAAAT,MAAA8I,EAAA9I,OAAAS,EAAAT,MAAA8I,EAAA7I,OAAAQ,EAAAR,KAGAO,IAAAjB,GAAAuJ,EAFAhJ,KAAAmJ,oBAAAH,EAAA9I,KAAA8I,EAAAX,SAAAW,EAAAI,WAMA3J,EAAAiB,EAAAd,OAAAH,SAA2BO,KAAA+I,OAI3B,SAAAM,EAAA1I,EAAArB,EAAA8J,GACA,IAAAE,EAAAtB,EAAA9G,eAAAP,EAAAT,MAAAkI,EAAAG,EACA,gBAAAgB,EAAA9J,EAAAiF,GACA,IACAsE,EADAtI,EAAAV,KAAA+I,KAEAV,EAAAiB,EAAAhK,EAAAG,EAAAiF,GACA,GAAAhE,EAAA,QAAAuI,EAAA,EAAAC,EAAAxI,EAAAd,OAA0CqJ,EAAAC,IAAOD,EACjD,IAAAD,EAAAtI,EAAAuI,IAAA/I,OAAAS,EAAAT,MAAA8I,EAAA7I,OAAAQ,EAAAR,KAIA,OAHAH,KAAAmJ,oBAAAH,EAAA9I,KAAA8I,EAAAX,SAAAW,EAAAI,SACApJ,KAAAwJ,iBAAAR,EAAA9I,KAAA8I,EAAAX,WAAAW,EAAAI,gBACAJ,EAAA1J,SAIAU,KAAAwJ,iBAAA7I,EAAAT,KAAAmI,EAAAe,GACAJ,EAAA,CACA9I,KAAAS,EAAAT,KACAC,KAAAQ,EAAAR,KACAb,QACA+I,WACAe,WAEA1I,EAA6BA,EAAAF,KAAAwI,GAA7BhJ,KAAA+I,KAAA,CAAAC,IAgCO,SAAAS,EAAAb,EAAAP,EAAAhH,EAAAC,GACP,IAAAuH,EAAeZ,EACfW,EAAAc,YAAuBzB,EACrBA,EAAKW,EAEP,IACA,OAAAP,EAAA9G,MAAAF,EAAAC,GACG,QACC2G,EAAKY,GChIT,SAAAc,EAAA7E,EAAA5E,EAAA0J,GACA,IAAAC,EAAenE,EAAWZ,GAC1B0D,EAAAqB,EAAAC,YAEA,oBAAAtB,EACAA,EAAA,IAAAA,EAAAtI,EAAA0J,IAEApB,EAAAqB,EAAAtH,SAAAwH,YAAA,SACAH,GAAApB,EAAAwB,UAAA9J,EAAA0J,EAAAK,QAAAL,EAAAM,YAAA1B,EAAA2B,OAAAP,EAAAO,QAAuG3B,EAAAwB,UAAA9J,GAAA,OAGvG4E,EAAA6E,cAAAnB,GAee,ICEJ4B,EAAI,OACR,SAAAC,EAAAC,EAAAC,GACPvK,KAAAwK,QAAAF,EACAtK,KAAAyK,SAAAF,EAGA,SAASG,IACT,WAAAL,EAAA,EAAA9H,SAAAG,kBAAqD0H,GAGrDC,EAAAlL,UAAsBuL,EAASvL,UAAA,CAC/BsB,YAAA4J,EACAM,OCxCe,SAAAA,GACf,oBAAAA,MAA6C9H,EAAQ8H,IAErD,QAAAL,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,IAAA1L,MAAAgK,GAAAD,EAAA,EAAqFA,EAAAC,IAAOD,EAC5F,QAAAnE,EAAA+F,EAAAnG,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAkL,EAAAF,EAAA3B,GAAA,IAAA/J,MAAAQ,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHqF,EAAAJ,EAAAjF,MAAAoL,EAAAF,EAAAvJ,KAAA0D,IAAAX,SAAA1E,EAAAiF,MACA,aAAAI,IAAA+F,EAAA1G,SAAAW,EAAAX,UACA2G,EAAArL,GAAAoL,GAKA,WAAaR,EAASO,EAAA5K,KAAAyK,WD6BtBM,UEzCe,SAAAJ,GACf,oBAAAA,MAA6C1H,EAAW0H,IAExD,QAAAL,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,GAAAL,EAAA,GAAAtB,EAAA,EAAyFA,EAAAC,IAAOD,EAChG,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAH,EAAA,EAA8DA,EAAAC,IAAOD,GACrEqF,EAAAJ,EAAAjF,MACAmL,EAAApK,KAAAmK,EAAAvJ,KAAA0D,IAAAX,SAAA1E,EAAAiF,IACA6F,EAAA/J,KAAAsE,IAKA,WAAauF,EAASO,EAAAL,IF8BtBS,OG1Ce,SAAAC,GACf,oBAAAA,MAA2CtH,EAAOsH,IAElD,QAAAX,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,IAAA1L,MAAAgK,GAAAD,EAAA,EAAqFA,EAAAC,IAAOD,EAC5F,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAkL,EAAAF,EAAA3B,GAAA,GAAAxJ,EAAA,EAA4FA,EAAAC,IAAOD,GACnGqF,EAAAJ,EAAAjF,KAAAwL,EAAA7J,KAAA0D,IAAAX,SAAA1E,EAAAiF,IACAoG,EAAAtK,KAAAsE,GAKA,WAAauF,EAASO,EAAA5K,KAAAyK,WHgCtB5F,Kf8Be,SAAAvF,EAAA4F,GACf,IAAA5F,EAKA,OAJAuF,EAAA,IAAA3F,MAAAc,KAAAkL,QAAAjC,GAAA,EACAjJ,KAAAmL,KAAA,SAAA5B,GACA1E,IAAAoE,GAAAM,IAEA1E,EAGA,IDpFeuG,ECoFfC,EAAAnG,EAAAD,EAAAR,EACA8F,EAAAvK,KAAAyK,SACAH,EAAAtK,KAAAwK,QACA,oBAAAlL,IDvFe8L,ECuFoC9L,EAAnDA,EDtFA,WACA,OAAA8L,ICuFA,QAAAlC,EAAAoB,EAAA1K,OAAAiE,EAAA,IAAA3E,MAAAgK,GAAAvE,EAAA,IAAAzF,MAAAgK,GAAAtE,EAAA,IAAA1F,MAAAgK,GAAAD,EAAA,EAAsGA,EAAAC,IAAOD,EAAA,CAC7G,IAAAlF,EAAAwG,EAAAtB,GACAvE,EAAA4F,EAAArB,GACAlE,EAAAL,EAAA9E,OACAiF,EAAAvF,EAAA8B,KAAA2C,OAAAI,SAAA8E,EAAAsB,GACAvF,EAAAH,EAAAjF,OACA0L,EAAA3G,EAAAsE,GAAA,IAAA/J,MAAA8F,GACAuG,EAAA1H,EAAAoF,GAAA,IAAA/J,MAAA8F,GAEAqG,EAAAtH,EAAAW,EAAA4G,EAAAC,EADA3G,EAAAqE,GAAA,IAAA/J,MAAA6F,GACAF,EAAAK,GAIA,QAAAsG,EAAAjH,EAAAkH,EAAA,EAAAC,EAAA,EAA4CD,EAAAzG,IAAiByG,EAC7D,GAAAD,EAAAF,EAAAG,GAAA,CAGA,IAFAA,GAAAC,MAAAD,EAAA,KAEAlH,EAAAgH,EAAAG,SAAA1G,IAIAwG,EAAAvH,MAAAM,GAAA,MAQA,OAHAV,EAAA,IAAewG,EAASxG,EAAA0G,IACxBoB,OAAAhH,EACAd,EAAA+H,MAAAhH,EACAf,GexEAc,MjB5CA,WACA,WAAa0F,EAASrK,KAAA2L,QAAA3L,KAAAwK,QAAAxJ,IAAiC4C,GAAM5D,KAAAyK,WiB4C7D7F,KI7Ce,WACf,WAAayF,EAASrK,KAAA4L,OAAA5L,KAAAwK,QAAAxJ,IAAgC4C,GAAM5D,KAAAyK,WJ6C5DoB,MK/Ce,SAAAC,GACf,QAAAC,EAAA/L,KAAAwK,QAAAwB,EAAAF,EAAAtB,QAAAyB,EAAAF,EAAAnM,OAAAsM,EAAAF,EAAApM,OAAAsJ,EAAAiD,KAAAC,IAAAH,EAAAC,GAAAG,EAAA,IAAAnN,MAAA+M,GAAAhD,EAAA,EAA8JA,EAAAC,IAAOD,EACrK,QAAAnE,EAAAwH,EAAAP,EAAA9C,GAAAsD,EAAAP,EAAA/C,GAAAvJ,EAAA4M,EAAA1M,OAAAiM,EAAAQ,EAAApD,GAAA,IAAA/J,MAAAQ,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HqF,EAAAwH,EAAA7M,IAAA8M,EAAA9M,MACAoM,EAAApM,GAAAqF,GAKA,KAAQmE,EAAAgD,IAAQhD,EAChBoD,EAAApD,GAAA8C,EAAA9C,GAGA,WAAaoB,EAASgC,EAAArM,KAAAyK,WLmCtB+B,MMjDe,WACf,QAAAlC,EAAAtK,KAAAwK,QAAAvB,GAAA,EAAAC,EAAAoB,EAAA1K,SAA4DqJ,EAAAC,GAC5D,QAAApE,EAAAJ,EAAA4F,EAAArB,GAAAxJ,EAAAiF,EAAA9E,OAAA,EAAA2E,EAAAG,EAAAjF,KAA4EA,GAAA,IAC5EqF,EAAAJ,EAAAjF,MACA8E,OAAAO,EAAAwC,aAAA/C,EAAAgD,WAAAjD,aAAAQ,EAAAP,GACAA,EAAAO,GAKA,OAAA9E,MNwCAyM,KdjDe,SAAAC,GAGf,SAAAC,EAAApH,EAAAC,GACA,OAAAD,GAAAC,EAAAkH,EAAAnH,EAAApB,SAAAqB,EAAArB,WAAAoB,GAAAC,EAHAkH,MAAApH,GAMA,QAAAgF,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgN,EAAA,IAAA1N,MAAAgK,GAAAD,EAAA,EAAsFA,EAAAC,IAAOD,EAAA,CAC7F,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAiN,EAAAD,EAAA3D,GAAA,IAAA/J,MAAAQ,GAAAD,EAAA,EAAwGA,EAAAC,IAAOD,GAC/GqF,EAAAJ,EAAAjF,MACAoN,EAAApN,GAAAqF,GAIA+H,EAAAJ,KAAAE,GAGA,WAAatC,EAASuC,EAAA5M,KAAAyK,UAAA+B,SciCtBpL,KOnDe,WACf,IAAAd,EAAAX,UAAA,GAGA,OAFAA,UAAA,GAAAK,KACAM,EAAAiB,MAAA,KAAA5B,WACAK,MPgDA8M,MQpDe,WACf,IAAAA,EAAA,IAAA5N,MAAAc,KAAAkL,QACAzL,GAAA,EAIA,OAHAO,KAAAmL,KAAA,WACA2B,IAAArN,GAAAO,OAEA8M,GR+CAhI,KSrDe,WACf,QAAAwF,EAAAtK,KAAAwK,QAAAvB,EAAA,EAAAC,EAAAoB,EAAA1K,OAA2DqJ,EAAAC,IAAOD,EAClE,QAAAvE,EAAA4F,EAAArB,GAAAxJ,EAAA,EAAAC,EAAAgF,EAAA9E,OAAwDH,EAAAC,IAAOD,EAAA,CAC/D,IAAAqF,EAAAJ,EAAAjF,GACA,GAAAqF,EAAA,OAAAA,EAIA,aT8CAoG,KUtDe,WACf,IAAAA,EAAA,EAIA,OAHAlL,KAAAmL,KAAA,aACAD,IAEAA,GVkDA6B,MWvDe,WACf,OAAA/M,KAAA8E,QXuDAqG,KYxDe,SAAA7K,GACf,QAAAgK,EAAAtK,KAAAwK,QAAAvB,EAAA,EAAAC,EAAAoB,EAAA1K,OAA2DqJ,EAAAC,IAAOD,EAClE,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAxJ,EAAA,EAAAC,EAAAgF,EAAA9E,OAA8DH,EAAAC,IAAOD,GACrEqF,EAAAJ,EAAAjF,KAAAa,EAAAc,KAAA0D,IAAAX,SAAA1E,EAAAiF,GAIA,OAAA1E,MZkDAgN,KbjBe,SAAA7M,EAAAb,GACf,IAAA8C,EAAiBL,EAAS5B,GAE1B,GAAAR,UAAAC,OAAA,GACA,IAAAkF,EAAA9E,KAAA8E,OACA,OAAA1C,EAAAF,MAAA4C,EAAAmI,eAAA7K,EAAAH,MAAAG,EAAAF,OAAA4C,EAAAwB,aAAAlE,GAGA,OAAApC,KAAAmL,MAAA,MAAA7L,EAAA8C,EAAAF,MAxCA,SAAAE,GACA,kBACApC,KAAAkN,kBAAA9K,EAAAH,MAAAG,EAAAF,SARA,SAAA/B,GACA,kBACAH,KAAAmN,gBAAAhN,KA4CA,oBAAAb,EAAA8C,EAAAF,MAfA,SAAAE,EAAA9C,GACA,kBACA,IAAA8N,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACA,MAAAyN,EAAApN,KAAAkN,kBAAA9K,EAAAH,MAAAG,EAAAF,OAA0ElC,KAAAqN,eAAAjL,EAAAH,MAAAG,EAAAF,MAAAkL,KAV1E,SAAAjN,EAAAb,GACA,kBACA,IAAA8N,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACA,MAAAyN,EAAApN,KAAAmN,gBAAAhN,GAA8CH,KAAA6G,aAAA1G,EAAAiN,KAmB9ChL,EAAAF,MA5BA,SAAAE,EAAA9C,GACA,kBACAU,KAAAqN,eAAAjL,EAAAH,MAAAG,EAAAF,MAAA5C,KARA,SAAAa,EAAAb,GACA,kBACAU,KAAA6G,aAAA1G,EAAAb,MAgCA8C,EAAA9C,KaUAuG,MXrCe,SAAA1F,EAAAb,EAAAgO,GACf,OAAA3N,UAAAC,OAAA,EAAAI,KAAAmL,MAAA,MAAA7L,EApBA,SAAAa,GACA,kBACAH,KAAA6F,MAAA0H,eAAApN,KAkBA,oBAAAb,EARA,SAAAa,EAAAb,EAAAgO,GACA,kBACA,IAAAF,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACA,MAAAyN,EAAApN,KAAA6F,MAAA0H,eAAApN,GAAmDH,KAAA6F,MAAA2H,YAAArN,EAAAiN,EAAAE,KATnD,SAAAnN,EAAAb,EAAAgO,GACA,kBACAtN,KAAA6F,MAAA2H,YAAArN,EAAAb,EAAAgO,MAYAnN,EAAAb,EAAA,MAAAgO,EAAA,GAAAA,IAAA1H,EAAA5F,KAAA8E,OAAA3E,IWqCAsN,SaxCe,SAAAtN,EAAAb,GACf,OAAAK,UAAAC,OAAA,EAAAI,KAAAmL,MAAA,MAAA7L,EApBA,SAAAa,GACA,yBACAH,KAAAG,KAkBA,oBAAAb,EARA,SAAAa,EAAAb,GACA,kBACA,IAAA8N,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACA,MAAAyN,SAAApN,KAAAG,GAAqCH,KAAAG,GAAAiN,IATrC,SAAAjN,EAAAb,GACA,kBACAU,KAAAG,GAAAb,KAYAa,EAAAb,IAAAU,KAAA8E,OAAA3E,IbwCAuN,QVee,SAAAvN,EAAAb,GACf,IAAAkH,EAAAR,EAAA7F,EAAA,IAEA,GAAAR,UAAAC,OAAA,GAKA,IAJA,IAAA6G,EAAAP,EAAAlG,KAAA8E,QACArF,GAAA,EACAC,EAAA8G,EAAA5G,SAEAH,EAAAC,GACA,IAAA+G,EAAAO,SAAAR,EAAA/G,IAAA,SAGA,SAGA,OAAAO,KAAAmL,MAAA,oBAAA7L,EArBA,SAAAkH,EAAAlH,GACA,mBACAA,EAAAiC,MAAAvB,KAAAL,WAAA4G,EAAAI,GAAA3G,KAAAwG,KAmBAlH,EAjCA,SAAAkH,GACA,kBACAD,EAAAvG,KAAAwG,KAIA,SAAAA,GACA,kBACAG,EAAA3G,KAAAwG,MAyBAA,EAAAlH,KU7BAqO,KT5Ce,SAAArO,GACf,OAAAK,UAAAC,OAAAI,KAAAmL,KAAA,MAAA7L,EAAA2H,GAAA,oBAAA3H,EARA,SAAAA,GACA,kBACA,IAAA8N,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACAK,KAAAkH,YAAA,MAAAkG,EAAA,GAAAA,IATA,SAAA9N,GACA,kBACAU,KAAAkH,YAAA5H,KAYAA,IAAAU,KAAA8E,OAAAoC,aS4CA0G,KR7Ce,SAAAtO,GACf,OAAAK,UAAAC,OAAAI,KAAAmL,KAAA,MAAA7L,EAAA6H,GAAA,oBAAA7H,EARA,SAAAA,GACA,kBACA,IAAA8N,EAAA9N,EAAAiC,MAAAvB,KAAAL,WACAK,KAAAoH,UAAA,MAAAgG,EAAA,GAAAA,IATA,SAAA9N,GACA,kBACAU,KAAAoH,UAAA9H,KAYAA,IAAAU,KAAA8E,OAAAsC,WQ6CAC,MP3De,WACf,OAAArH,KAAAmL,KAAA9D,IO2DAG,MN5De,WACf,OAAAxH,KAAAmL,KAAA3D,IM4DAqG,OchEe,SAAA1N,GACf,IAAA2N,EAAA,oBAAA3N,IAAmDgC,EAAOhC,GAC1D,OAAAH,KAAA2K,OAAA,WACA,OAAA3K,KAAAoE,YAAA0J,EAAAvM,MAAAvB,KAAAL,ed8DAoO,OL3De,SAAA5N,EAAA6N,GACf,IAAAF,EAAA,oBAAA3N,IAAmDgC,EAAOhC,GAC1DwK,EAAA,MAAAqD,EAAArG,EAAA,oBAAAqG,IAAuFnL,EAAQmL,GAC/F,OAAAhO,KAAA2K,OAAA,WACA,OAAA3K,KAAAsE,aAAAwJ,EAAAvM,MAAAvB,KAAAL,WAAAgL,EAAApJ,MAAAvB,KAAAL,YAAA,SKwDAiH,OJ9De,WACf,OAAA5G,KAAAmL,KAAAvE,II8DAqH,MH5De,SAAAC,GACf,OAAAlO,KAAA2K,OAAAuD,EAAAnG,EAAAF,IG4DA7D,MerEe,SAAA1E,GACf,OAAAK,UAAAC,OAAAI,KAAAyN,SAAA,WAAAnO,GAAAU,KAAA8E,OAAAX,UfqEAzD,GFwBe,SAAAC,EAAArB,EAAA8J,GACf,IACA3J,EAEAD,EAHA2O,EAxDA,SAAuBA,GACvB,OAAAA,EAAArN,OAAAC,MAAA,SAAAC,IAAA,SAAAxB,GACA,IAAAW,EAAA,GACAV,EAAAD,EAAAyB,QAAA,KAEA,OADAxB,GAAA,IAAAU,EAAAX,EAAAJ,MAAAK,EAAA,GAAAD,IAAAJ,MAAA,EAAAK,IACA,CACAS,KAAAV,EACAW,UAiDkBiO,CAAczN,EAAA,IAEhCjB,EAAAyO,EAAAvO,OAGA,KAAAD,UAAAC,OAAA,IAgBA,IAHAc,EAAApB,EAAA+J,EAAAP,EACA,MAAAM,OAAA,GAEA3J,EAAA,EAAaA,EAAAC,IAAOD,EACpBO,KAAAmL,KAAAzK,EAAAyN,EAAA1O,GAAAH,EAAA8J,IAGA,OAAApJ,KAnBA,IAAAU,EAAAV,KAAA8E,OAAAiE,KAEA,GAAArI,EAAA,QAAAsI,EAAAC,EAAA,EAAAC,EAAAxI,EAAAd,OAA6CqJ,EAAAC,IAAOD,EACpD,IAAAxJ,EAAA,EAAAuJ,EAAAtI,EAAAuI,GAA4BxJ,EAAAC,IAAOD,EACnC,IAAAD,EAAA2O,EAAA1O,IAAAS,OAAA8I,EAAA9I,MAAAV,EAAAW,OAAA6I,EAAA7I,KACA,OAAA6I,EAAA1J,OEnCAC,SD3Ce,SAAAW,EAAA0J,GACf,OAAA5J,KAAAmL,MAAA,oBAAAvB,EAPA,SAAA1J,EAAA0J,GACA,kBACA,OAAAD,EAAA3J,KAAAE,EAAA0J,EAAArI,MAAAvB,KAAAL,cARA,SAAAO,EAAA0J,GACA,kBACA,OAAAD,EAAA3J,KAAAE,EAAA0J,MAWA1J,EAAA0J,MC4Ce,IAAAyE,GAAA,EgBxEAC,GAAA,SAAAxL,GACf,wBAAAA,EAAA,IAA4CuH,EAAS,EAAA9H,SAAAQ,cAAAD,KAAA,CAAAP,SAAAG,kBAAA,IAAyE2H,EAAS,EAAAvH,IAAesH,ICFtJmE,GAAA,EAKA,SAAAC,KACAxO,KAAAH,EAAA,OAAA0O,IAAAE,SAAA,IAGAD,GAAArP,UARe,WACf,WAAAqP,IAOArP,UAAA,CACAsB,YAAA+N,GACAvO,IAAA,SAAA6E,GAGA,IAFA,IAAA4J,EAAA1O,KAAAH,IAEA6O,KAAA5J,IACA,KAAAA,IAAAyC,YAAA,OAGA,OAAAzC,EAAA4J,IAEArO,IAAA,SAAAyE,EAAAxF,GACA,OAAAwF,EAAA9E,KAAAH,GAAAP,GAEAsH,OAAA,SAAA9B,GACA,OAAA9E,KAAAH,KAAAiF,YAAA9E,KAAAH,IAEA4O,SAAA,WACA,OAAAzO,KAAAH,IC1Be,IAAA6J,GAAA,WAIf,IAHA,IACAiF,EADAC,EAAgB3G,EAGhB0G,EAAAC,EAAAlF,aACAkF,EAAAD,EAGA,OAAAC,GCTeC,GAAA,SAAA/J,EAAA0D,GACf,IAAA7G,EAAAmD,EAAAgK,iBAAAhK,EAEA,GAAAnD,EAAAoN,eAAA,CACA,IAAAC,EAAArN,EAAAoN,iBAGA,OAFAC,EAAA5D,EAAA5C,EAAAyG,QAAAD,EAAAE,EAAA1G,EAAA2G,QAEA,EADAH,IAAAI,gBAAAtK,EAAAuK,eAAAC,YACAlE,EAAA4D,EAAAE,GAGA,IAAAK,EAAAzK,EAAA0K,wBACA,OAAAhH,EAAAyG,QAAAM,EAAAE,KAAA3K,EAAA4K,WAAAlH,EAAA2G,QAAAI,EAAAI,IAAA7K,EAAA8K,YCTeC,GAAA,SAAA/K,GACf,IAAA0D,EAAckB,KAEd,OADAlB,EAAAsH,iBAAAtH,IAAAsH,eAAA,IACSjB,GAAK/J,EAAA0D,ICJCuH,GAAA,SAAAjN,GACf,wBAAAA,EAAA,IAA4CuH,EAAS,CAAA9H,SAAAW,iBAAAJ,IAAA,CAAAP,SAAAG,kBAAA,IAA0E2H,EAAS,OAAAvH,EAAA,GAAAA,GAAqCsH,ICA9J4F,GAAA,SAAAlL,EAAAmL,EAAAC,GACfvQ,UAAAC,OAAA,IAAAsQ,EAAAD,IAA4DvG,KAAWoG,gBAEvE,QAAAK,EAAA1Q,EAAA,EAAAC,EAAAuQ,IAAArQ,OAAA,EAA0DH,EAAAC,IAAOD,EACjE,IAAA0Q,EAAAF,EAAAxQ,IAAAyQ,eACA,OAAarB,GAAK/J,EAAAqL,GAIlB,aCVO,SAAAC,KACLnI,EAAKoI,2BAEQ,IAAAC,GAAA,WACbrI,EAAKsI,iBACLtI,EAAKoI,4BCJQG,GAAA,SAAAC,GACf,IAAAC,EAAAD,EAAAlO,SAAAG,gBACAoJ,EAAkBwC,GAAMmC,GAAA/P,GAAA,iBAA4B4P,IAAO,GAE3D,kBAAAI,EACA5E,EAAApL,GAAA,mBAAqC4P,IAAO,IAE5CI,EAAAC,WAAAD,EAAA7K,MAAA+K,cACAF,EAAA7K,MAAA+K,cAAA,SAGO,SAAAC,GAAAJ,EAAAK,GACP,IAAAJ,EAAAD,EAAAlO,SAAAG,gBACAoJ,EAAkBwC,GAAMmC,GAAA/P,GAAA,uBAExBoQ,IACAhF,EAAApL,GAAA,aAA+B4P,IAAO,GACtCS,WAAA,WACAjF,EAAApL,GAAA,oBACK,IAGL,kBAAAgQ,EACA5E,EAAApL,GAAA,0BAEAgQ,EAAA7K,MAAA+K,cAAAF,EAAAC,kBACAD,EAAAC,YC5Be,IAAAK,GAAA,SAAA5F,GACf,kBACA,OAAAA,ICFe,SAAA6F,GAAAC,EAAAhR,EAAAiR,EAAAzC,EAAA0C,EAAAhG,EAAA8D,EAAAmC,EAAAC,EAAA/R,GACfS,KAAAkR,SACAlR,KAAAE,OACAF,KAAAmR,UACAnR,KAAAkQ,WAAAxB,EACA1O,KAAAoR,SACApR,KAAAoL,IACApL,KAAAkP,IACAlP,KAAAqR,KACArR,KAAAsR,KACAtR,KAAAH,EAAAN,ECHA,SAAAgS,KACA,OAAUtJ,EAAKuJ,OAGf,SAAAC,KACA,OAAAzR,KAAAuH,WAGA,SAAAmK,GAAAnI,GACA,aAAAA,EAAA,CACA6B,EAAOnD,EAAKmD,EACZ8D,EAAOjH,EAAKiH,GACT3F,EAGH,SAAAoI,KACA,uBAAA3R,KDVAiR,GAAA9R,UAAAuB,GAAA,WACA,IAAApB,EAAAU,KAAAH,EAAAa,GAAAa,MAAAvB,KAAAH,EAAAF,WAEA,OAAAL,IAAAU,KAAAH,EAAAG,KAAAV,GCUe,IClBfsS,GACAC,GDiBeC,GAAA,WACf,IAOAC,EACAC,EACAC,EACAC,EAVAlH,EAAAuG,GACAY,EAAAV,GACAN,EAAAO,GACAU,EAAAT,GACAU,EAAA,GACAC,EAAkB9Q,EAAQ,sBAC1B4P,EAAA,EAKAmB,EAAA,EAEA,SAAAC,EAAA1G,GACAA,EAAApL,GAAA,iBAAA+R,GAAAzH,OAAAoH,GAAA1R,GAAA,kBAAAgS,GAAAhS,GAAA,iBAAAiS,GAAAjS,GAAA,iCAAAkS,GAAA/M,MAAA,uBAAAA,MAAA,+CAGA,SAAA4M,IACA,IAAAP,GAAAlH,EAAAzJ,MAAAvB,KAAAL,WAAA,CACA,IAAAkT,EAAAC,EAAA,QAAAX,EAAA5Q,MAAAvB,KAAAL,WAAyEkQ,GAAK7P,KAAAL,WAC9EkT,IACIvE,GAAOrG,EAAKwI,MAAA/P,GAAA,iBAAAqS,GAAA,GAAArS,GAAA,eAAAsS,GAAA,GACZxC,GAAOvI,EAAKwI,MACZL,KACJ6B,GAAA,EACAF,EAAiB9J,EAAKgH,QACtB+C,EAAiB/J,EAAKkH,QACtB0D,EAAA,WAGA,SAAAE,IAGA,GAFIzC,MAEJ2B,EAAA,CACA,IAAAZ,EAAepJ,EAAKgH,QAAA8C,EACpBT,EAAerJ,EAAKkH,QAAA6C,EACpBC,EAAAZ,IAAAC,IAAAiB,EAGAF,EAAAxC,MAAA,QAGA,SAAAmD,IACI1E,GAAOrG,EAAKwI,MAAA/P,GAAA,oCACZmQ,GAAQ5I,EAAKwI,KAAAwB,GACb3B,KACJ+B,EAAAxC,MAAA,OAGA,SAAA6C,IACA,GAAA1H,EAAAzJ,MAAAvB,KAAAL,WAAA,CACA,IAGAF,EACAoT,EAJA5C,EAAkBhI,EAAK6H,eACvB1P,EAAA+R,EAAA5Q,MAAAvB,KAAAL,WACAD,EAAAuQ,EAAArQ,OAIA,IAAAH,EAAA,EAAeA,EAAAC,IAAOD,GACtBoT,EAAAC,EAAA7C,EAAAxQ,GAAAyQ,WAAA9P,EAA0D4P,GAAKhQ,KAAAL,cACvDyQ,KACRyC,EAAA,WAKA,SAAAF,IACA,IAEAlT,EACAoT,EAHA5C,EAAkBhI,EAAK6H,eACvBpQ,EAAAuQ,EAAArQ,OAIA,IAAAH,EAAA,EAAeA,EAAAC,IAAOD,GACtBoT,EAAAR,EAAApC,EAAAxQ,GAAAyQ,eACQI,KACRuC,EAAA,SAKA,SAAAD,IACA,IAEAnT,EACAoT,EAHA5C,EAAkBhI,EAAK6H,eACvBpQ,EAAAuQ,EAAArQ,OAQA,IALAsS,GAAAe,aAAAf,GACAA,EAAAnB,WAAA,WACAmB,EAAA,MACK,KAELzS,EAAA,EAAeA,EAAAC,IAAOD,GACtBoT,EAAAR,EAAApC,EAAAxQ,GAAAyQ,eACQE,KACRyC,EAAA,QAKA,SAAAC,EAAApE,EAAAyD,EAAAnD,EAAA3N,EAAAC,GACA,IACA4R,EACA7B,EACAC,EAHA6B,EAAAnE,EAAAmD,EAAAzD,GAIA0E,EAAAd,EAAAnR,OACA,GAASsI,EAAW,IAAKwH,GAASuB,EAAA,cAAAU,EAAAxE,EAAA0C,EAAA+B,EAAA,GAAAA,EAAA,OAAAC,GAAA,WAClC,OAAgB,OAALnL,EAAKkJ,QAAA+B,EAAA/B,EAAA5P,MAAAF,EAAAC,MAChB+P,EAAA6B,EAAA9H,EAAA+H,EAAA,MACA7B,EAAA4B,EAAAhE,EAAAiE,EAAA,OACA,KAEA,gBAAAN,EAAA3S,GACA,IACAR,EADA2T,EAAAF,EAGA,OAAAjT,GACA,YACAmS,EAAA3D,GAAAmE,EAAAnT,EAAA0R,IACA,MAEA,iBACAiB,EAAA3D,KAAA0C,EAGA,WACA+B,EAAAnE,EAAAmD,EAAAzD,GAAAhP,EAAA0R,EAIM3H,EAAW,IAAKwH,GAASuB,EAAAtS,EAAAgT,EAAAxE,EAAAhP,EAAAyT,EAAA,GAAA9B,EAAA8B,EAAA,GAAA7B,EAAA6B,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAD,KAAA7R,MAAA6R,EAAA,CAAAlT,EAAAmB,EAAAC,KA6B/B,OAzBAkR,EAAAxH,OAAA,SAAAnL,GACA,OAAAF,UAAAC,QAAAoL,EAAA,oBAAAnL,IAAsEmR,KAAQnR,GAAA2S,GAAAxH,GAG9EwH,EAAAL,UAAA,SAAAtS,GACA,OAAAF,UAAAC,QAAAuS,EAAA,oBAAAtS,IAAyEmR,GAAQnR,GAAA2S,GAAAL,GAGjFK,EAAArB,QAAA,SAAAtR,GACA,OAAAF,UAAAC,QAAAuR,EAAA,oBAAAtR,IAAuEmR,GAAQnR,GAAA2S,GAAArB,GAG/EqB,EAAAJ,UAAA,SAAAvS,GACA,OAAAF,UAAAC,QAAAwS,EAAA,oBAAAvS,IAAyEmR,KAAQnR,GAAA2S,GAAAJ,GAGjFI,EAAA9R,GAAA,WACA,IAAApB,EAAAgT,EAAA5R,GAAAa,MAAA+Q,EAAA3S,WACA,OAAAL,IAAAgT,EAAAE,EAAAlT,GAGAkT,EAAAc,cAAA,SAAAzT,GACA,OAAAF,UAAAC,QAAA2S,GAAA1S,QAAA2S,GAAArG,KAAAoH,KAAAhB,IAGAC,aCvLIgB,GAAK,EAETC,GAAA,EAEAC,GAAQ,EAERC,GAAA,IAIAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,kBAAAC,yBAAAC,IAAAD,YAAAE,KACAC,GAAA,kBAAAtK,eAAAuK,sBAAAvK,OAAAuK,sBAAA/I,KAAAxB,QAAA,SAAAwK,GACAtD,WAAAsD,EAAA,KAEO,SAAAJ,KACP,OAAAJ,KAAAM,GAAAG,IAAAT,GAAAE,GAAAE,MAAAH,IAGA,SAAAQ,KACAT,GAAA,EAGO,SAAAU,KACPvU,KAAAwU,MAAAxU,KAAAyU,MAAAzU,KAAAiE,MAAA,KAyBO,SAAAyQ,GAAApU,EAAAqU,EAAAC,GACP,IAAApV,EAAA,IAAA+U,GAEA,OADA/U,EAAAqV,QAAAvU,EAAAqU,EAAAC,GACApV,EAkBA,SAAAsV,KACAjB,IAAAD,GAAAG,GAAAE,OAAAH,GACEN,GAAKC,GAAA,EAEP,KApBO,WACPQ,OAEIT,GAKJ,IAHA,IACAuB,EADAvV,EAAAoS,GAGApS,IACAuV,EAAAlB,GAAArU,EAAAiV,QAAA,GAAAjV,EAAAgV,MAAApT,KAAA,KAAA2T,GACAvV,IAAAyE,QAGIuP,GAQJwB,GACG,QACCxB,GAAK,EAYT,WACA,IAAAyB,EAEAC,EADAC,EAAAvD,GAEAgD,EAAAQ,IAEA,KAAAD,GACAA,EAAAX,OACAI,EAAAO,EAAAV,QAAAG,EAAAO,EAAAV,OACAQ,EAAAE,MAAAlR,QAEAiR,EAAAC,EAAAlR,MAAAkR,EAAAlR,MAAA,KACAkR,EAAAF,IAAAhR,MAAAiR,EAAAtD,GAAAsD,GAIArD,GAAAoD,EACAI,GAAAT,GA5BAU,GACAzB,GAAA,GAIA,SAAA0B,KACA,IAAAtB,EAAAF,GAAAE,MACAU,EAAAV,EAAAL,GACAe,EAAAhB,KAAAG,IAAAa,EAAAf,GAAAK,GAuBA,SAAAoB,GAAAT,GACMpB,KAENC,QAAAR,aAAAQ,KACAmB,EAAAf,GAEA,IACAe,EAAAQ,MAAA3B,GAAA1C,WAAA+D,GAAAF,EAAAb,GAAAE,MAAAH,KACQJ,KAAUA,GAAQ8B,cAAiB9B,OAElCA,KAAQE,GAAAG,GAAAE,MAA2BP,GAAQ+B,YAAAF,GAAA5B,KAChDH,GAAK,EAAAW,GAAAW,MA9FTP,GAAApV,UAAAuV,GAAAvV,UAAA,CACAsB,YAAA8T,GACAM,QAAA,SAAAvU,EAAAqU,EAAAC,GACA,uBAAAtU,EAAA,UAAAoV,UAAA,8BACAd,GAAA,MAAAA,EAAAX,MAAAW,IAAA,MAAAD,EAAA,GAAAA,GAEA3U,KAAAiE,OAAA4N,KAAA7R,OACA6R,MAAA5N,MAAAjE,KAA0C4R,GAAA5R,KAC1C6R,GAAA7R,MAGAA,KAAAwU,MAAAlU,EACAN,KAAAyU,MAAAG,EACAS,MAEAM,KAAA,WACA3V,KAAAwU,QACAxU,KAAAwU,MAAA,KACAxU,KAAAyU,MAAAW,IACAC,QC9Ce,IAAAO,GAAA,SAAAtV,EAAAqU,EAAAC,GACf,IAAApV,EAAA,IAAc+U,GAMd,OALAI,EAAA,MAAAA,EAAA,GAAAA,EACAnV,EAAAqV,QAAA,SAAAgB,GACArW,EAAAmW,OACArV,EAAAuV,EAAAlB,IACGA,EAAAC,GACHpV,GCNAsW,GAActU,EAAQ,2BACtBuU,GAAA,GACOC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACQC,GAAA,SAAAzR,EAAA3E,EAAAuO,EAAApG,EAAA5D,EAAA8R,GACf,IAAAC,EAAA3R,EAAA4R,aACA,GAAAD,GAAyC,GAAA/H,KAAA+H,EAAA,YAAzC3R,EAAA4R,aAAA,IAiCA,SAAe5R,EAAA4J,EAAAiI,GACf,IACAC,EADAH,EAAA3R,EAAA4R,aAcA,SAAAG,EAAAhB,GACA,IAAApW,EAAAwJ,EAAAvJ,EAAAsJ,EAEA,GAAA2N,EAAAG,QAAAb,GAAA,OAAAN,IAEA,IAAAlW,KAAAgX,EAEA,IADAzN,EAAAyN,EAAAhX,IACAU,OAAAwW,EAAAxW,KAAA,CAIA,GAAA6I,EAAA8N,QAAAX,GAAA,OAAsCP,GAAOiB,GAG7C7N,EAAA8N,QAAAV,IACApN,EAAA8N,MAAAR,GACAtN,EAAA0L,MAAAiB,OACA3M,EAAAtI,GAAAU,KAAA,YAAA0D,IAAAX,SAAA6E,EAAAV,MAAAU,EAAAtE,cACA+R,EAAAhX,KAIAA,EAAAiP,IACA1F,EAAA8N,MAAAR,GACAtN,EAAA0L,MAAAiB,cACAc,EAAAhX,IAmBA,GAXImW,GAAO,WACXe,EAAAG,QAAAX,KACAQ,EAAAG,MAAAV,GACAO,EAAAjC,MAAAG,QAAAkC,EAAAJ,EAAAhC,MAAAgC,EAAA/B,MACAmC,EAAAlB,MAKAc,EAAAG,MAAAZ,GACAS,EAAAjW,GAAAU,KAAA,QAAA0D,IAAAX,SAAAwS,EAAArO,MAAAqO,EAAAjS,OACAiS,EAAAG,QAAAZ,GAAA,CAMA,IAJAS,EAAAG,MAAAX,GAEAS,EAAA,IAAA1X,MAAAQ,EAAAiX,EAAAC,MAAAhX,QAEAH,EAAA,EAAAwJ,GAAA,EAAuBxJ,EAAAC,IAAOD,GAC9BuJ,EAAA2N,EAAAC,MAAAnX,GAAAH,MAAA8B,KAAA0D,IAAAX,SAAAwS,EAAArO,MAAAqO,EAAAjS,UACAkS,IAAA3N,GAAAD,GAIA4N,EAAAhX,OAAAqJ,EAAA,GAGA,SAAA8N,EAAAlB,GAKA,IAJA,IAAArW,EAAAqW,EAAAc,EAAAK,SAAAL,EAAAM,KAAA7V,KAAA,KAAAyU,EAAAc,EAAAK,WAAAL,EAAAjC,MAAAG,QAAAc,GAAAgB,EAAAG,MAAAT,GAAA,GACA5W,GAAA,EACAC,EAAAkX,EAAAhX,SAEAH,EAAAC,GACAkX,EAAAnX,GAAA2B,KAAA,KAAA5B,GAIAmX,EAAAG,QAAAT,KACAM,EAAAjW,GAAAU,KAAA,MAAA0D,IAAAX,SAAAwS,EAAArO,MAAAqO,EAAAjS,OACAiR,KAIA,SAAAA,IAKA,QAAAlW,KAJAkX,EAAAG,MAAAR,GACAK,EAAAjC,MAAAiB,cACAc,EAAA/H,GAEA+H,EACA,cAIA3R,EAAA4R,aA/FAD,EAAA/H,GAAAiI,EACAA,EAAAjC,MAAeA,GAEf,SAAAmB,GACAc,EAAAG,MAAAb,GACAU,EAAAjC,MAAAG,QAAAgC,EAAAF,EAAAhC,MAAAgC,EAAA/B,MAEA+B,EAAAhC,OAAAkB,GAAAgB,EAAAhB,EAAAc,EAAAhC,QANoB,EAAAgC,EAAA/B,MAtClBsC,CAAMpS,EAAA4J,EAAA,CACRvO,OACAmI,QAEA5D,QAEAhE,GAAAoV,GACAc,MAAAb,GACAnB,KAAA4B,EAAA5B,KACAD,MAAA6B,EAAA7B,MACAqC,SAAAR,EAAAQ,SACAC,KAAAT,EAAAS,KACAvC,MAAA,KACAoC,MAAAd,MAGO,SAASmB,GAAIrS,EAAA4J,GACpB,IAAA0I,EAAiBC,GAAGvS,EAAA4J,GACpB,GAAA0I,EAAAN,MAAAd,GAAA,UAAAlW,MAAA,+BACA,OAAAsX,EAEO,SAASE,GAAGxS,EAAA4J,GACnB,IAAA0I,EAAiBC,GAAGvS,EAAA4J,GACpB,GAAA0I,EAAAN,MAAAZ,GAAA,UAAApW,MAAA,6BACA,OAAAsX,EAEO,SAASC,GAAGvS,EAAA4J,GACnB,IAAA0I,EAAAtS,EAAA4R,aACA,IAAAU,SAAA1I,IAAA,UAAA5O,MAAA,wBACA,OAAAsX,EC1Ce,IAAAG,GAAA,SAAAzS,EAAA3E,GACf,IACAiX,EACAhG,EAEA3R,EAJAgX,EAAA3R,EAAA4R,aAGA3J,GAAA,EAEA,GAAA0J,EAAA,CAGA,IAAAhX,KAFAU,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAEAsW,GACAW,EAAAX,EAAAhX,IAAAU,UAKAiR,EAAAgG,EAAAN,MAA8BZ,IAAQkB,EAAAN,MAAqBT,GAC3De,EAAAN,MAAqBR,GACrBc,EAAA1C,MAAAiB,OACAvE,GAAAgG,EAAA1W,GAAAU,KAAA,YAAA0D,IAAAX,SAAAiT,EAAA9O,MAAA8O,EAAA1S,cACA+R,EAAAhX,IARAsN,GAAA,EAWAA,UAAAjI,EAAA4R,eCkDO,SAAAc,GAAAC,EAAAtX,EAAAb,GACP,IAAAoP,EAAA+I,EAAAC,IAKA,OAJAD,EAAAtM,KAAA,WACA,IAAAiM,EAAmBE,GAAGtX,KAAA0O,IACtB0I,EAAA9X,QAAA8X,EAAA9X,MAAA,KAA2Ca,GAAAb,EAAAiC,MAAAvB,KAAAL,aAE3C,SAAAmF,GACA,OAAWuS,GAAGvS,EAAA4J,GAAApP,MAAAa,kBC9ECwX,GAAA,SAAApS,EAAAC,GACf,IAAApF,EACA,yBAAAoF,EAAkCoS,GAAA,kBAAiBpS,aAAgBqS,GAAA,MAAQD,GAAA,gBAAcxX,EAAQ0X,OAAAD,GAAA,MAAAC,CAAKtS,OAAApF,EAAewX,GAAA,gBAAkBA,GAAA,mBAAiBrS,EAAAC,ICQzI,ICXXuS,GAAY1J,GAASlP,UAAAsB,YCcV,ICGXuX,GAAE,EACC,SAAAC,GAAA3N,EAAAC,EAAApK,EAAAuO,GACP1O,KAAAwK,QAAAF,EACAtK,KAAAyK,SAAAF,EACAvK,KAAAkY,MAAA/X,EACAH,KAAA0X,IAAAhJ,EAKO,SAAAyJ,KACP,QAAWH,GAEX,IAAAI,GAA0B/J,GAASlP,UACnC8Y,GAAA9Y,UAPe,SAAmBgB,GAClC,OAASkO,KAASoJ,WAAAtX,IAMehB,UAAA,CACjCsB,YAAAwX,GACAtN,OC/Be,SAAAA,GACf,IAAAxK,EAAAH,KAAAkY,MACAxJ,EAAA1O,KAAA0X,IACA,oBAAA/M,MAA6C9H,EAAQ8H,IAErD,QAAAL,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,IAAA1L,MAAAgK,GAAAD,EAAA,EAAqFA,EAAAC,IAAOD,EAC5F,QAAAnE,EAAA+F,EAAAnG,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAkL,EAAAF,EAAA3B,GAAA,IAAA/J,MAAAQ,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHqF,EAAAJ,EAAAjF,MAAAoL,EAAAF,EAAAvJ,KAAA0D,IAAAX,SAAA1E,EAAAiF,MACA,aAAAI,IAAA+F,EAAA1G,SAAAW,EAAAX,UACA2G,EAAArL,GAAAoL,EACQ0L,GAAQzL,EAAArL,GAAAU,EAAAuO,EAAAjP,EAAAqL,EAAqCuM,GAAGvS,EAAA4J,KAKxD,WAAauJ,GAAUrN,EAAA5K,KAAAyK,SAAAtK,EAAAuO,IDiBvB3D,UEhCe,SAAAJ,GACf,IAAAxK,EAAAH,KAAAkY,MACAxJ,EAAA1O,KAAA0X,IACA,oBAAA/M,MAA6C1H,EAAW0H,IAExD,QAAAL,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,GAAAL,EAAA,GAAAtB,EAAA,EAAyFA,EAAAC,IAAOD,EAChG,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAH,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAqF,EAAAJ,EAAAjF,GAAA,CACA,QAAA4E,EAAAgU,EAAA1N,EAAAvJ,KAAA0D,IAAAX,SAAA1E,EAAAiF,GAAA4T,EAAyFjB,GAAGvS,EAAA4J,GAAA6J,EAAA,EAAAC,EAAAH,EAAAzY,OAAuC2Y,EAAAC,IAAOD,GAC1IlU,EAAAgU,EAAAE,KACYhC,GAAQlS,EAAAlE,EAAAuO,EAAA6J,EAAAF,EAAAC,GAIpB1N,EAAApK,KAAA6X,GACA9N,EAAA/J,KAAAsE,GAKA,WAAamT,GAAUrN,EAAAL,EAAApK,EAAAuO,IFavB1D,OGlCe,SAAAC,GACf,oBAAAA,MAA2CtH,EAAOsH,IAElD,QAAAX,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAgL,EAAA,IAAA1L,MAAAgK,GAAAD,EAAA,EAAqFA,EAAAC,IAAOD,EAC5F,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAkL,EAAAF,EAAA3B,GAAA,GAAAxJ,EAAA,EAA4FA,EAAAC,IAAOD,GACnGqF,EAAAJ,EAAAjF,KAAAwL,EAAA7J,KAAA0D,IAAAX,SAAA1E,EAAAiF,IACAoG,EAAAtK,KAAAsE,GAKA,WAAamT,GAAUrN,EAAA5K,KAAAyK,SAAAzK,KAAAkY,MAAAlY,KAAA0X,MHwBvB7L,MIpCe,SAAA4L,GACf,GAAAA,EAAAC,MAAA1X,KAAA0X,IAAA,UAAA5X,MAEA,QAAAiM,EAAA/L,KAAAwK,QAAAwB,EAAAyL,EAAAjN,QAAAyB,EAAAF,EAAAnM,OAAAsM,EAAAF,EAAApM,OAAAsJ,EAAAiD,KAAAC,IAAAH,EAAAC,GAAAG,EAAA,IAAAnN,MAAA+M,GAAAhD,EAAA,EAA+JA,EAAAC,IAAOD,EACtK,QAAAnE,EAAAwH,EAAAP,EAAA9C,GAAAsD,EAAAP,EAAA/C,GAAAvJ,EAAA4M,EAAA1M,OAAAiM,EAAAQ,EAAApD,GAAA,IAAA/J,MAAAQ,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HqF,EAAAwH,EAAA7M,IAAA8M,EAAA9M,MACAoM,EAAApM,GAAAqF,GAKA,KAAQmE,EAAAgD,IAAQhD,EAChBoD,EAAApD,GAAA8C,EAAA9C,GAGA,WAAagP,GAAU5L,EAAArM,KAAAyK,SAAAzK,KAAAkY,MAAAlY,KAAA0X,MJsBvB5L,UFpCe,WACf,WAAaiM,GAAS/X,KAAAwK,QAAAxK,KAAAyK,WEoCtBgN,WKrCA,WAKA,IAJA,IAAAtX,EAAAH,KAAAkY,MACAO,EAAAzY,KAAA0X,IACAgB,EAAYP,KAEZ7N,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAqJ,EAAA,EAA2DA,EAAAC,IAAOD,EAClE,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAH,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAqF,EAAAJ,EAAAjF,GAAA,CACA,IAAA6Y,EAAsBjB,GAAGvS,EAAA2T,GACjBlC,GAAQzR,EAAA3E,EAAAuY,EAAAjZ,EAAAiF,EAAA,CAChBkQ,KAAA0D,EAAA1D,KAAA0D,EAAA3D,MAAA2D,EAAAtB,SACArC,MAAA,EACAqC,SAAAsB,EAAAtB,SACAC,KAAAqB,EAAArB,OAMA,WAAagB,GAAU3N,EAAAtK,KAAAyK,SAAAtK,EAAAuY,ILmBvBtX,KAAAgX,GAAAhX,KACA0L,MAAAsL,GAAAtL,MACAhI,KAAAsT,GAAAtT,KACAoG,KAAAkN,GAAAlN,KACA6B,MAAAqL,GAAArL,MACA5B,KAAAiN,GAAAjN,KACAzK,GMrBe,SAAAP,EAAAkI,GACf,IAAAqG,EAAA1O,KAAA0X,IACA,OAAA/X,UAAAC,OAAA,EAAgCyX,GAAGrX,KAAA8E,OAAA4J,GAAAhO,MAAAP,GAAAH,KAAAmL,KAjBnC,SAAAuD,EAAAvO,EAAAkI,GACA,IAAAsQ,EACAC,EACAC,EAXA,SAAc1Y,GACd,OAAAA,EAAA,IAAAW,OAAAC,MAAA,SAAA+X,MAAA,SAAAtZ,GACA,IAAAC,EAAAD,EAAAyB,QAAA,KAEA,OADAxB,GAAA,IAAAD,IAAAJ,MAAA,EAAAK,KACAD,GAAA,UAAAA,IAOYuZ,CAAK5Y,GAASgX,GAAOG,GACjC,kBACA,IAAAF,EAAAyB,EAAA7Y,KAAA0O,GACAhO,EAAA0W,EAAA1W,GAIAA,IAAAiY,IAAAC,GAAAD,EAAAjY,GAAAS,QAAAT,GAAAP,EAAAkI,GACA+O,EAAA1W,GAAAkY,GAMmCI,CAAAtK,EAAAvO,EAAAkI,KNoBnC2E,KOQe,SAAA7M,EAAAb,GACf,IAAA8C,EAAiBL,EAAS5B,GAC1BV,EAAA,cAAA2C,EAAqCwV,GAAA,wBAAuBD,GAC5D,OAAA3X,KAAAiZ,UAAA9Y,EAAA,oBAAAb,GAAA8C,EAAAF,MAdA,SAAuBE,EAAA8W,EAAA5Z,GACvB,IAAA6Z,EAAAC,EAAAC,EACA,kBACA,IAAAC,EACAC,EAAAja,EAAAU,MACA,SAAAuZ,EAEA,OADAD,EAAAtZ,KAAAiN,eAAA7K,EAAAH,MAAAG,EAAAF,UACAqX,EAAA,KAAAD,IAAAH,GAAAI,IAAAH,EAAAC,IAAAH,EAAAC,EAAAG,EAAAF,EAAAG,GAFAvZ,KAAAkN,kBAAA9K,EAAAH,MAAAG,EAAAF,SAhBA,SAAqB/B,EAAA+Y,EAAA5Z,GACrB,IAAA6Z,EAAAC,EAAAC,EACA,kBACA,IAAAC,EACAC,EAAAja,EAAAU,MACA,SAAAuZ,EAEA,OADAD,EAAAtZ,KAAAsG,aAAAnG,MACAoZ,EAAA,KAAAD,IAAAH,GAAAI,IAAAH,EAAAC,IAAAH,EAAAC,EAAAG,EAAAF,EAAAG,GAFAvZ,KAAAmN,gBAAAhN,MAoB2GiC,EAAA3C,EAAe+X,GAAUxX,KAAA,QAAAG,EAAAb,IAAA,MAAAA,GAAA8C,EAAAF,MA/CpI,SAAqBE,GACrB,kBACApC,KAAAkN,kBAAA9K,EAAAH,MAAAG,EAAAF,SARA,SAAmB/B,GACnB,kBACAH,KAAAmN,gBAAAhN,MAmDgOiC,MAAAF,MAjChO,SAAuBE,EAAA8W,EAAAK,GACvB,IAAAJ,EAAAE,EACA,kBACA,IAAAC,EAAAtZ,KAAAiN,eAAA7K,EAAAH,MAAAG,EAAAF,OACA,OAAAoX,IAAAC,EAAA,KAAAD,IAAAH,EAAAE,IAAAH,EAAAC,EAAAG,EAAAC,KAZA,SAAqBpZ,EAAA+Y,EAAAK,GACrB,IAAAJ,EAAAE,EACA,kBACA,IAAAC,EAAAtZ,KAAAsG,aAAAnG,GACA,OAAAmZ,IAAAC,EAAA,KAAAD,IAAAH,EAAAE,IAAAH,EAAAC,EAAAG,EAAAC,MAqC6RnX,EAAA3C,EAAAH,EAAA,MPV7R2Z,UQpBe,SAAA9Y,EAAAb,GACf,IAAA4F,EAAA,QAAA/E,EACA,GAAAR,UAAAC,OAAA,SAAAsF,EAAAlF,KAAA4W,MAAA1R,OAAAsU,OACA,SAAAla,EAAA,OAAAU,KAAA4W,MAAA1R,EAAA,MACA,uBAAA5F,EAAA,UAAAQ,MACA,IAAAsC,EAAiBL,EAAS5B,GAC1B,OAAAH,KAAA4W,MAAA1R,GAAA9C,EAAAF,MAhCA,SAAAE,EAAA9C,GACA,SAAAsX,IACA,IAAA9R,EAAA9E,KACAP,EAAAH,EAAAiC,MAAAuD,EAAAnF,WACA,OAAAF,GAAA,SAAAD,GACAsF,EAAAuI,eAAAjL,EAAAH,MAAAG,EAAAF,MAAAzC,EAAAD,KAKA,OADAoX,EAAA4C,OAAAla,EACAsX,GAGA,SAAAzW,EAAAb,GACA,SAAAsX,IACA,IAAA9R,EAAA9E,KACAP,EAAAH,EAAAiC,MAAAuD,EAAAnF,WACA,OAAAF,GAAA,SAAAD,GACAsF,EAAA+B,aAAA1G,EAAAV,EAAAD,KAKA,OADAoX,EAAA4C,OAAAla,EACAsX,IASAxU,EAAA9C,KReAuG,MSXe,SAAA1F,EAAAb,EAAAgO,GACf,IAAA7N,EAAA,eAAAU,GAAA,IAAyCyX,GAAA,wBAAuBD,GAChE,aAAArY,EAAAU,KAAAyZ,WAAAtZ,EAnCA,SAAoBA,EAAA+Y,GACpB,IAAAC,EAAAC,EAAAC,EACA,kBACA,IAAAC,EAAiB1T,EAAK5F,KAAAG,GACtBoZ,GAAAvZ,KAAA6F,MAAA0H,eAAApN,GAAmDyF,EAAK5F,KAAAG,IACxD,OAAAmZ,IAAAC,EAAA,KAAAD,IAAAH,GAAAI,IAAAH,EAAAC,IAAAH,EAAAC,EAAAG,EAAAF,EAAAG,IA8B+CG,CAAWvZ,EAAAV,IAAAiB,GAAA,aAAAP,EA1B1D,SAAAA,GACA,kBACAH,KAAA6F,MAAA0H,eAAApN,IAwB0DwZ,CAAAxZ,IAAAH,KAAAyZ,WAAAtZ,EAAA,oBAAAb,EAZ1D,SAAsBa,EAAA+Y,EAAA5Z,GACtB,IAAA6Z,EAAAC,EAAAC,EACA,kBACA,IAAAC,EAAiB1T,EAAK5F,KAAAG,GACtBoZ,EAAAja,EAAAU,MAEA,OADA,MAAAuZ,IAAAvZ,KAAA6F,MAAA0H,eAAApN,GAAAoZ,EAAmE3T,EAAK5F,KAAAG,IACxEmZ,IAAAC,EAAA,KAAAD,IAAAH,GAAAI,IAAAH,EAAAC,IAAAH,EAAAC,EAAAG,EAAAF,EAAAG,IAMyKK,CAAazZ,EAAAV,EAAU+X,GAAUxX,KAAA,SAAAG,EAAAb,IApB1M,SAAsBa,EAAA+Y,EAAAK,GACtB,IAAAJ,EAAAE,EACA,kBACA,IAAAC,EAAiB1T,EAAK5F,KAAAG,GACtB,OAAAmZ,IAAAC,EAAA,KAAAD,IAAAH,EAAAE,IAAAH,EAAAC,EAAAG,EAAAC,IAgB4OM,CAAa1Z,EAAAV,EAAAH,EAAA,IAAAgO,ITUzPmM,WUrCe,SAAAtZ,EAAAb,EAAAgO,GACf,IAAApI,EAAA,UAAA/E,GAAA,IACA,GAAAR,UAAAC,OAAA,SAAAsF,EAAAlF,KAAA4W,MAAA1R,OAAAsU,OACA,SAAAla,EAAA,OAAAU,KAAA4W,MAAA1R,EAAA,MACA,uBAAA5F,EAAA,UAAAQ,MACA,OAAAE,KAAA4W,MAAA1R,EAlBA,SAAA/E,EAAAb,EAAAgO,GACA,SAAAsJ,IACA,IAAA9R,EAAA9E,KACAP,EAAAH,EAAAiC,MAAAuD,EAAAnF,WACA,OAAAF,GAAA,SAAAD,GACAsF,EAAAe,MAAA2H,YAAArN,EAAAV,EAAAD,GAAA8N,IAKA,OADAsJ,EAAA4C,OAAAla,EACAsX,EAQA6C,CAAAtZ,EAAAb,EAAA,MAAAgO,EAAA,GAAAA,KViCAK,KDpCe,SAAArO,GACf,OAAAU,KAAA4W,MAAA,2BAAAtX,EARA,SAAqBA,GACrB,kBACA,IAAAia,EAAAja,EAAAU,MACAA,KAAAkH,YAAA,MAAAqS,EAAA,GAAAA,GAK0DO,CAAatC,GAAUxX,KAAA,OAAAV,IAdjF,SAAqBA,GACrB,kBACAU,KAAAkH,YAAA5H,GAY0Gya,CAAY,MAAAza,EAAA,GAAAA,EAAA,MCoCtHsH,OHxCe,WACf,OAAA5G,KAAAU,GAAA,cAbAgO,EAaA1O,KAAA0X,IAZA,WACA,IAAA3T,EAAA/D,KAAAuH,WAEA,QAAA9H,KAAAO,KAAA0W,aACA,IAAAjX,IAAAiP,EAAA,OAGA3K,KAAA6D,YAAA5H,SARA,IAAA0O,GGqDAkI,MLEe,SAAAzW,EAAAb,GACf,IAAAoP,EAAA1O,KAAA0X,IAGA,GAFAvX,GAAA,GAEAR,UAAAC,OAAA,GAGA,IAFA,IAEAJ,EAFAoX,EAAgBS,GAAGrX,KAAA8E,OAAA4J,GAAAkI,MAEnBnX,EAAA,EAAAC,EAAAkX,EAAAhX,OAAwCH,EAAAC,IAAOD,EAC/C,IAAAD,EAAAoX,EAAAnX,IAAAU,SACA,OAAAX,EAAAF,MAIA,YAGA,OAAAU,KAAAmL,MAAA,MAAA7L,EArEA,SAAAoP,EAAAvO,GACA,IAAA6Z,EAAAC,EACA,kBACA,IAAA7C,EAAmBE,GAAGtX,KAAA0O,GACtBkI,EAAAQ,EAAAR,MAIA,GAAAA,IAAAoD,EAGA,QAAAva,EAAA,EAAAC,GAFAua,EAAAD,EAAApD,GAEAhX,OAAwCH,EAAAC,IAAOD,EAC/C,GAAAwa,EAAAxa,GAAAU,SAAA,EACA8Z,IAAA7a,SACA2H,OAAAtH,EAAA,GACA,MAKA2X,EAAAR,MAAAqD,IAIA,SAAAvL,EAAAvO,EAAAb,GACA,IAAA0a,EAAAC,EACA,uBAAA3a,EAAA,UAAAQ,MACA,kBACA,IAAAsX,EAAmBE,GAAGtX,KAAA0O,GACtBkI,EAAAQ,EAAAR,MAIA,GAAAA,IAAAoD,EAAA,CACAC,GAAAD,EAAApD,GAAAxX,QAEA,QAAAI,EAAA,CACAW,OACAb,SACOG,EAAA,EAAAC,EAAAua,EAAAra,OAA2BH,EAAAC,IAAOD,EACzC,GAAAwa,EAAAxa,GAAAU,SAAA,CACA8Z,EAAAxa,GAAAD,EACA,MAIAC,IAAAC,GAAAua,EAAAzZ,KAAAhB,GAGA4X,EAAAR,MAAAqD,KAoBAvL,EAAAvO,EAAAb,KKjBAqV,MWxCe,SAAArV,GACf,IAAAoP,EAAA1O,KAAA0X,IACA,OAAA/X,UAAAC,OAAAI,KAAAmL,MAAA,oBAAA7L,EAdA,SAAAoP,EAAApP,GACA,kBACI6X,GAAInX,KAAA0O,GAAAiG,OAAArV,EAAAiC,MAAAvB,KAAAL,aAIR,SAAA+O,EAAApP,GACA,OAAAA,KAAA,WACI6X,GAAInX,KAAA0O,GAAAiG,MAAArV,KAMRoP,EAAApP,IAAkH+X,GAAGrX,KAAA8E,OAAA4J,GAAAiG,OXuCrHqC,SYzCe,SAAA1X,GACf,IAAAoP,EAAA1O,KAAA0X,IACA,OAAA/X,UAAAC,OAAAI,KAAAmL,MAAA,oBAAA7L,EAdA,SAAAoP,EAAApP,GACA,kBACIgY,GAAGtX,KAAA0O,GAAAsI,UAAA1X,EAAAiC,MAAAvB,KAAAL,aAIP,SAAA+O,EAAApP,GACA,OAAAA,KAAA,WACIgY,GAAGtX,KAAA0O,GAAAsI,SAAA1X,KAMPoP,EAAApP,IAAwH+X,GAAGrX,KAAA8E,OAAA4J,GAAAsI,UZwC3HC,Ka/Ce,SAAA3X,GACf,IAAAoP,EAAA1O,KAAA0X,IACA,OAAA/X,UAAAC,OAAAI,KAAAmL,KATA,SAAAuD,EAAApP,GACA,uBAAAA,EAAA,UAAAQ,MACA,kBACIwX,GAAGtX,KAAA0O,GAAAuI,KAAA3X,GAMP4a,CAAAxL,EAAApP,IAAiE+X,GAAGrX,KAAA8E,OAAA4J,GAAAuI,QCV7D,SAAAkD,EAAApF,GAGP,SAAAqF,EAAA5a,GACA,OAAA2M,KAAAkO,IAAA7a,EAAAuV,GAIA,OAPAA,KAMAqF,EAAAE,SAAAH,EACAC,GARO,CADK,GAWL,SAAAD,EAAApF,GAGP,SAAAwF,EAAA/a,GACA,SAAA2M,KAAAkO,IAAA,EAAA7a,EAAAuV,GAIA,OAPAA,KAMAwF,EAAAD,SAAAH,EACAI,EARO,CAXK,GAqBL,SAAAJ,EAAApF,GAGP,SAAAyF,EAAAhb,GACA,QAAAA,GAAA,MAAA2M,KAAAkO,IAAA7a,EAAAuV,GAAA,EAAA5I,KAAAkO,IAAA,EAAA7a,EAAAuV,IAAA,EAIA,OAPAA,KAMAyF,EAAAF,SAAAH,EACAK,EARO,CArBK,GCAZrO,KAAAsO,ICCO,SAAAN,EAAAjH,GAGP,SAAAwH,EAAAlb,GACA,OAAAA,MAAA0T,EAAA,GAAA1T,EAAA0T,GAIA,OAPAA,KAMAwH,EAAAC,UAAAR,EACAO,GARO,CADP,SAWO,SAAAP,EAAAjH,GAGP,SAAA0H,EAAApb,GACA,QAAAA,MAAA0T,EAAA,GAAA1T,EAAA0T,GAAA,EAIA,OAPAA,KAMA0H,EAAAD,UAAAR,EACAS,EARO,CAXP,SAqBO,SAAAT,EAAAjH,GAGP,SAAA2H,EAAArb,GACA,QAAAA,GAAA,KAAAA,MAAA0T,EAAA,GAAA1T,EAAA0T,IAAA1T,GAAA,GAAAA,IAAA0T,EAAA,GAAA1T,EAAA0T,GAAA,KAIA,OAPAA,KAMA2H,EAAAF,UAAAR,EACAU,EARO,CArBP,aCAAC,GAAA,EAAA3O,KAAAsO,GCIAM,IDDO,SAAAZ,EAAA5U,EAAA4N,GACP,IAAAD,EAAA/G,KAAA6O,KAAA,GAAAzV,EAAA4G,KAAA8O,IAAA,EAAA1V,MAAA4N,GAAA2H,IAEA,SAAAI,EAAA1b,GACA,OAAA+F,EAAA4G,KAAAkO,IAAA,OAAA7a,GAAA2M,KAAAgP,KAAAjI,EAAA1T,GAAA2T,GAWA,OARA+H,EAAAE,UAAA,SAAA7V,GACA,OAAA4U,EAAA5U,EAAA4N,EAAA2H,KAGAI,EAAAG,OAAA,SAAAlI,GACA,OAAAgH,EAAA5U,EAAA4N,IAGA+H,EAfO,CAFP,EACA,IAkBO,SAAAf,EAAA5U,EAAA4N,GACP,IAAAD,EAAA/G,KAAA6O,KAAA,GAAAzV,EAAA4G,KAAA8O,IAAA,EAAA1V,MAAA4N,GAAA2H,IAEA,SAAAQ,EAAA9b,GACA,SAAA+F,EAAA4G,KAAAkO,IAAA,OAAA7a,OAAA2M,KAAAgP,KAAA3b,EAAA0T,GAAAC,GAWA,OARAmI,EAAAF,UAAA,SAAA7V,GACA,OAAA4U,EAAA5U,EAAA4N,EAAA2H,KAGAQ,EAAAD,OAAA,SAAAlI,GACA,OAAAgH,EAAA5U,EAAA4N,IAGAmI,EAfO,CAnBP,EACA,IAmCO,SAAAnB,EAAA5U,EAAA4N,GACP,IAAAD,EAAA/G,KAAA6O,KAAA,GAAAzV,EAAA4G,KAAA8O,IAAA,EAAA1V,MAAA4N,GAAA2H,IAEA,SAAAS,EAAA/b,GACA,QAAAA,EAAA,EAAAA,EAAA,KAAA+F,EAAA4G,KAAAkO,IAAA,KAAA7a,GAAA2M,KAAAgP,KAAAjI,EAAA1T,GAAA2T,GAAA,EAAA5N,EAAA4G,KAAAkO,IAAA,MAAA7a,GAAA2M,KAAAgP,KAAAjI,EAAA1T,GAAA2T,IAAA,EAWA,OARAoI,EAAAH,UAAA,SAAA7V,GACA,OAAA4U,EAAA5U,EAAA4N,EAAA2H,KAGAS,EAAAF,OAAA,SAAAlI,GACA,OAAAgH,EAAA5U,EAAA4N,IAGAoI,EAfO,CApCP,EACA,ICEA,CACA3G,KAAA,KAEAD,MAAA,EACAqC,SAAA,IACAC,KCHO,SAAAzX,GACP,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,QDKA,SAASgc,GAAO1W,EAAA4J,GAGhB,IAFA,IAAA8H,IAEAA,EAAA1R,EAAA4R,iBAAAF,IAAA9H,KACA,KAAA5J,IAAAyC,YACA,OAAAwT,GAAAnG,KAAkCX,KAAG8G,GAIrC,OAAAvE,EElBAnI,GAASlP,UAAAoY,UCFM,SAAApX,GACf,OAAAH,KAAAmL,KAAA,WACIoM,GAASvX,KAAAG,MDCbkO,GAASlP,UAAAsY,WFoBM,SAAAtX,GACf,IAAAuO,EAAA8H,EAEArW,aAAsB8X,IACtBvJ,EAAAvO,EAAAuX,IAAAvX,IAAA+X,QAEAxJ,EAASyJ,MAAK3B,EAAAuE,IAAAnG,KAAoCX,KAAG9T,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAGrD,QAAAmK,EAAAtK,KAAAwK,QAAAtB,EAAAoB,EAAA1K,OAAAqJ,EAAA,EAA2DA,EAAAC,IAAOD,EAClE,QAAAnE,EAAAJ,EAAA4F,EAAArB,GAAAvJ,EAAAgF,EAAA9E,OAAAH,EAAA,EAA8DA,EAAAC,IAAOD,GACrEqF,EAAAJ,EAAAjF,KACQ8W,GAAQzR,EAAA3E,EAAAuO,EAAAjP,EAAAiF,EAAA8R,GAAqCgF,GAAO1W,EAAA4J,IAK5D,WAAauJ,GAAU3N,EAAAtK,KAAAyK,SAAAtK,EAAAuO,IInBvB,UAAA1N,IAA0Bya,IAU1B,UAAAza,IAA0Bya,IAU1B,sCAAAza,IAA4Dya,IA6D5D,SAASA,GAAIjc,GACb,OACAU,KAAAV,GCzGO2M,KAAAuP,IACAvP,KAAAgP,IACMhP,KAAAsO,GAGNtO,KAAA8O,ICLS/b,MAAAC,UAAAC,aCyBD,cCzBNF,MAAAC,UACeC,MCiBT,IClBfuc,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAC,GACA,WAAAC,SAAA,eAAoCD,EAAAjb,IAAA,SAAAb,EAAAV,GACpC,OAAA0c,KAAAC,UAAAjc,GAAA,OAAAV,EAAA,MACGqH,KAAA,UAwBY,IAAAuV,GAAA,SAAAC,GACf,IAAAC,EAAA,IAAAC,OAAA,KAAAF,EAAA,SACAG,EAAAH,EAAAI,WAAA,GAaA,SAAAC,EAAAhP,EAAA0G,GACA,IAOA7U,EAPAod,EAAA,GAEAC,EAAAlP,EAAA/N,OACAkd,EAAA,EAEApd,EAAA,EAIAqd,EAAAF,GAAA,EAEAG,GAAA,EAMA,SAAAC,IACA,GAAAF,EAAA,OAAAnB,GACA,GAAAoB,EAAA,OAAAA,GAAA,EAAArB,GAEA,IAAAlc,EAEAW,EADA6I,EAAA6T,EAGA,GAAAnP,EAAA+O,WAAAzT,KAAA4S,GAAA,CACA,KAAAiB,IAAAD,GAAAlP,EAAA+O,WAAAI,KAAAjB,IAAAlO,EAAA+O,aAAAI,KAAAjB,KAQA,OAJApc,EAAAqd,IAAAD,EAAAE,GAAA,GAAqC3c,EAAAuN,EAAA+O,WAAAI,QAAAhB,GAAAkB,GAAA,EAA4D5c,IAAA2b,KACjGiB,GAAA,EACArP,EAAA+O,WAAAI,KAAAhB,MAAAgB,GAEAnP,EAAAvO,MAAA6J,EAAA,EAAAxJ,EAAA,GAAAyd,QAAA,WAIA,KAAAJ,EAAAD,GAAA,CACA,IAAAzc,EAAAuN,EAAA+O,WAAAjd,EAAAqd,QAAAhB,GAAAkB,GAAA,OAAmE,GAAA5c,IAAA2b,GACnEiB,GAAA,EACArP,EAAA+O,WAAAI,KAAAhB,MAAAgB,OACS,GAAA1c,IAAAqc,EAAA,SACT,OAAA9O,EAAAvO,MAAA6J,EAAAxJ,GAIA,OAAAsd,GAAA,EAAApP,EAAAvO,MAAA6J,EAAA4T,GAGA,IApCAlP,EAAA+O,WAAAG,EAAA,KAAAf,MAAAe,EACAlP,EAAA+O,WAAAG,EAAA,KAAAd,MAAAc,GAmCArd,EAAAyd,OAAArB,IAAA,CAGA,IAFA,IAAAuB,EAAA,GAEA3d,IAAAmc,IAAAnc,IAAAoc,IACAuB,EAAA3c,KAAAhB,KAAAyd,IAGA5I,GAAA,OAAA8I,EAAA9I,EAAA8I,EAAAzd,OACAkd,EAAApc,KAAA2c,GAGA,OAAAP,EAgBA,SAAAQ,EAAAD,GACA,OAAAA,EAAAnc,IAAAqc,GAAAvW,KAAAwV,GAGA,SAAAe,EAAA1P,GACA,aAAAA,EAAA,GAAA4O,EAAAe,KAAA3P,GAAA,QAAAA,EAAAuP,QAAA,eAAAvP,EAGA,OACA4P,MAlGA,SAAA5P,EAAA0G,GACA,IAAAmJ,EACAvB,EACAW,EAAAD,EAAAhP,EAAA,SAAAwP,EAAA1d,GACA,GAAA+d,EAAA,OAAAA,EAAAL,EAAA1d,EAAA,GACAwc,EAAAkB,EAAAK,EAAAnJ,EA9BA,SAAA4H,EAAA5H,GACA,IAAAoJ,EAAAzB,GAAAC,GACA,gBAAAkB,EAAA1d,GACA,OAAA4U,EAAAoJ,EAAAN,GAAA1d,EAAAwc,IA2BAyB,CAAAP,EAAA9I,GAAA2H,GAAAmB,KAGA,OADAP,EAAAX,WAAA,GACAW,GA2FAD,YACAgB,OAxBA,SAAAf,EAAAX,GAEA,OADA,MAAAA,MA9FA,SAAAW,GACA,IAAAgB,EAAA9F,OAAAhK,OAAA,MACAmO,EAAA,GAQA,OAPAW,EAAAiB,QAAA,SAAAV,GACA,QAAAW,KAAAX,EACAW,KAAAF,GACA3B,EAAAzb,KAAAod,EAAAE,QAIA7B,EAoFA8B,CAAAnB,IACA,CAAAX,EAAAjb,IAAAqc,GAAAvW,KAAAwV,IAAA/b,OAAAqc,EAAA5b,IAAA,SAAAmc,GACA,OAAAlB,EAAAjb,IAAA,SAAA8c,GACA,OAAAT,EAAAF,EAAAW,MACOhX,KAAAwV,MACFxV,KAAA,OAmBLkX,WAhBA,SAAApB,GACA,OAAAA,EAAA5b,IAAAoc,GAAAtW,KAAA,SC1HAmX,GAAU5B,GAAG,KACN6B,GAAAD,GAAAV,MCDPY,IDEOF,GAAAtB,UACAsB,GAAAN,OACAM,GAAAD,WCJG3B,GAAG,OACN+B,GAAAD,GAAAZ,MACAY,GAAAxB,UACAwB,GAAAR,OACAQ,GAAAH,WCLP,SAAAK,GAAAC,GACA,IAAAA,EAAAC,GAAA,UAAAze,MAAAwe,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAA3Q,OAGe,IAAA+Q,GAAA,SAAAC,EAAAC,GACf,OAAAC,MAAAF,EAAAC,GAAAE,KAAAT,KCHA,SAAAU,GAAAxB,GACA,gBAAAoB,EAAAC,EAAAzB,GAEA,OADA,IAAAxd,UAAAC,QAAA,oBAAAgf,IAAAzB,EAAAyB,SAAAI,GACWN,GAAIC,EAAAC,GAAAE,KAAA,SAAAR,GACf,OAAAf,EAAAe,EAAAnB,MAYc4B,GAAYb,IACZa,GAAYX,IClB1B,SAAAa,GAAA/e,GACA,gBAAAye,EAAAC,GACA,OAAWF,GAAIC,EAAAC,GAAAE,KAAA,SAAAnR,GACf,WAAAuR,WAAAC,gBAAAxR,EAAAzN,MAKe+e,GAAA,mBACAA,GAAA,aACRA,GAAA,iBAFP,ICVeG,GAAA,SAAAhU,EAAA8D,GACf,IAAApC,EAIA,SAAAuS,IACA,IAAA5f,EAEAqF,EADApF,EAAAoN,EAAAlN,OAEA0f,EAAA,EACAC,EAAA,EAEA,IAAA9f,EAAA,EAAeA,EAAAC,IAAOD,EACtB6f,IAAAxa,EAAAgI,EAAArN,IAAA2L,EAAAmU,GAAAza,EAAAoK,EAGA,IAAAoQ,IAAA5f,EAAA0L,EAAAmU,IAAA7f,EAAAwP,EAAAzP,EAAA,EAAiDA,EAAAC,IAAOD,GACxDqF,EAAAgI,EAAArN,IAAA2L,GAAAkU,EAAAxa,EAAAoK,GAAAqQ,EAgBA,OA/BA,MAAAnU,MAAA,GACA,MAAA8D,MAAA,GAkBAmQ,EAAAG,WAAA,SAAA3f,GACAiN,EAAAjN,GAGAwf,EAAAjU,EAAA,SAAAvL,GACA,OAAAF,UAAAC,QAAAwL,GAAAvL,EAAAwf,GAAAjU,GAGAiU,EAAAnQ,EAAA,SAAArP,GACA,OAAAF,UAAAC,QAAAsP,GAAArP,EAAAwf,GAAAnQ,GAGAmQ,GCjCeI,GAAA,SAAArU,GACf,kBACA,OAAAA,ICFesU,GAAA,WACf,aAAAvT,KAAAwT,SAAA,KCKA,SAASC,GAAGC,EAAAzU,EAAA8D,EAAA3F,GACZ,GAAAuW,MAAA1U,IAAA0U,MAAA5Q,GAAA,OAAA2Q,EAEA,IAAA9b,EASAgc,EACAC,EACAC,EACAC,EACAC,EACAC,EACA3gB,EACAwJ,EAfAnE,EAAA+a,EAAAQ,MACAC,EAAA,CACAzb,KAAA0E,GAEAgX,EAAAV,EAAAW,IACAC,EAAAZ,EAAAa,IACAC,EAAAd,EAAAe,IACAC,EAAAhB,EAAAiB,IAUA,IAAAhc,EAAA,OAAA+a,EAAAQ,MAAAC,EAAAT,EAEA,KAAA/a,EAAAlF,QAGA,IAFAugB,EAAA/U,IAAA2U,GAAAQ,EAAAI,GAAA,IAAAJ,EAAAR,EAAmDY,EAAAZ,GACnDK,EAAAlR,IAAA8Q,GAAAS,EAAAI,GAAA,IAAAJ,EAAAT,EAAoDa,EAAAb,EACpDjc,EAAAe,QAAArF,EAAA2gB,GAAA,EAAAD,IAAA,OAAApc,EAAAtE,GAAA6gB,EAAAT,EAMA,GAFAI,GAAAJ,EAAAkB,GAAA3f,KAAA,KAAA0D,EAAAD,MACAqb,GAAAL,EAAAmB,GAAA5f,KAAA,KAAA0D,EAAAD,MACAuG,IAAA6U,GAAA/Q,IAAAgR,EAAA,OAAAI,EAAA/b,KAAAO,EAAAf,IAAAtE,GAAA6gB,EAAAT,EAAAQ,MAAAC,EAAAT,EAEA,GACA9b,MAAAtE,GAAA,IAAAP,MAAA,GAAA2gB,EAAAQ,MAAA,IAAAnhB,MAAA,IACAihB,EAAA/U,IAAA2U,GAAAQ,EAAAI,GAAA,IAAAJ,EAAAR,EAAmDY,EAAAZ,GACnDK,EAAAlR,IAAA8Q,GAAAS,EAAAI,GAAA,IAAAJ,EAAAT,EAAoDa,EAAAb,SACjDvgB,EAAA2gB,GAAA,EAAAD,MAAAlX,GAAAiX,GAAAF,IAAA,EAAAC,GAAAF,IAEH,OAAAhc,EAAAkF,GAAAnE,EAAAf,EAAAtE,GAAA6gB,EAAAT,EC9Ce,ICAAoB,GAAA,SAAAnc,EAAAyb,EAAAE,EAAAE,EAAAE,GACf7gB,KAAA8E,OACA9E,KAAAugB,KACAvgB,KAAAygB,KACAzgB,KAAA2gB,KACA3gB,KAAA6gB,MCLO,SAASK,GAAQ3X,GACxB,OAAAA,EAAA,GCDO,SAAS4X,GAAQ5X,GACxB,OAAAA,EAAA,GCWe,SAAA6X,GAAAtU,EAAA1B,EAAA8D,GACf,IAAA2Q,EAAA,IAAAwB,GAAA,MAAAjW,EAAsC8V,GAAQ9V,EAAA,MAAA8D,EAAkBiS,GAAQjS,EAAAzJ,iBACxE,aAAAqH,EAAA+S,IAAAyB,OAAAxU,GAGA,SAAAuU,GAAAjW,EAAA8D,EAAAqR,EAAAE,EAAAE,EAAAE,GACA7gB,KAAA+gB,GAAA3V,EACApL,KAAAghB,GAAA9R,EACAlP,KAAAwgB,IAAAD,EACAvgB,KAAA0gB,IAAAD,EACAzgB,KAAA4gB,IAAAD,EACA3gB,KAAA8gB,IAAAD,EACA7gB,KAAAqgB,WAAArB,EAGA,SAAAuC,GAAAjB,GAMA,IALA,IAAAnf,EAAA,CACA0D,KAAAyb,EAAAzb,MAEAN,EAAApD,EAEAmf,IAAA/b,MACAA,SAAA,CACAM,KAAAyb,EAAAzb,MAIA,OAAA1D,EAGA,IAAAqgB,GAAAJ,GAAAjiB,UAAAkiB,GAAAliB,UCtCA,SAASsiB,GAAClY,GACV,OAAAA,EAAA6B,EAAA7B,EAAAmY,GAGA,SAASC,GAACpY,GACV,OAAAA,EAAA2F,EAAA3F,EAAAqY,GDmCAJ,GAAArgB,KAAA,WACA,IAEA2L,EACAzI,EAHAlD,EAAA,IAAAkgB,GAAArhB,KAAA+gB,GAAA/gB,KAAAghB,GAAAhhB,KAAAwgB,IAAAxgB,KAAA0gB,IAAA1gB,KAAA4gB,IAAA5gB,KAAA8gB,KACAhc,EAAA9E,KAAAqgB,MAGA,IAAAvb,EAAA,OAAA3D,EACA,IAAA2D,EAAAlF,OAAA,OAAAuB,EAAAkf,MAAAkB,GAAAzc,GAAA3D,EAMA,IALA2L,EAAA,EACA6B,OAAA7J,EACAoM,OAAA/P,EAAAkf,MAAA,IAAAnhB,MAAA,KAGA4F,EAAAgI,EAAA+U,OACA,QAAApiB,EAAA,EAAmBA,EAAA,IAAOA,GAC1B4E,EAAAS,EAAA6J,OAAAlP,MACA4E,EAAAzE,OAAAkN,EAAAtM,KAAA,CACAmO,OAAAtK,EACA6M,OAAApM,EAAAoM,OAAAzR,GAAA,IAAAP,MAAA,KACW4F,EAAAoM,OAAAzR,GAAA8hB,GAAAld,IAKX,OAAAlD,GAGAqgB,GAAA9a,ILtEe,SAAA6C,GACf,IAAA6B,GAAApL,KAAA+gB,GAAA3f,KAAA,KAAAmI,GACA2F,GAAAlP,KAAAghB,GAAA5f,KAAA,KAAAmI,GACA,OAASqW,GAAG5f,KAAA8hB,MAAA1W,EAAA8D,GAAA9D,EAAA8D,EAAA3F,IKoEZiY,GAAAF,OLtBO,SAAAzc,GACP,IAAA0E,EACA9J,EAEA2L,EACA8D,EAFAxP,EAAAmF,EAAAjF,OAGAmiB,EAAA,IAAA7iB,MAAAQ,GACAsiB,EAAA,IAAA9iB,MAAAQ,GACA6gB,EAAAnL,IACAqL,EAAArL,IACAuL,GAAA,IACAE,GAAA,IAEA,IAAAphB,EAAA,EAAaA,EAAAC,IAAOD,EACpBqgB,MAAA1U,GAAApL,KAAA+gB,GAAA3f,KAAA,KAAAmI,EAAA1E,EAAApF,MAAAqgB,MAAA5Q,GAAAlP,KAAAghB,GAAA5f,KAAA,KAAAmI,MACAwY,EAAAtiB,GAAA2L,EACA4W,EAAAviB,GAAAyP,EACA9D,EAAAmV,MAAAnV,GACAA,EAAAuV,MAAAvV,GACA8D,EAAAuR,MAAAvR,GACAA,EAAA2R,MAAA3R,IASA,IALAyR,EAAAJ,MAAAvgB,KAAAwgB,IAAAG,EAAA3gB,KAAA4gB,KACAC,EAAAJ,MAAAzgB,KAAA0gB,IAAAG,EAAA7gB,KAAA8gB,KAEA9gB,KAAA8hB,MAAAvB,EAAAE,GAAAqB,MAAAnB,EAAAE,GAEAphB,EAAA,EAAaA,EAAAC,IAAOD,EAChBmgB,GAAG5f,KAAA+hB,EAAAtiB,GAAAuiB,EAAAviB,GAAAoF,EAAApF,IAGP,OAAAO,MKVAwhB,GAAAM,MJxEe,SAAA1W,EAAA8D,GACf,GAAA4Q,MAAA1U,OAAA0U,MAAA5Q,MAAA,OAAAlP,KAEA,IAAAugB,EAAAvgB,KAAAwgB,IACAC,EAAAzgB,KAAA0gB,IACAC,EAAA3gB,KAAA4gB,IACAC,EAAA7gB,KAAA8gB,IAIA,GAAAhB,MAAAS,GACAI,GAAAJ,EAAApU,KAAA8V,MAAA7W,IAAA,EACAyV,GAAAJ,EAAAtU,KAAA8V,MAAA/S,IAAA,MAEA,MAAAqR,EAAAnV,KAAAuV,GAAAF,EAAAvR,KAAA2R,GA8CA,OAAA7gB,KA7CA,IAEA+D,EACAtE,EAHAyiB,EAAAvB,EAAAJ,EACAzb,EAAA9E,KAAAqgB,MAIA,OAAA5gB,GAAAyP,GAAAuR,EAAAI,GAAA,MAAAzV,GAAAmV,EAAAI,GAAA,GACA,OAEA,IACA5c,EAAA,IAAA7E,MAAA,IAAAO,GAAAqF,IAAAf,QACa8c,EAAAJ,GAAAyB,GAAA,GAAA9W,GAAAuV,EAAAJ,EAAA2B,IAAAhT,EAAA2R,GAEb,MAGA,OAEA,IACA9c,EAAA,IAAA7E,MAAA,IAAAO,GAAAqF,IAAAf,QACa8c,EAAAJ,GAAAyB,GAAA,IAAA3B,EAAAI,EAAAuB,GAAA9W,GAAA8D,EAAA2R,GAEb,MAGA,OAEA,IACA9c,EAAA,IAAA7E,MAAA,IAAAO,GAAAqF,IAAAf,QACa0c,EAAAI,GAAAqB,GAAA,GAAA9W,GAAAuV,EAAAJ,EAAA2B,IAAAzB,EAAAvR,GAEb,MAGA,OAEA,IACAnL,EAAA,IAAA7E,MAAA,IAAAO,GAAAqF,IAAAf,QACa0c,EAAAI,GAAAqB,GAAA,IAAA3B,EAAAI,EAAAuB,GAAA9W,GAAAqV,EAAAvR,GAMblP,KAAAqgB,OAAArgB,KAAAqgB,MAAAzgB,SAAAI,KAAAqgB,MAAAvb,GAQA,OAJA9E,KAAAwgB,IAAAD,EACAvgB,KAAA0gB,IAAAD,EACAzgB,KAAA4gB,IAAAD,EACA3gB,KAAA8gB,IAAAD,EACA7gB,MIOAwhB,GAAA3c,KEzEe,WACf,IAAAA,EAAA,GAMA,OALA7E,KAAAmiB,MAAA,SAAArd,GACA,IAAAA,EAAAlF,OAAA,GACAiF,EAAArE,KAAAsE,EAAAD,YACKC,IAAAP,QAELM,GFmEA2c,GAAAY,OG1Ee,SAAAviB,GACf,OAAAF,UAAAC,OAAAI,KAAA8hB,OAAAjiB,EAAA,OAAAA,EAAA,OAAAiiB,OAAAjiB,EAAA,OAAAA,EAAA,OAAAigB,MAAA9f,KAAAwgB,UAAAxB,EAAA,EAAAhf,KAAAwgB,IAAAxgB,KAAA0gB,KAAA,CAAA1gB,KAAA4gB,IAAA5gB,KAAA8gB,OH0EAU,GAAAa,KI1Ee,SAAAjX,EAAA8D,EAAAoT,GACf,IAAAzd,EAGA8b,EACAE,EACA0B,EACAC,EAKAC,EACAhjB,EAXA8gB,EAAAvgB,KAAAwgB,IACAC,EAAAzgB,KAAA0gB,IAKAgC,EAAA1iB,KAAA4gB,IACA+B,EAAA3iB,KAAA8gB,IACA8B,EAAA,GACA9d,EAAA9E,KAAAqgB,MAUA,IAPAvb,GAAA8d,EAAApiB,KAAA,IAA2BygB,GAAInc,EAAAyb,EAAAE,EAAAiC,EAAAC,IAC/B,MAAAL,IAAAlN,KACAmL,EAAAnV,EAAAkX,EAAA7B,EAAAvR,EAAAoT,EACAI,EAAAtX,EAAAkX,EAAAK,EAAAzT,EAAAoT,EACAA,MAGAG,EAAAG,EAAAf,OAEA,OAAA/c,EAAA2d,EAAA3d,QAAA6b,EAAA8B,EAAAlC,IAAAmC,IAAA7B,EAAA4B,EAAAhC,IAAAkC,IAAAJ,EAAAE,EAAA9B,IAAAJ,IAAAiC,EAAAC,EAAA5B,IAAAJ,GAEA,GAAA3b,EAAAlF,OAAA,CACA,IAAAmgB,GAAAY,EAAA4B,GAAA,EACAvC,GAAAa,EAAA2B,GAAA,EACAI,EAAApiB,KAAA,IAAqBygB,GAAInc,EAAA,GAAAib,EAAAC,EAAAuC,EAAAC,GAAA,IAA+BvB,GAAInc,EAAA,GAAA6b,EAAAX,EAAAD,EAAAyC,GAAA,IAA+BvB,GAAInc,EAAA,GAAAib,EAAAc,EAAA0B,EAAAvC,GAAA,IAA+BiB,GAAInc,EAAA,GAAA6b,EAAAE,EAAAd,EAAAC,KAElIvgB,GAAAyP,GAAA8Q,IAAA,EAAA5U,GAAA2U,KACA0C,EAAAG,IAAAhjB,OAAA,GACAgjB,IAAAhjB,OAAA,GAAAgjB,IAAAhjB,OAAA,EAAAH,GACAmjB,IAAAhjB,OAAA,EAAAH,GAAAgjB,OAGA,CACA,IAAApR,EAAAjG,GAAApL,KAAA+gB,GAAA3f,KAAA,KAAA0D,EAAAD,MACAyM,EAAApC,GAAAlP,KAAAghB,GAAA5f,KAAA,KAAA0D,EAAAD,MACAge,EAAAxR,IAAAC,IAEA,GAAAuR,EAAAP,EAAA,CACA,IAAA/Y,EAAA4C,KAAAoH,KAAA+O,EAAAO,GACAtC,EAAAnV,EAAA7B,EAAAkX,EAAAvR,EAAA3F,EACAmZ,EAAAtX,EAAA7B,EAAAoZ,EAAAzT,EAAA3F,EACA1E,EAAAC,EAAAD,MAKA,OAAAA,GJyBA2c,GAAA5a,OK5Ee,SAAA2C,GACf,GAAAuW,MAAA1U,GAAApL,KAAA+gB,GAAA3f,KAAA,KAAAmI,KAAAuW,MAAA5Q,GAAAlP,KAAAghB,GAAA5f,KAAA,KAAAmI,IAAA,OAAAvJ,KAEA,IAAA+D,EAEA+e,EACAtX,EACAjH,EAKA6G,EACA8D,EACA6Q,EACAC,EACAG,EACAC,EACA3gB,EACAwJ,EAfAnE,EAAA9E,KAAAqgB,MAIAE,EAAAvgB,KAAAwgB,IACAC,EAAAzgB,KAAA0gB,IACAC,EAAA3gB,KAAA4gB,IACAC,EAAA7gB,KAAA8gB,IAUA,IAAAhc,EAAA,OAAA9E,KAGA,GAAA8E,EAAAlF,OAAA,QAGA,IAFAugB,EAAA/U,IAAA2U,GAAAQ,EAAAI,GAAA,IAAAJ,EAAAR,EAAmDY,EAAAZ,GACnDK,EAAAlR,IAAA8Q,GAAAS,EAAAI,GAAA,IAAAJ,EAAAT,EAAoDa,EAAAb,EACpDjc,EAAAe,QAAArF,EAAA2gB,GAAA,EAAAD,IAAA,OAAAngB,KACA,IAAA8E,EAAAlF,OAAA,OACAmE,EAAAtE,EAAA,MAAAsE,EAAAtE,EAAA,MAAAsE,EAAAtE,EAAA,QAAAqjB,EAAA/e,EAAAkF,EAAAxJ,GAGA,KAAAqF,EAAAD,OAAA0E,GACA,GAAAiC,EAAA1G,QAAAP,MAAA,OAAAvE,KAKA,OAFAuE,EAAAO,EAAAP,cAAAO,EAAAP,KAEAiH,GAAAjH,EAAAiH,EAAAjH,cAAAiH,EAAAjH,KAAAvE,MAEA+D,GAEAQ,EAAAR,EAAAtE,GAAA8E,SAAAR,EAAAtE,IAEAqF,EAAAf,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAe,KAAAf,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAe,EAAAlF,SACAkjB,IAAA7Z,GAAAnE,EAAqC9E,KAAAqgB,MAAAvb,GAGrC9E,OARAA,KAAAqgB,MAAA9b,EAAAvE,OLqCAwhB,GAAAuB,UK3BO,SAAAle,GACP,QAAApF,EAAA,EAAAC,EAAAmF,EAAAjF,OAAkCH,EAAAC,IAAOD,EACzCO,KAAA4G,OAAA/B,EAAApF,IAGA,OAAAO,MLuBAwhB,GAAA9Q,KM9Ee,WACf,OAAA1Q,KAAAqgB,ON8EAmB,GAAAtW,KO/Ee,WACf,IAAAA,EAAA,EAMA,OALAlL,KAAAmiB,MAAA,SAAArd,GACA,IAAAA,EAAAlF,OAAA,KACAsL,QACKpG,IAAAP,QAEL2G,GPyEAsW,GAAAW,MQ/Ee,SAAA7hB,GACf,IACAmiB,EAEApe,EACAkc,EACAE,EACAE,EACAE,EAPA+B,EAAA,GAEA9d,EAAA9E,KAAAqgB,MAQA,IAFAvb,GAAA8d,EAAApiB,KAAA,IAA2BygB,GAAInc,EAAA9E,KAAAwgB,IAAAxgB,KAAA0gB,IAAA1gB,KAAA4gB,IAAA5gB,KAAA8gB,MAE/B2B,EAAAG,EAAAf,OACA,IAAAvhB,EAAAwE,EAAA2d,EAAA3d,KAAAyb,EAAAkC,EAAAlC,GAAAE,EAAAgC,EAAAhC,GAAAE,EAAA8B,EAAA9B,GAAAE,EAAA4B,EAAA5B,KAAA/b,EAAAlF,OAAA,CACA,IAAAmgB,GAAAQ,EAAAI,GAAA,EACAX,GAAAS,EAAAI,GAAA,GACAxc,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAA0b,EAAAC,EAAAW,EAAAE,KAC9Cxc,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAAkc,EAAAP,EAAAD,EAAAc,KAC9Cxc,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAA0b,EAAAU,EAAAE,EAAAX,KAC9C3b,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAAkc,EAAAE,EAAAV,EAAAC,IAI9C,OAAAhgB,MR0DAwhB,GAAAwB,WShFe,SAAA1iB,GACf,IAEAmiB,EAFAG,EAAA,GACAre,EAAA,GAIA,IAFAvE,KAAAqgB,OAAAuC,EAAApiB,KAAA,IAAiCygB,GAAIjhB,KAAAqgB,MAAArgB,KAAAwgB,IAAAxgB,KAAA0gB,IAAA1gB,KAAA4gB,IAAA5gB,KAAA8gB,MAErC2B,EAAAG,EAAAf,OAAA,CACA,IAAA/c,EAAA2d,EAAA3d,KAEA,GAAAA,EAAAlF,OAAA,CACA,IAAAyE,EACAkc,EAAAkC,EAAAlC,GACAE,EAAAgC,EAAAhC,GACAE,EAAA8B,EAAA9B,GACAE,EAAA4B,EAAA5B,GACAd,GAAAQ,EAAAI,GAAA,EACAX,GAAAS,EAAAI,GAAA,GACAxc,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAAkc,EAAAE,EAAAV,EAAAC,KAC9C3b,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAA0b,EAAAU,EAAAE,EAAAX,KAC9C3b,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAAkc,EAAAP,EAAAD,EAAAc,KAC9Cxc,EAAAS,EAAA,KAAA8d,EAAApiB,KAAA,IAA0CygB,GAAI5c,EAAA0b,EAAAC,EAAAW,EAAAE,IAG9Ctc,EAAA/D,KAAAiiB,GAGA,KAAAA,EAAAle,EAAAsd,OACAvhB,EAAAmiB,EAAA3d,KAAA2d,EAAAlC,GAAAkC,EAAAhC,GAAAgC,EAAA9B,GAAA8B,EAAA5B,IAGA,OAAA7gB,MTmDAwhB,GAAApW,EF/Ee,SAAAvL,GACf,OAAAF,UAAAC,QAAAI,KAAA+gB,GAAAlhB,EAAAG,WAAA+gB,IE+EAS,GAAAtS,EDhFe,SAAArP,GACf,OAAAF,UAAAC,QAAAI,KAAAghB,GAAAnhB,EAAAG,WAAAghB,IEQe,IAAAiC,GAAA,SAAAX,GACf,IAAAxV,EACAoW,EACAC,EAAA,EACAC,EAAA,EAGA,SAAA/D,IAUA,IATA,IAAA5f,EAEAogB,EACA/a,EACAue,EACAC,EACAC,EACAC,EANA9jB,EAAAoN,EAAAlN,OAQA2Y,EAAA,EAAmBA,EAAA6K,IAAgB7K,EAGnC,IAFAsH,EAAauB,GAAQtU,EAAQ2U,GAAGE,IAACqB,WAAAS,GAEjChkB,EAAA,EAAiBA,EAAAC,IAAOD,EACxBqF,EAAAgI,EAAArN,GACA8jB,EAAAL,EAAApe,EAAAwD,OAAAkb,EAAAD,IACAF,EAAAve,EAAAsG,EAAAtG,EAAA4c,GACA4B,EAAAxe,EAAAoK,EAAApK,EAAA8c,GACA/B,EAAAsC,MAAA5gB,GAIA,SAAAA,EAAAmiB,EAAAnD,EAAAE,EAAAE,EAAAE,GACA,IAAAhc,EAAA6e,EAAA7e,KACA8e,EAAAD,EAAAE,EACAA,EAAAL,EAAAI,EAEA,IAAA9e,EAoBA,OAAA0b,EAAA8C,EAAAO,GAAAjD,EAAA0C,EAAAO,GAAAnD,EAAA6C,EAAAM,GAAA/C,EAAAyC,EAAAM,EAnBA,GAAA/e,EAAAyD,MAAAxD,EAAAwD,MAAA,CACA,IAAA8C,EAAAiY,EAAAxe,EAAAuG,EAAAvG,EAAA6c,GACAxS,EAAAoU,EAAAze,EAAAqK,EAAArK,EAAA+c,GACApJ,EAAApN,IAAA8D,IAEAsJ,EAAAoL,MACA,IAAAxY,IAAmCoN,IAAnCpN,EAA6BsU,MAAMtU,GACnC,IAAA8D,IAAmCsJ,IAAnCtJ,EAA6BwQ,MAAMxQ,GACnCsJ,GAAAoL,GAAApL,EAAArM,KAAAoH,KAAAiF,OAAA2K,EACAre,EAAA4c,KAAAtW,GAAAoN,IAAAoL,GAAAD,OAAAH,EAAAG,IACA7e,EAAA8c,KAAA1S,GAAAsJ,GAAAoL,EACA/e,EAAA6c,IAAAtW,GAAAwY,EAAA,EAAAA,GACA/e,EAAA+c,IAAA1S,EAAA0U,KAWA,SAAAH,EAAAC,GACA,GAAAA,EAAA7e,KAAA,OAAA6e,EAAAE,EAAAV,EAAAQ,EAAA7e,KAAAyD,OAEA,QAAA7I,EAAAikB,EAAAE,EAAA,EAA4BnkB,EAAA,IAAOA,EACnCikB,EAAAjkB,IAAAikB,EAAAjkB,GAAAmkB,EAAAF,EAAAE,IACAF,EAAAE,EAAAF,EAAAjkB,GAAAmkB,GAKA,SAAApE,IACA,GAAA1S,EAAA,CACA,IAAArN,EAEAqF,EADApF,EAAAoN,EAAAlN,OAIA,IAFAsjB,EAAA,IAAAhkB,MAAAQ,GAEAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBqF,EAAAgI,EAAArN,GAAAyjB,EAAApe,EAAAwD,QAAAga,EAAAxd,EAAArF,EAAAqN,IAqBA,MA5FA,oBAAAwV,MAA6C7C,GAAQ,MAAA6C,EAAA,GAAAA,IA2ErDjD,EAAAG,WAAA,SAAA3f,GACAiN,EAAAjN,EACA2f,KAGAH,EAAA+D,WAAA,SAAAvjB,GACA,OAAAF,UAAAC,QAAAwjB,GAAAvjB,EAAAwf,GAAA+D,GAGA/D,EAAA8D,SAAA,SAAAtjB,GACA,OAAAF,UAAAC,QAAAujB,GAAAtjB,EAAAwf,GAAA8D,GAGA9D,EAAAiD,OAAA,SAAAziB,GACA,OAAAF,UAAAC,QAAA0iB,EAAA,oBAAAziB,IAAsE4f,IAAQ5f,GAAA2f,IAAAH,GAAAiD,GAG9EjD,GSzGA,SAASwE,GAAKta,GACd,OAAAA,EAAAjB,MAGA,SAASwb,GAAIC,EAAAC,GACb,IAAAlf,EAAAif,EAAA9jB,IAAA+jB,GACA,IAAAlf,EAAA,UAAAhF,MAAA,YAAAkkB,GACA,OAAAlf,EAGA,IAAAmf,GAAA,SAAeC,GACf,IAEAC,EAEAC,EACAtX,EACAuX,EACAC,EAPA5V,EAAWmV,GACXV,EAUA,SAAAoB,GACA,SAAApY,KAAAC,IAAAiY,EAAAE,EAAA5V,OAAArG,OAAA+b,EAAAE,EAAArT,OAAA5I,SATAkc,EAAiB/E,GAAQ,IAKzB2D,EAAA,EAOA,SAAA/D,EAAAoF,GACA,QAAAlM,EAAA,EAAA7Y,EAAAwkB,EAAAtkB,OAAqC2Y,EAAA6K,IAAgB7K,EACrD,QAAAgM,EAAA5V,EAAAuC,EAAA9F,EAAA8D,EAAAsJ,EAAAhT,EAAA/F,EAAA,EAAuDA,EAAAC,IAAOD,EAC9DkP,GAAA4V,EAAAL,EAAAzkB,IAAAkP,OACAvD,GADA8F,EAAAqT,EAAArT,QACA9F,EAAA8F,EAAAwQ,GAAA/S,EAAAvD,EAAAuD,EAAA+S,IAA2DhC,KAC3DxQ,EAAAgC,EAAAhC,EAAAgC,EAAA0Q,GAAAjT,EAAAO,EAAAP,EAAAiT,IAA2DlC,KAG3DtU,GADAoN,IADAA,EAAArM,KAAAoH,KAAAnI,IAAA8D,MACAkV,EAAA3kB,IAAA+Y,EAAAiM,EAAAN,EAAA1kB,GACAyP,GAAAsJ,EACAtH,EAAAwQ,IAAAtW,GAAA5F,EAAA8e,EAAA7kB,IACAyR,EAAA0Q,IAAA1S,EAAA1J,EACAmJ,EAAA+S,IAAAtW,GAAA5F,EAAA,EAAAA,GACAmJ,EAAAiT,IAAA1S,EAAA1J,EAKA,SAAAga,IACA,GAAA1S,EAAA,CACA,IAAArN,EAIA8kB,EAHA7kB,EAAAoN,EAAAlN,OACAsJ,EAAAgb,EAAAtkB,OACAmkB,EAAmBjM,OAAA4M,GAAA,EAAA5M,CAAGhL,EAAA4B,GAGtB,IAAAjP,EAAA,EAAA4kB,EAAA,IAAAnlB,MAAAQ,GAAqCD,EAAAyJ,IAAOzJ,GAC5C8kB,EAAAL,EAAAzkB,IAAA6I,MAAA7I,EACA,kBAAA8kB,EAAA5V,SAAA4V,EAAA5V,OAAyDmV,GAAIC,EAAAQ,EAAA5V,SAC7D,kBAAA4V,EAAArT,SAAAqT,EAAArT,OAAyD4S,GAAIC,EAAAQ,EAAArT,SAC7DmT,EAAAE,EAAA5V,OAAArG,QAAA+b,EAAAE,EAAA5V,OAAArG,QAAA,KACA+b,EAAAE,EAAArT,OAAA5I,QAAA+b,EAAAE,EAAArT,OAAA5I,QAAA,KAGA,IAAA7I,EAAA,EAAA6kB,EAAA,IAAAplB,MAAAgK,GAAoCzJ,EAAAyJ,IAAOzJ,EAC3C8kB,EAAAL,EAAAzkB,GAAA6kB,EAAA7kB,GAAA4kB,EAAAE,EAAA5V,OAAArG,QAAA+b,EAAAE,EAAA5V,OAAArG,OAAA+b,EAAAE,EAAArT,OAAA5I,QAGA6b,EAAA,IAAAjlB,MAAAgK,GAAAyb,IACAP,EAAA,IAAAllB,MAAAgK,GAAA0b,KAGA,SAAAD,IACA,GAAA7X,EAEA,QAAArN,EAAA,EAAAC,EAAAwkB,EAAAtkB,OAAqCH,EAAAC,IAAOD,EAC5C0kB,EAAA1kB,IAAA0jB,EAAAe,EAAAzkB,KAAAykB,GAIA,SAAAU,IACA,GAAA9X,EAEA,QAAArN,EAAA,EAAAC,EAAAwkB,EAAAtkB,OAAqCH,EAAAC,IAAOD,EAC5C2kB,EAAA3kB,IAAA+kB,EAAAN,EAAAzkB,KAAAykB,GA6BA,OAxFA,MAAAA,MAAA,IA+DA7E,EAAAG,WAAA,SAAA3f,GACAiN,EAAAjN,EACA2f,KAGAH,EAAA6E,MAAA,SAAArkB,GACA,OAAAF,UAAAC,QAAAskB,EAAArkB,EAAA2f,IAAAH,GAAA6E,GAGA7E,EAAA3Q,GAAA,SAAA7O,GACA,OAAAF,UAAAC,QAAA8O,EAAA7O,EAAAwf,GAAA3Q,GAGA2Q,EAAA+D,WAAA,SAAAvjB,GACA,OAAAF,UAAAC,QAAAwjB,GAAAvjB,EAAAwf,GAAA+D,GAGA/D,EAAA8D,SAAA,SAAAtjB,GACA,OAAAF,UAAAC,QAAAujB,EAAA,oBAAAtjB,IAAwE4f,IAAQ5f,GAAA8kB,IAAAtF,GAAA8D,GAGhF9D,EAAAmF,SAAA,SAAA3kB,GACA,OAAAF,UAAAC,QAAA4kB,EAAA,oBAAA3kB,IAAwE4f,IAAQ5f,GAAA+kB,IAAAvF,GAAAmF,GAGhFnF,GC7GO,SAASwF,GAACtb,GACjB,OAAAA,EAAA6B,EAEO,SAAS0Z,GAACvb,GACjB,OAAAA,EAAA2F,EAEA,IAAA6V,GAAA,GACAC,GAAA7Y,KAAAsO,IAAA,EAAAtO,KAAAoH,KAAA,IACe0R,GAAA,SAAAC,GACf,IAAAC,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EAAAnZ,KAAAkO,IAAAgL,EAAA,OACAE,EAAA,EACAC,EAAA,GACAC,EAAe3N,OAAA4M,GAAA,EAAA5M,GACf4N,EAAgBhR,GAAKiR,GACrBnd,EAAchH,EAAQ,cAItB,SAAAmkB,IACA5O,IACAvO,EAAApH,KAAA,OAAA+jB,GAEAC,EAAAC,IACAK,EAAA/P,OACAnN,EAAApH,KAAA,MAAA+jB,IAIA,SAAApO,IACA,IAAAtX,EAEAqF,EADApF,EAAAwlB,EAAAtlB,OAOA,IALAwlB,IAAAG,EAAAH,GAAAE,EACAG,EAAAta,KAAA,SAAAkU,GACAA,EAAA+F,KAGA3lB,EAAA,EAAeA,EAAAC,IAAOD,EAEtB,OADAqF,EAAAogB,EAAAzlB,IACAmmB,GAAA9gB,EAAAsG,GAAAtG,EAAA4c,IAAA8D,GAA+D1gB,EAAAsG,EAAAtG,EAAA8gB,GAAA9gB,EAAA4c,GAAA,GAC/D,MAAA5c,EAAA+gB,GAAA/gB,EAAAoK,GAAApK,EAAA8c,IAAA4D,GAA+D1gB,EAAAoK,EAAApK,EAAA+gB,GAAA/gB,EAAA8c,GAAA,GAI/D,SAAAkE,IACA,QAAAhhB,EAAArF,EAAA,EAAAC,EAAAwlB,EAAAtlB,OAA4CH,EAAAC,IAAOD,EAAA,CAGnD,IAFAqF,EAAAogB,EAAAzlB,IAAA6I,MAAA7I,EAEAqgB,MAAAhb,EAAAsG,IAAA0U,MAAAhb,EAAAoK,GAAA,CACA,IAAAoT,EAAAyC,GAAA5Y,KAAAoH,KAAA9T,GACAsmB,EAAAtmB,EAAAulB,GACAlgB,EAAAsG,EAAAkX,EAAAnW,KAAAuP,IAAAqK,GACAjhB,EAAAoK,EAAAoT,EAAAnW,KAAAgP,IAAA4K,IAGAjG,MAAAhb,EAAA4c,KAAA5B,MAAAhb,EAAA8c,OACA9c,EAAA4c,GAAA5c,EAAA8c,GAAA,IAKA,SAAAoE,EAAA3G,GAEA,OADAA,EAAAG,YAAAH,EAAAG,WAAA0F,GACA7F,EAIA,OAnDA,MAAA6F,MAAA,IAkDAY,IACAX,EAAA,CACApO,OACAlC,QAAA,WACA,OAAA6Q,EAAA7Q,QAAA8Q,GAAAR,GAEAxP,KAAA,WACA,OAAA+P,EAAA/P,OAAAwP,GAEArY,MAAA,SAAAjN,GACA,OAAAF,UAAAC,QAAAslB,EAAArlB,EAAAimB,IAAAL,EAAAta,KAAA6a,GAAAb,GAAAD,GAEAT,MAAA,SAAA5kB,GACA,OAAAF,UAAAC,QAAAwlB,GAAAvlB,EAAAslB,GAAAC,GAEAa,SAAA,SAAApmB,GACA,OAAAF,UAAAC,QAAAylB,GAAAxlB,EAAAslB,GAAAE,GAEAa,WAAA,SAAArmB,GACA,OAAAF,UAAAC,QAAA0lB,GAAAzlB,EAAAslB,IAAAG,GAEAa,YAAA,SAAAtmB,GACA,OAAAF,UAAAC,QAAA2lB,GAAA1lB,EAAAslB,GAAAI,GAEAa,cAAA,SAAAvmB,GACA,OAAAF,UAAAC,QAAA4lB,EAAA,EAAA3lB,EAAAslB,GAAA,EAAAK,GAEAnG,MAAA,SAAAlf,EAAAN,GACA,OAAAF,UAAAC,OAAA,SAAAC,EAAA4lB,EAAA7e,OAAAzG,GAAAslB,EAAAplB,IAAAF,EAAA6lB,EAAAnmB,IAAAslB,GAAAM,EAAAxlB,IAAAE,IAEAkiB,KAAA,SAAAjX,EAAA8D,EAAAoT,GACA,IAEAjR,EACAC,EACAuR,EACA/d,EACAuhB,EANA5mB,EAAA,EACAC,EAAAwlB,EAAAtlB,OAQA,IAFA,MAAA0iB,IAAAlN,IAA4CkN,KAE5C7iB,EAAA,EAAiBA,EAAAC,IAAOD,GAIxBojB,GAFAxR,EAAAjG,GADAtG,EAAAogB,EAAAzlB,IACA2L,GAEAiG,GADAC,EAAApC,EAAApK,EAAAoK,GACAoC,GACAgR,IAAA+D,EAAAvhB,EAAAwd,EAAAO,GAGA,OAAAwD,GAEA3lB,GAAA,SAAAP,EAAAN,GACA,OAAAF,UAAAC,OAAA,GAAA4I,EAAA9H,GAAAP,EAAAN,GAAAslB,GAAA3c,EAAA9H,GAAAP,MCvHAmmB,GAAA,WACA,IAAAxZ,EACAhI,EACA2f,EAEAN,EADAhB,EAAiB1D,IAAQ,IAEzB8G,EAAA,EACAC,EAAApR,IACAqR,EAAA,IAEA,SAAApH,EAAAxf,GACA,IAAAJ,EACAC,EAAAoN,EAAAlN,OACAigB,EAAeuB,GAAQtU,EAAQ+X,GAAGC,IAAC9B,WAAA0D,GAEnC,IAAAjC,EAAA5kB,EAAAJ,EAAA,EAA0BA,EAAAC,IAAOD,EACjCqF,EAAAgI,EAAArN,GAAAogB,EAAAsC,MAAA5gB,GAIA,SAAAie,IACA,GAAA1S,EAAA,CACA,IAAArN,EAEAqF,EADApF,EAAAoN,EAAAlN,OAIA,IAFAukB,EAAA,IAAAjlB,MAAAQ,GAEAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBqF,EAAAgI,EAAArN,GAAA0kB,EAAArf,EAAAwD,QAAA6a,EAAAre,EAAArF,EAAAqN,IAIA,SAAA4Z,EAAAhD,GACA,IACAjB,EACAriB,EAEAgL,EACA8D,EACAzP,EANA0jB,EAAA,EAGAwD,EAAA,EAKA,GAAAjD,EAAA9jB,OAAA,CACA,IAAAwL,EAAA8D,EAAAzP,EAAA,EAAyBA,EAAA,IAAOA,GAChCgjB,EAAAiB,EAAAjkB,MAAAW,EAAA+L,KAAAya,IAAAnE,EAAAnjB,UACA6jB,GAAAV,EAAAnjB,MAAAqnB,GAAAvmB,EAAAgL,GAAAhL,EAAAqiB,EAAArX,EAAA8D,GAAA9O,EAAAqiB,EAAAvT,GAIAwU,EAAAtY,IAAAub,EACAjD,EAAAxU,IAAAyX,MAEA,EACAlE,EAAAiB,GACAtY,EAAAqX,EAAA5d,KAAAuG,EACAqX,EAAAvT,EAAAuT,EAAA5d,KAAAqK,EAEA,GACAiU,GAAAgB,EAAA1B,EAAA5d,KAAAyD,aACSma,IAAAle,MAGTmf,EAAApkB,MAAA6jB,EAGA,SAAA5hB,EAAAmiB,EAAA/C,EAAA9gB,EAAA0iB,GACA,IAAAmB,EAAApkB,MAAA,SACA,IAAA8L,EAAAsY,EAAAtY,EAAAtG,EAAAsG,EACA8D,EAAAwU,EAAAxU,EAAApK,EAAAoK,EACA2X,EAAAtE,EAAA5B,EACAnI,EAAApN,IAAA8D,IAGA,GAAA2X,IAAAJ,EAAAjO,EASA,OARAA,EAAAgO,IACA,IAAApb,IAA+BoN,IAA/BpN,EAAyBsU,MAAMtU,GAC/B,IAAA8D,IAA+BsJ,IAA/BtJ,EAAyBwQ,MAAMxQ,GAC/BsJ,EAAA+N,IAAA/N,EAAArM,KAAAoH,KAAAgT,EAAA/N,IACA1T,EAAA4c,IAAAtW,EAAAsY,EAAApkB,MAAAmlB,EAAAjM,EACA1T,EAAA8c,IAAA1S,EAAAwU,EAAApkB,MAAAmlB,EAAAjM,IAGA,EAEA,KAAAkL,EAAA9jB,QAAA4Y,GAAAgO,GAAA,EAGA9C,EAAA7e,OAAAC,GAAA4e,EAAAnf,QACA,IAAA6G,IAA6BoN,IAA7BpN,EAAuBsU,MAAMtU,GAC7B,IAAA8D,IAA6BsJ,IAA7BtJ,EAAuBwQ,MAAMxQ,GAC7BsJ,EAAA+N,IAAA/N,EAAArM,KAAAoH,KAAAgT,EAAA/N,KAGA,GACAkL,EAAA7e,OAAAC,IACA+hB,EAAA1C,EAAAT,EAAA7e,KAAAyD,OAAAmc,EAAAjM,EACA1T,EAAA4c,IAAAtW,EAAAyb,EACA/hB,EAAA8c,IAAA1S,EAAA2X,SAEKnD,IAAAnf,OAwBL,OArBA8a,EAAAG,WAAA,SAAA3f,GACAiN,EAAAjN,EACA2f,KAGAH,EAAA8D,SAAA,SAAAtjB,GACA,OAAAF,UAAAC,QAAAujB,EAAA,oBAAAtjB,IAAwE4f,IAAQ5f,GAAA2f,IAAAH,GAAA8D,GAGhF9D,EAAAyH,YAAA,SAAAjnB,GACA,OAAAF,UAAAC,QAAA2mB,EAAA1mB,IAAAwf,GAAAlT,KAAAoH,KAAAgT,IAGAlH,EAAA0H,YAAA,SAAAlnB,GACA,OAAAF,UAAAC,QAAA4mB,EAAA3mB,IAAAwf,GAAAlT,KAAAoH,KAAAiT,IAGAnH,EAAA2H,MAAA,SAAAnnB,GACA,OAAAF,UAAAC,QAAA6mB,EAAA5mB,IAAAwf,GAAAlT,KAAAoH,KAAAkT,IAGApH,GCxHe4H,WAAA,WACf,WAAAC,KAGA,SAAAA,KACAlnB,KAAAmnB,QAGAD,GAAA/nB,UAAA,CACAsB,YAAAymB,GACAC,MAAA,WACAnnB,KAAAkT,EACAlT,KAAAR,EAAA,GAEAkH,IAAA,SAAAwI,GACAkY,GAAAC,GAAAnY,EAAAlP,KAAAR,GAEA4nB,GAAApnB,KAAAqnB,GAAAnU,EAAAlT,KAAAkT,GAEAlT,KAAAkT,EAAAlT,KAAAR,GAAA6nB,GAAA7nB,EAAiCQ,KAAAkT,EAAAmU,GAAA7nB,GAEjC8nB,QAAA,WACA,OAAAtnB,KAAAkT,IAGA,IAAAmU,GAAA,IAAAH,GAEA,SAAAE,GAAAH,EAAA1hB,EAAAC,GACA,IAAA4F,EAAA6b,EAAA/T,EAAA3N,EAAAC,EACA+hB,EAAAnc,EAAA7F,EACAiiB,EAAApc,EAAAmc,EACAN,EAAAznB,EAAA+F,EAAAiiB,GAAAhiB,EAAA+hB,GCrCO,IAAIE,GAAO,KAEPC,GAAEvb,KAAAsO,GACFkN,GAASD,GAAE,EACfE,GAAgBF,GAAE,EACdG,GAAQ,EAAFH,GAEVI,GAAcJ,GAAE,IAChBd,GAAAza,KAAAya,IACAmB,GAAA5b,KAAA4b,KACAC,GAAA7b,KAAA6b,MACIC,GAAG9b,KAAAuP,IAEPwM,IADA/b,KAAAgc,KACAhc,KAAA+b,KAEAE,IADAjc,KAAA8V,MACA9V,KAAAic,KAEIC,IADJlc,KAAAkO,IACOlO,KAAAgP,KAIP5H,IAHQpH,KAAAmc,KAGRnc,KAAAoH,MACAgV,GAAApc,KAAAoc,IACA,SAAAC,GAAApd,GACP,OAAAA,EAAA,IAAAA,GAAA,EAA8Bsc,GAAEvb,KAAAqc,KAAApd,GAEzB,SAAA4P,GAAA5P,GACP,OAAAA,EAAA,EAAiBuc,GAAMvc,GAAA,GAAauc,GAAMxb,KAAA6O,KAAA5P,GC3B3B,SAASqd,MCICxB,KACXA,KCDP,SAASyB,GAASC,GACzB,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAeb,GAAGY,GAClB,OAAAC,EAAmBb,GAAGW,GAAAE,EAAmBT,GAAGO,GAAUP,GAAGQ,IAKlD,SAAAE,GAAAxjB,EAAAC,GACP,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAUO,SAAAwjB,GAAAzf,GACP,IAAAiP,EAAUjF,GAAIhK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACdA,EAAA,IAAAiP,EAAAjP,EAAA,IAAAiP,EAAAjP,EAAA,IAAAiP,ECTWyO,KCdX,SAAAgC,GAAAL,EAAAC,GACA,OAAUjC,GAAGgC,GAAWlB,GAAEkB,EAAAzc,KAAA+c,OAAAN,EAAiCf,IAAOA,GAAGe,EAAAC,GAGrEI,GAAAE,OAAAF,GC0Be,IChCAG,GAAA,WACf,IACAC,EADAC,EAAA,GAEA,OACAta,MAAA,SAAA5D,EAAA8D,GACAma,EAAA7oB,KAAA,CAAA4K,EAAA8D,KAEAqa,UAAA,WACAD,EAAA9oB,KAAA6oB,EAAA,KAEAG,QAAaf,GACbgB,OAAA,WACAH,EAAA1pB,OAAA,GAAA0pB,EAAA9oB,KAAA8oB,EAAAzH,MAAAthB,OAAA+oB,EAAAI,WAEAC,OAAA,WACA,IAAAA,EAAAL,EAGA,OAFAA,EAAA,GACAD,EAAA,KACAM,KClBeC,GAAA,SAAArkB,EAAAC,GACf,OAASohB,GAAGrhB,EAAA,GAAAC,EAAA,IAAgBiiB,IAAWb,GAAGrhB,EAAA,GAAAC,EAAA,IAAgBiiB,ICA1D,SAAAoC,GAAA7a,EAAA8a,EAAAC,EAAAC,GACAhqB,KAAAoL,EAAA4D,EACAhP,KAAAkiB,EAAA4H,EACA9pB,KAAAgJ,EAAA+gB,EAEA/pB,KAAA+U,EAAAiV,EAEAhqB,KAAAoN,GAAA,EAEApN,KAAAN,EAAAM,KAAAmT,EAAA,KAMe,IAAAsW,GAAA,SAAAQ,EAAAC,EAAAC,EAAAjR,EAAAkR,GACf,IAEA3qB,EACAC,EAHAyR,EAAA,GACAkZ,EAAA,GA4BA,GAzBAJ,EAAApM,QAAA,SAAAyM,GACA,MAAA5qB,EAAA4qB,EAAA1qB,OAAA,QACA,IAAAF,EAGA0L,EAFAiI,EAAAiX,EAAA,GACAC,EAAAD,EAAA5qB,GAKA,GAAQkqB,GAAUvW,EAAAkX,GAAlB,CAGA,IAFAH,EAAAb,YAEA9pB,EAAA,EAAiBA,EAAAC,IAAOD,EACxB2qB,EAAApb,OAAAqE,EAAAiX,EAAA7qB,IAAA,GAAA4T,EAAA,IAGA+W,EAAAZ,eAIArY,EAAA3Q,KAAA4K,EAAA,IAAAye,GAAAxW,EAAAiX,EAAA,UACAD,EAAA7pB,KAAA4K,EAAApC,EAAA,IAAA6gB,GAAAxW,EAAA,KAAAjI,GAAA,IACA+F,EAAA3Q,KAAA4K,EAAA,IAAAye,GAAAU,EAAAD,EAAA,UACAD,EAAA7pB,KAAA4K,EAAApC,EAAA,IAAA6gB,GAAAU,EAAA,KAAAnf,GAAA,OAEA+F,EAAAvR,OAAA,CAKA,IAJAyqB,EAAA5d,KAAAyd,GACEM,GAAIrZ,GACJqZ,GAAIH,GAEN5qB,EAAA,EAAAC,EAAA2qB,EAAAzqB,OAA8BH,EAAAC,IAAOD,EACrC4qB,EAAA5qB,GAAAsV,EAAAoV,KAOA,IAJA,IACAL,EACA9a,EAFA6H,EAAA1F,EAAA,KAIA,CAKA,IAHA,IAAAvC,EAAAiI,EACA4T,GAAA,EAEA7b,EAAAxB,GACA,IAAAwB,IAAAlP,KAAAmX,EAAA,OAGAiT,EAAAlb,EAAAsT,EACAkI,EAAAb,YAEA,GAGA,GAFA3a,EAAAxB,EAAAwB,EAAA5F,EAAAoE,GAAA,EAEAwB,EAAAmG,EAAA,CACA,GAAA0V,EACA,IAAAhrB,EAAA,EAAAC,EAAAoqB,EAAAlqB,OAAwCH,EAAAC,IAAOD,EAC/C2qB,EAAApb,SAAA8a,EAAArqB,IAAA,GAAAuP,EAAA,SAGAkK,EAAAtK,EAAAxD,EAAAwD,EAAAlP,EAAA0L,EAAA,EAAAgf,GAGAxb,IAAAlP,MACO,CACP,GAAA+qB,EAGA,IAFAX,EAAAlb,EAAAuE,EAAA+O,EAEAziB,EAAAqqB,EAAAlqB,OAAA,EAAqCH,GAAA,IAAQA,EAC7C2qB,EAAApb,SAAA8a,EAAArqB,IAAA,GAAAuP,EAAA,SAGAkK,EAAAtK,EAAAxD,EAAAwD,EAAAuE,EAAA/H,GAAA,EAAAgf,GAGAxb,IAAAuE,EAIA2W,GADAlb,IAAA5F,GACAkZ,EACAuI,YACK7b,EAAAxB,GAELgd,EAAAZ,aAIA,SAASgB,GAAIE,GACb,GAAAhrB,EAAAgrB,EAAA9qB,OAAA,CAMA,IALA,IAAAF,EAGA8F,EAFA/F,EAAA,EACA8F,EAAAmlB,EAAA,KAGAjrB,EAAAC,GACA6F,EAAA7F,EAAA8F,EAAAklB,EAAAjrB,GACA+F,EAAA2N,EAAA5N,EACAA,EAAAC,EAGAD,EAAA7F,EAAA8F,EAAAklB,EAAA,GACAllB,EAAA2N,EAAA5N,GCvHA,IAAAolB,GAAU1D,KACK2D,GAAA,SAAAC,EAAA7b,GACf,IAAA4Z,EAAA5Z,EAAA,GACA6Z,EAAA7Z,EAAA,GACA8b,EAAezC,GAAGQ,GAClBkC,EAAA,CAAgB1C,GAAGO,IAAWX,GAAGW,GAAA,GACjC7C,EAAA,EACAiF,EAAA,EACAL,GAAAxD,QACA,IAAA2D,EAAAjC,EAA0BlB,GAASF,IAAQ,IAAAqD,IAAAjC,GAA+BlB,GAASF,IAEnF,QAAAhoB,EAAA,EAAAC,EAAAmrB,EAAAjrB,OAAqCH,EAAAC,IAAOD,EAC5C,GAAAyJ,GAAA+hB,EAAAJ,EAAAprB,IAAAG,OASA,IARA,IAAAqrB,EACA/hB,EACAgiB,EAAAD,EAAA/hB,EAAA,GACAiiB,EAAAD,EAAA,GACAE,EAAAF,EAAA,KAA+BtD,GAC/ByD,EAAkBhD,GAAG+C,GACrBE,EAAkBrD,GAAGmD,GAErBniB,EAAA,EAAmBA,EAAAC,IAAOD,EAAAkiB,EAAAI,EAAAF,EAAAG,EAAAF,EAAAG,EAAAP,EAAAQ,EAAA,CAC1B,IAAAA,EAAAT,EAAAhiB,GACAsiB,EAAAG,EAAA,GACAC,EAAAD,EAAA,KAAiC9D,GACjC4D,EAAoBnD,GAAGsD,GACvBF,EAAoBxD,GAAG0D,GACvBC,EAAAL,EAAAJ,EACA7C,EAAAsD,GAAA,OACAC,EAAAvD,EAAAsD,EACAE,EAAAD,EAAoCnE,GACpCnP,EAAA8S,EAAAG,EAKA,GAJAb,GAAAjkB,IAAcshB,GAAKzP,EAAA+P,EAAYD,GAAGwD,GAAAP,EAAAG,EAAAlT,EAAoC0P,GAAG4D,KACzE9F,GAAA+F,EAAAF,EAAAtD,EAA6CT,GAAG+D,EAGhDE,EAAAX,GAAAvC,EAAA2C,GAAA3C,EAAA,CACA,IAAAmD,EAAkBhD,GAAeL,GAASwC,GAAUxC,GAASgD,IACrD1C,GAAyB+C,GACjC,IAAAC,EAA2BjD,GAAcgC,EAAAgB,GACjC/C,GAAyBgD,GACjC,IAAAC,GAAAH,EAAAF,GAAA,QAA4D5Q,GAAIgR,EAAA,KAEhEnD,EAAAoD,GAAApD,IAAAoD,IAAAF,EAAA,IAAAA,EAAA,OACAf,GAAAc,EAAAF,GAAA,SAgBA,OAAA7F,GAAmB0B,IAAO1B,EAAY0B,IAAOkD,IAAWlD,IAAO,EAAAuD,GC1DhDkB,GAAA,SAAAC,EAAAC,EAAAlT,EAAArC,GACf,gBAAAwV,GACA,IAIAxB,EACAZ,EACAgB,EANA5B,EAAA+C,EAAAC,GACAC,EAAqBlD,KACrBmD,EAAAH,EAAAE,GACAE,GAAA,EAIAnC,EAAA,CACArb,QACAua,YACAC,UACAiD,aAAA,WACApC,EAAArb,MAAA0d,EACArC,EAAAd,UAAAoD,EACAtC,EAAAb,QAAAoD,EACA3C,EAAA,GACAY,EAAA,IAEAgC,WAAA,WACAxC,EAAArb,QACAqb,EAAAd,YACAc,EAAAb,UACAS,EAAmBnS,OAAAgV,EAAA,EAAAhV,CAAKmS,GACxB,IAAAE,EAA0BS,GAAeC,EAAAhU,GAEzCoT,EAAArqB,QACA4sB,IAAAH,EAAAI,eAAAD,GAAA,GACU/C,GAAUQ,EAAW8C,GAAmB5C,EAAAjR,EAAAmT,IACzClC,IACTqC,IAAAH,EAAAI,eAAAD,GAAA,GACAH,EAAA9C,YACArQ,EAAA,YAAAmT,GACAA,EAAA7C,WAGAgD,IAAAH,EAAAQ,aAAAL,GAAA,GACAvC,EAAAY,EAAA,MAEAmC,OAAA,WACAX,EAAAI,eACAJ,EAAA9C,YACArQ,EAAA,YAAAmT,GACAA,EAAA7C,UACA6C,EAAAQ,eAIA,SAAA7d,EAAA4Z,EAAAC,GACAsD,EAAAvD,EAAAC,IAAAwD,EAAArd,MAAA4Z,EAAAC,GAGA,SAAAoE,EAAArE,EAAAC,GACAQ,EAAAra,MAAA4Z,EAAAC,GAGA,SAAAU,IACAc,EAAArb,MAAAie,EACA5D,EAAAE,YAGA,SAAAC,IACAa,EAAArb,QACAqa,EAAAG,UAGA,SAAAkD,EAAA9D,EAAAC,GACAoC,EAAAzqB,KAAA,CAAAooB,EAAAC,IACA0D,EAAAvd,MAAA4Z,EAAAC,GAGA,SAAA8D,IACAJ,EAAAhD,YACA0B,EAAA,GAGA,SAAA2B,IACAF,EAAAzB,EAAA,MAAAA,EAAA,OACAsB,EAAA/C,UACA,IAEA/pB,EAEAyJ,EACAohB,EACAtb,EANAke,EAAAX,EAAAW,QACAC,EAAAb,EAAA3C,SAEAjqB,EAAAytB,EAAAvtB,OAOA,GAHAqrB,EAAApJ,MACAgJ,EAAArqB,KAAAyqB,GACAA,EAAA,KACAvrB,EAEA,KAAAwtB,GAGA,IAAAhkB,GAFAohB,EAAA6C,EAAA,IAEAvtB,OAAA,MAIA,IAHA4sB,IAAAH,EAAAI,eAAAD,GAAA,GACAH,EAAA9C,YAEA9pB,EAAA,EAAqBA,EAAAyJ,IAAOzJ,EAC5B4sB,EAAArd,SAAAsb,EAAA7qB,IAAA,GAAAuP,EAAA,IAGAqd,EAAA7C,gBAQA9pB,EAAA,KAAAwtB,GAAAC,EAAA3sB,KAAA2sB,EAAAtL,MAAAthB,OAAA4sB,EAAAzD,UACAO,EAAAzpB,KAAA2sB,EAAAniB,OAAAoiB,KAGA,OAAA/C,IAIA,SAAA+C,GAAA9C,GACA,OAAAA,EAAA1qB,OAAA,EAKA,SAASmtB,GAAmBxnB,EAAAC,GAC5B,QAAAD,IAAA6F,GAAA,KAAA7F,EAAA,GAAoCoiB,GAASF,GAAUE,GAAMpiB,EAAA,MAAAC,IAAA4F,GAAA,KAAA5F,EAAA,GAAsCmiB,GAASF,GAAUE,GAAMniB,EAAA,ICjI7G0mB,GAAI,WACnB,UAKA,SAAA9B,GACA,IAGAiD,EAHAlC,EAAA1lB,IACA2lB,EAAA3lB,IACA6nB,EAAA7nB,IAIA,OACA8jB,UAAA,WACAa,EAAAb,YACA8D,EAAA,GAEAre,MAAA,SAAAuc,EAAAI,GACA,IAAA4B,EAAAhC,EAAA,EAAgC7D,IAAMA,GACtCkE,EAAkBhF,GAAG2E,EAAAJ,GAEXvE,GAAGgF,EAASlE,IAAMD,IAE5B2C,EAAApb,MAAAmc,EAAAC,KAAAO,GAAA,IAA6DhE,IAAUA,IACvEyC,EAAApb,MAAAse,EAAAlC,GACAhB,EAAAZ,UACAY,EAAAb,YACAa,EAAApb,MAAAue,EAAAnC,GACAhB,EAAApb,MAAAuc,EAAAH,GACAiC,EAAA,GACOC,IAAAC,GAAA3B,GAAsClE,KAEjCd,GAAGuE,EAAAmC,GAAoB7F,KAAO0D,GAAAmC,EAAqB7F,IAEnDb,GAAG2E,EAAAgC,GAAoB9F,KAAO8D,GAAAgC,EAAqB9F,IAC/D2D,EAqBA,SAAAD,EAAAC,EAAAG,EAAAI,GACA,IAAAL,EACAG,EACA+B,EAA0BnF,GAAG8C,EAAAI,GAC7B,OAAS3E,GAAG4G,GAAsB/F,GAAUM,IAAMM,GAAG+C,IAAAK,EAAoBxD,GAAG0D,IAAUtD,GAAGkD,GAAYlD,GAAGsD,IAAAL,EAAoBrD,GAAGmD,IAAU/C,GAAG8C,KAAAG,EAAAG,EAAA+B,KAAApC,EAAAO,GAAA,EAzB5I8B,CAAAtC,EAAAC,EAAAG,EAAAI,GACAvB,EAAApb,MAAAse,EAAAlC,GACAhB,EAAAZ,UACAY,EAAAb,YACAa,EAAApb,MAAAue,EAAAnC,GACAiC,EAAA,GAGAjD,EAAApb,MAAAmc,EAAAI,EAAAH,EAAAO,GACA2B,EAAAC,GAEA/D,QAAA,WACAY,EAAAZ,UACA2B,EAAAC,EAAA3lB,KAEAynB,MAAA,WACA,SAAAG,KAYA,SAAAK,EAAAC,EAAAC,EAAAxD,GACA,IAAAvB,EAEA,SAAA6E,EACA7E,EAAA+E,EAAsBjG,GACtByC,EAAApb,OAAkB0Y,GAAEmB,GACpBuB,EAAApb,MAAA,EAAA6Z,GACAuB,EAAApb,MAAiB0Y,GAAEmB,GACnBuB,EAAApb,MAAiB0Y,GAAE,GACnB0C,EAAApb,MAAiB0Y,IAAEmB,GACnBuB,EAAApb,MAAA,GAAA6Z,GACAuB,EAAApb,OAAkB0Y,IAAEmB,GACpBuB,EAAApb,OAAkB0Y,GAAE,GACpB0C,EAAApb,OAAkB0Y,GAAEmB,QACjB,GAAUjC,GAAG8G,EAAA,GAAAC,EAAA,IAAoBlG,GAAO,CAC3C,IAAAmB,EAAA8E,EAAA,GAAAC,EAAA,GAAmCjG,IAAMA,GACzCmB,EAAA+E,EAAAhF,EAAA,EACAwB,EAAApb,OAAA4Z,EAAAC,GACAuB,EAAApb,MAAA,EAAA6Z,GACAuB,EAAApb,MAAA4Z,EAAAC,QAEAuB,EAAApb,MAAA2e,EAAA,GAAAA,EAAA,KAnFC,EAAuDjG,IAAKC,KCA7CV,KCDFA,KACIA,KCFH,SAAA4G,GAAAC,GACf9tB,KAAA+tB,SAAAD,EAEAD,GAAA1uB,UAAA,CACA6uB,QAAA,IACAC,YAAA,SAAApuB,GACA,OAAAG,KAAAguB,QAAAnuB,EAAAG,MAEAysB,aAAA,WACAzsB,KAAAkuB,MAAA,GAEArB,WAAA,WACA7sB,KAAAkuB,MAAAzoB,KAEA8jB,UAAA,WACAvpB,KAAAmuB,OAAA,GAEA3E,QAAA,WACA,IAAAxpB,KAAAkuB,OAAAluB,KAAA+tB,SAAAK,YACApuB,KAAAmuB,OAAA1oB,KAEAuJ,MAAA,SAAA5D,EAAA8D,GACA,OAAAlP,KAAAmuB,QACA,OAEAnuB,KAAA+tB,SAAAM,OAAAjjB,EAAA8D,GAEAlP,KAAAmuB,OAAA,EACA,MAGA,OAEAnuB,KAAA+tB,SAAAO,OAAAljB,EAAA8D,GAEA,MAGA,QAEAlP,KAAA+tB,SAAAM,OAAAjjB,EAAApL,KAAAguB,QAAA9e,GAEAlP,KAAA+tB,SAAAhC,IAAA3gB,EAAA8D,EAAAlP,KAAAguB,QAAA,EAAmDnG,MAMnD8B,OAAUlB,IC/CMxB,KCHD,SAAAsH,KACfvuB,KAAAwuB,QAAA,GA6DA,SAASC,GAAMnM,GACf,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IA5DAiM,GAAApvB,UAAA,CACA6uB,QAAA,IACAU,QAAWD,GAAM,KACjBR,YAAA,SAAApuB,GAEA,OADAA,QAAAG,KAAAguB,UAAAhuB,KAAAguB,QAAAnuB,EAAAG,KAAA0uB,QAAA,MACA1uB,MAEAysB,aAAA,WACAzsB,KAAAkuB,MAAA,GAEArB,WAAA,WACA7sB,KAAAkuB,MAAAzoB,KAEA8jB,UAAA,WACAvpB,KAAAmuB,OAAA,GAEA3E,QAAA,WACA,IAAAxpB,KAAAkuB,OAAAluB,KAAAwuB,QAAAhuB,KAAA,KACAR,KAAAmuB,OAAA1oB,KAEAuJ,MAAA,SAAA5D,EAAA8D,GACA,OAAAlP,KAAAmuB,QACA,OAEAnuB,KAAAwuB,QAAAhuB,KAAA,IAAA4K,EAAA,IAAA8D,GAEAlP,KAAAmuB,OAAA,EACA,MAGA,OAEAnuB,KAAAwuB,QAAAhuB,KAAA,IAAA4K,EAAA,IAAA8D,GAEA,MAGA,QAEA,MAAAlP,KAAA0uB,UAAA1uB,KAAA0uB,QAAmDD,GAAMzuB,KAAAguB,UAEzDhuB,KAAAwuB,QAAAhuB,KAAA,IAAA4K,EAAA,IAAA8D,EAAAlP,KAAA0uB,WAMA/E,OAAA,WACA,GAAA3pB,KAAAwuB,QAAA5uB,OAAA,CACA,IAAA+pB,EAAA3pB,KAAAwuB,QAAA1nB,KAAA,IAGA,OADA9G,KAAAwuB,QAAA,GACA7E,EAEA,cCpDO,SAAAgF,GAAAC,GACP,gBAAAxE,GACA,IAAAlX,EAAA,IAAA2b,GAEA,QAAA3pB,KAAA0pB,EACA1b,EAAAhO,GAAA0pB,EAAA1pB,GAIA,OADAgO,EAAAkX,SACAlX,GAIA,SAAA2b,MAEAA,GAAA1vB,UAAA,CACAsB,YAAAouB,GACA7f,MAAA,SAAA5D,EAAA8D,GACAlP,KAAAoqB,OAAApb,MAAA5D,EAAA8D,IAEA8d,OAAA,WACAhtB,KAAAoqB,OAAA4C,UAEAzD,UAAA,WACAvpB,KAAAoqB,OAAAb,aAEAC,QAAA,WACAxpB,KAAAoqB,OAAAZ,WAEAiD,aAAA,WACAzsB,KAAAoqB,OAAAqC,gBAEAI,WAAA,WACA7sB,KAAAoqB,OAAAyC,eCjCiB5E,GAAG,GAAMH,ICKH6G,GAAW,CAClC3f,MAAA,SAAA5D,EAAA8D,GACAlP,KAAAoqB,OAAApb,MAAA5D,EAA0B0c,GAAO5Y,EAAM4Y,OCXhC,SAAAgH,GAAAC,GACP,gBAAA3jB,EAAA8D,GACA,IAAA8f,EAAa/G,GAAG7c,GAChB6jB,EAAahH,GAAG/Y,GAChBqJ,EAAAwW,EAAAC,EAAAC,GACA,OAAA1W,EAAA0W,EAAqB5G,GAAGjd,GAAAmN,EAAS8P,GAAGnZ,KAG7B,SAAAggB,GAAAnJ,GACP,gBAAA3a,EAAA8D,GACA,IAAAgT,EAAY3O,GAAInI,IAAA8D,KAChB9O,EAAA2lB,EAAA7D,GACAiN,EAAa9G,GAAGjoB,GAChBgvB,EAAanH,GAAG7nB,GAChB,OAAY4nB,GAAK5c,EAAA+jB,EAAAjN,EAAAkN,GAAkBpU,GAAIkH,GAAAhT,EAAAigB,EAAAjN,KCZhC,IAAAmN,GAA4BP,GAAY,SAAAQ,GAC/C,OAAS/b,GAAI,KAAA+b,MAEbD,GAAAlG,OAA+B+F,GAAe,SAAAhN,GAC9C,SAAalH,GAAIkH,EAAA,KAEF,ICNRqN,GAA8BT,GAAY,SAAA1uB,GACjD,OAAAA,EAAcooB,GAAIpoB,OAAYioB,GAAGjoB,KAEjCmvB,GAAApG,OAAiC+F,GAAe,SAAAhN,GAChD,OAAAA,ICJO,SAAAsN,GAAA5G,EAAAC,GACP,OAAAD,EAAkBR,GAAIG,IAAKZ,GAAMkB,GAAA,KAGjC2G,GAAArG,OAAA,SAAA/d,EAAA8D,GACA,OAAA9D,EAAA,EAAiB2c,GAAKG,GAAGhZ,IAAOyY,KCPzB,SAAA8H,GAAA7G,EAAAC,GACP,OAAAD,EAAAC,GAEA4G,GAAAtG,OAAAsG,GCkBe,ICpBfC,GAAA,SACAC,IAAA,QACAC,GAAA,OACAC,GAAA,QACAC,GAAQvc,GAAI,KAEL,SAAAwc,GAAAnH,EAAAC,GACP,IAAArQ,EAAUwC,GAAI8U,GAAKzH,GAAGQ,IACtBmH,EAAAxX,IACAyX,EAAAD,MACA,OAAApH,EAAmBX,GAAGzP,IAAAsX,IAAAJ,GAAA,EAAAC,GAAAK,EAAAC,GAAA,EAAAL,GAAA,EAAAC,GAAAG,KAAAxX,GAAAkX,GAAAC,GAAAK,EAAAC,GAAAL,GAAAC,GAAAG,KAGtBD,GAAA5G,OAAA,SAAA/d,EAAA8D,GAKA,IAJA,IAIA0c,EAJApT,EAAAtJ,EACA8gB,EAAAxX,IACAyX,EAAAD,MAEAvwB,EAAA,EAAiCA,EAbnB,KAgBdwwB,GAAAD,GAAAxX,GAAAoT,GAFApT,GAAAkX,GAAAC,GAAAK,EAAAC,GAAAL,GAAAC,GAAAG,IAAA9gB,IACAwgB,GAAA,EAAAC,GAAAK,EAAAC,GAAA,EAAAL,GAAA,EAAAC,GAAAG,KACAxX,GAAAwX,MACQpJ,GAAGgF,G3BvBJ,U2BmB0CnsB,GAOjD,OAAAqwB,GAAA1kB,GAAAskB,GAAA,EAAAC,GAAAK,EAAAC,GAAA,EAAAL,GAAA,EAAAC,GAAAG,IAAqE/H,GAAGzP,GAAKwC,GAAKqN,GAAG7P,GAAAsX,MCxB9E,SAAAI,GAAA9kB,EAAA8D,GACP,IAAA+f,EAAWhH,GAAG/Y,GACdqJ,EAAU0P,GAAG7c,GAAA6jB,EACb,OAAAA,EAAe5G,GAAGjd,GAAAmN,EAAS8P,GAAGnZ,GAAAqJ,GAE9B2X,GAAA/G,OAAqB+F,GAAgBnH,ICN9B,SAAAoI,GAAAvH,EAAAC,GACP,IAAAuH,EAAAvH,IACAwH,EAAAD,IACA,OAAAxH,GAAA,cAAAwH,EAAAC,MAAA,QAAAD,EAAA,QAAAC,GAAA,UAAAxH,GAAA,SAAAuH,GAAA,QAAAC,GAAA,QAAAD,EAAA,gBAAAC,MAGAF,GAAAhH,OAAA,SAAA/d,EAAA8D,GACA,IAEA0c,EAFA/C,EAAA3Z,EACAzP,EAAA,GAGA,GACA,IAAA2wB,EAAAvH,IACAwH,EAAAD,IACAvH,GAAA+C,GAAA/C,GAAA,SAAAuH,GAAA,QAAAC,GAAA,QAAAD,EAAA,gBAAAC,KAAAnhB,IAAA,SAAAkhB,GAAA,QAAAC,GAAA,QAAAD,EAAA,mBAAAC,WACWzJ,GAAGgF,GAAUnE,MAAOhoB,EAAA,GAE/B,OAAA2L,GAAA,OAAAglB,EAAAvH,MAAAuH,UAAA,gBAAAA,GAAA,mBAAAvH,IChBO,SAAAyH,GAAAllB,EAAA8D,GACP,OAAU+Y,GAAG/Y,GAAMmZ,GAAGjd,GAAKid,GAAGnZ,IAE9BohB,GAAAnH,OAAyB+F,GAAgBlU,ICHlC,SAAAuV,GAAAnlB,EAAA8D,GACP,IAAA+f,EAAWhH,GAAG/Y,GACdqJ,EAAA,EAAc0P,GAAG7c,GAAA6jB,EACjB,OAAAA,EAAe5G,GAAGjd,GAAAmN,EAAS8P,GAAGnZ,GAAAqJ,GAE9BgY,GAAApH,OAA0B+F,GAAe,SAAAhN,GACzC,SAAa6F,GAAI7F,KCPV,SAAAsO,GAAA5H,EAAAC,GACP,OAAUT,GAAIG,IAAKZ,GAAMkB,GAAA,KAAAD,GAGzB4H,GAAArH,OAAA,SAAA/d,EAAA8D,GACA,QAAAA,EAAA,EAAkB6Y,GAAKG,GAAG9c,IAAOuc,YCkBlB,ICzBA8I,GAAA,WACf,OAAAtkB,KAAAwT,UCAe+Q,ICAA,SAAAC,EAAAhiB,GACf,SAAAiiB,EAAAxkB,EAAA6O,GAIA,OAHA7O,EAAA,MAAAA,EAAA,GAAAA,EACA6O,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAtb,UAAAC,QAAAqb,EAAA7O,IAAA,GAAmD6O,GAAA7O,EACnD,WACA,OAAAuC,IAAAsM,EAAA7O,GAKA,OADAwkB,EAAAjiB,OAAAgiB,EACAC,EAXe,CAYZH,IDZY,SAAAI,EAAAliB,GACf,SAAAmiB,EAAAC,EAAAC,GACA,IAAA5lB,EAAAwY,EAGA,OAFAmN,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,IAAA9hB,EAEA,SAAA9D,EAAA8D,EAAA9D,IAAA,UACA,GACAA,EAAA,EAAAuD,IAAA,EACAO,EAAA,EAAAP,IAAA,EACAiV,EAAAxY,IAAA8D,WACS0U,KAAA,GACT,OAAAmN,EAAAC,EAAA9hB,EAAA/C,KAAAoH,MAAA,EAAApH,KAAAic,IAAAxE,OAKA,OADAkN,EAAAniB,OAAAkiB,EACAC,EAnBe,CAoBZL,KEpBYQ,ICCA,SAAAC,EAAAviB,GACf,SAAAwiB,IACA,IAAAL,EAAuBJ,GAAM/hB,UAAApN,MAAAvB,KAAAL,WAC7B,kBACA,OAAAwM,KAAA+b,IAAA4I,MAKA,OADAK,EAAAxiB,OAAAuiB,EACAC,EATe,CAUZV,IDXY,SAAAW,EAAAziB,GACf,SAAA0iB,EAAA3xB,GACA,kBACA,QAAAirB,EAAA,EAAAlrB,EAAA,EAA8BA,EAAAC,IAAOD,EACrCkrB,GAAAhc,IAGA,OAAAgc,GAKA,OADA0G,EAAA1iB,OAAAyiB,EACAC,EAZe,CAaZZ,KEdCa,ICEW,SAAAC,EAAA5iB,GACf,SAAA6iB,EAAA9xB,GACA,IAAA2xB,EAA0BJ,GAAStiB,SAATsiB,CAASvxB,GACnC,kBACA,OAAA2xB,IAAA3xB,GAKA,OADA8xB,EAAA7iB,OAAA4iB,EACAC,EATe,CAUZf,ICXY,SAAAgB,EAAA9iB,GACf,SAAA+iB,EAAA9I,GACA,kBACA,OAAAzc,KAAAic,IAAA,EAAAzZ,KAAAia,GAKA,OADA8I,EAAA/iB,OAAA8iB,EACAC,EARe,CASZjB,IFVMvxB,MAAAC,WAEEwyB,IADML,GAAKtwB,IACHswB,GAAKlyB,OGAjBwyB,GAAA,CACPzxB,KAAA,YAEe,SAAA0xB,GAAAC,GACf,IAAAxpB,EAAcwP,OAAA4M,GAAA,EAAA5M,GACdia,EAAA,GACAC,EAAAJ,GAGA,SAAA7C,EAAAxlB,GACA,IAAArE,EAAAqE,EAAA,GACA9J,EAAA6I,EAAArI,IAAAiF,GAEA,IAAAzF,EAAA,CACA,GAAAuyB,IAAAJ,GAAA,OAAAI,EACA1pB,EAAAjI,IAAA6E,EAAAzF,EAAAsyB,EAAAvxB,KAAA+I,IAGA,OAAAuoB,GAAAryB,EAAA,GAAAqyB,EAAAlyB,QA8BA,OAzCAkyB,EAAA,MAAAA,EAAA,GAA+BH,GAAKvwB,KAAA0wB,GAcpC/C,EAAAgD,OAAA,SAAAlyB,GACA,IAAAF,UAAAC,OAAA,OAAAmyB,EAAA3yB,QACA2yB,EAAA,GAAAzpB,EAAyBwP,OAAA4M,GAAA,EAAA5M,GAMzB,IALA,IAEAvO,EACArE,EAHAzF,GAAA,EACAC,EAAAG,EAAAD,SAIAH,EAAAC,GACA4I,EAAA2pB,IAAA/sB,GAAAqE,EAAA1J,EAAAJ,IAAA,KAAA6I,EAAAjI,IAAA6E,EAAA6sB,EAAAvxB,KAAA+I,IAGA,OAAAwlB,GAGAA,EAAA+C,MAAA,SAAAjyB,GACA,OAAAF,UAAAC,QAAAkyB,EAAuCH,GAAKvwB,KAAAvB,GAAAkvB,GAAA+C,EAAA1yB,SAG5C2vB,EAAAiD,QAAA,SAAAnyB,GACA,OAAAF,UAAAC,QAAAoyB,EAAAnyB,EAAAkvB,GAAAiD,GAGAjD,EAAA5tB,KAAA,WACA,OAAA0wB,KAAAE,UAAAD,SAAAE,YAGAjD,qCClDA,SAAAmD,KACAlyB,KAAAH,EAAA,KAGO,SAAAsyB,GAAArtB,GACPA,EAAAstB,EACAttB,EAAAutB,EACAvtB,EAAAwtB,EACAxtB,EAAAytB,EACAztB,EAAA0tB,EACA1tB,EAAA+X,EAAA,KAwMA,SAAA4V,GAAA5S,EAAA/a,GACA,IAAAqO,EAAArO,EACA2d,EAAA3d,EAAAytB,EACAxuB,EAAAoP,EAAAif,EAEAruB,EACAA,EAAAuuB,IAAAnf,EAAApP,EAAAuuB,EAAA7P,EAAqC1e,EAAAwuB,EAAA9P,EAErC5C,EAAAhgB,EAAA4iB,EAGAA,EAAA2P,EAAAruB,EACAoP,EAAAif,EAAA3P,EACAtP,EAAAof,EAAA9P,EAAA6P,EACAnf,EAAAof,IAAApf,EAAAof,EAAAH,EAAAjf,GACAsP,EAAA6P,EAAAnf,EAGA,SAAAuf,GAAA7S,EAAA/a,GACA,IAAAqO,EAAArO,EACA2d,EAAA3d,EAAAwtB,EACAvuB,EAAAoP,EAAAif,EAEAruB,EACAA,EAAAuuB,IAAAnf,EAAApP,EAAAuuB,EAAA7P,EAAqC1e,EAAAwuB,EAAA9P,EAErC5C,EAAAhgB,EAAA4iB,EAGAA,EAAA2P,EAAAruB,EACAoP,EAAAif,EAAA3P,EACAtP,EAAAmf,EAAA7P,EAAA8P,EACApf,EAAAmf,IAAAnf,EAAAmf,EAAAF,EAAAjf,GACAsP,EAAA8P,EAAApf,EAGA,SAAAwf,GAAA7tB,GACA,KAAAA,EAAAwtB,GACAxtB,IAAAwtB,EAGA,OAAAxtB,EA/OAotB,GAAA/yB,UAAA,CACAsB,YAAAyxB,GACAnkB,OAAA,SAAA6kB,EAAA9tB,GACA,IAAAf,EAAA8uB,EAAAC,EAEA,GAAAF,EAAA,CAMA,GALA9tB,EAAA0tB,EAAAI,EACA9tB,EAAA+X,EAAA+V,EAAA/V,EACA+V,EAAA/V,IAAA+V,EAAA/V,EAAA2V,EAAA1tB,GACA8tB,EAAA/V,EAAA/X,EAEA8tB,EAAAL,EAAA,CAGA,IAFAK,IAAAL,EAEAK,EAAAN,GACAM,IAAAN,EAGAM,EAAAN,EAAAxtB,OAEA8tB,EAAAL,EAAAztB,EAGAf,EAAA6uB,OACK5yB,KAAAH,GACL+yB,EAAAD,GAAA3yB,KAAAH,GACAiF,EAAA0tB,EAAA,KACA1tB,EAAA+X,EAAA+V,EACAA,EAAAJ,EAAAI,EAAAN,EAAAxtB,EACAf,EAAA6uB,IAEA9tB,EAAA0tB,EAAA1tB,EAAA+X,EAAA,KACA7c,KAAAH,EAAAiF,EACAf,EAAA,MAQA,IALAe,EAAAwtB,EAAAxtB,EAAAytB,EAAA,KACAztB,EAAAstB,EAAAruB,EACAe,EAAAutB,GAAA,EACAO,EAAA9tB,EAEAf,KAAAsuB,GAGAtuB,KAFA8uB,EAAA9uB,EAAAquB,GAEAE,GACAQ,EAAAD,EAAAN,IAEAO,EAAAT,GACAtuB,EAAAsuB,EAAAS,EAAAT,GAAA,EACAQ,EAAAR,GAAA,EACAO,EAAAC,IAEAD,IAAA7uB,EAAAwuB,IACAE,GAAAzyB,KAAA+D,GAEAA,GADA6uB,EAAA7uB,GACAquB,GAGAruB,EAAAsuB,GAAA,EACAQ,EAAAR,GAAA,EACAK,GAAA1yB,KAAA6yB,KAGAC,EAAAD,EAAAP,IAEAQ,EAAAT,GACAtuB,EAAAsuB,EAAAS,EAAAT,GAAA,EACAQ,EAAAR,GAAA,EACAO,EAAAC,IAEAD,IAAA7uB,EAAAuuB,IACAI,GAAA1yB,KAAA+D,GAEAA,GADA6uB,EAAA7uB,GACAquB,GAGAruB,EAAAsuB,GAAA,EACAQ,EAAAR,GAAA,EACAI,GAAAzyB,KAAA6yB,IAIA9uB,EAAA6uB,EAAAR,EAGApyB,KAAAH,EAAAwyB,GAAA,GAEAzrB,OAAA,SAAA9B,GACAA,EAAA+X,IAAA/X,EAAA+X,EAAA2V,EAAA1tB,EAAA0tB,GACA1tB,EAAA0tB,IAAA1tB,EAAA0tB,EAAA3V,EAAA/X,EAAA+X,GACA/X,EAAA+X,EAAA/X,EAAA0tB,EAAA,KACA,IACAO,EAGAxuB,EACAyuB,EALAjvB,EAAAe,EAAAstB,EAEA3iB,EAAA3K,EAAAwtB,EACAnS,EAAArb,EAAAytB,EAmCA,GAhCyDhuB,EAAzDkL,EAA4B0Q,EAA6BwS,GAAAxS,GAA7B1Q,EAA5B0Q,EAEApc,EACAA,EAAAuuB,IAAAxtB,EAAAf,EAAAuuB,EAAA/tB,EAA6CR,EAAAwuB,EAAAhuB,EAE7CvE,KAAAH,EAAA0E,EAGAkL,GAAA0Q,GACA6S,EAAAzuB,EAAA8tB,EACA9tB,EAAA8tB,EAAAvtB,EAAAutB,EACA9tB,EAAA+tB,EAAA7iB,EACAA,EAAA2iB,EAAA7tB,EAEAA,IAAA4b,GACApc,EAAAQ,EAAA6tB,EACA7tB,EAAA6tB,EAAAttB,EAAAstB,EACAttB,EAAAP,EAAAguB,EACAxuB,EAAAuuB,EAAAxtB,EACAP,EAAAguB,EAAApS,EACAA,EAAAiS,EAAA7tB,IAEAA,EAAA6tB,EAAAruB,EACAA,EAAAQ,EACAO,EAAAP,EAAAguB,KAGAS,EAAAluB,EAAAutB,EACAvtB,EAAAP,GAGAO,MAAAstB,EAAAruB,IACAivB,EAEA,GAAAluB,KAAAutB,EACAvtB,EAAAutB,GAAA,MADA,CAKA,GACA,GAAAvtB,IAAA9E,KAAAH,EAAA,MAEA,GAAAiF,IAAAf,EAAAuuB,GAUA,IATAS,EAAAhvB,EAAAwuB,GAEAF,IACAU,EAAAV,GAAA,EACAtuB,EAAAsuB,GAAA,EACAI,GAAAzyB,KAAA+D,GACAgvB,EAAAhvB,EAAAwuB,GAGAQ,EAAAT,GAAAS,EAAAT,EAAAD,GAAAU,EAAAR,GAAAQ,EAAAR,EAAAF,EAAA,CACAU,EAAAR,GAAAQ,EAAAR,EAAAF,IACAU,EAAAT,EAAAD,GAAA,EACAU,EAAAV,GAAA,EACAK,GAAA1yB,KAAA+yB,GACAA,EAAAhvB,EAAAwuB,GAGAQ,EAAAV,EAAAtuB,EAAAsuB,EACAtuB,EAAAsuB,EAAAU,EAAAR,EAAAF,GAAA,EACAI,GAAAzyB,KAAA+D,GACAe,EAAA9E,KAAAH,EACA,YAYA,IATAkzB,EAAAhvB,EAAAuuB,GAEAD,IACAU,EAAAV,GAAA,EACAtuB,EAAAsuB,GAAA,EACAK,GAAA1yB,KAAA+D,GACAgvB,EAAAhvB,EAAAuuB,GAGAS,EAAAT,GAAAS,EAAAT,EAAAD,GAAAU,EAAAR,GAAAQ,EAAAR,EAAAF,EAAA,CACAU,EAAAT,GAAAS,EAAAT,EAAAD,IACAU,EAAAR,EAAAF,GAAA,EACAU,EAAAV,GAAA,EACAI,GAAAzyB,KAAA+yB,GACAA,EAAAhvB,EAAAuuB,GAGAS,EAAAV,EAAAtuB,EAAAsuB,EACAtuB,EAAAsuB,EAAAU,EAAAT,EAAAD,GAAA,EACAK,GAAA1yB,KAAA+D,GACAe,EAAA9E,KAAAH,EACA,MAIAkzB,EAAAV,GAAA,EACAvtB,EAAAf,EACAA,IAAAquB,SACKttB,EAAAutB,GAELvtB,MAAAutB,GAAA,MAgDe,IAAAY,GAAA,GC7PR,SAAAC,GAAAzjB,EAAA0Q,EAAAgT,EAAAC,GACP,IAAAC,EAAA,YACA/qB,EAAcgrB,GAAK9yB,KAAA6yB,GAAA,EAOnB,OANAA,EAAA5jB,OACA4jB,EAAAlT,QACAgT,GAAAI,GAAAF,EAAA5jB,EAAA0Q,EAAAgT,GACAC,GAAAG,GAAAF,EAAAlT,EAAA1Q,EAAA2jB,GACEI,GAAK/jB,EAAAnH,OAAAmrB,UAAAjzB,KAAA8H,GACLkrB,GAAKrT,EAAA7X,OAAAmrB,UAAAjzB,KAAA8H,GACP+qB,EAEO,SAAAK,GAAAjkB,EAAA0jB,EAAAC,GACP,IAAAC,EAAA,CAAAF,EAAAC,GAEA,OADAC,EAAA5jB,OACA4jB,EAEO,SAAAE,GAAAF,EAAA5jB,EAAA0Q,EAAAwT,GACPN,EAAA,IAAAA,EAAA,GAIGA,EAAA5jB,OAAA0Q,EACHkT,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAA5jB,OACA4jB,EAAAlT,SAQA,SAAAyT,GAAAP,EAAA9S,EAAAE,EAAAE,EAAAE,GACA,IAUA+C,EAVAre,EAAA8tB,EAAA,GACA7tB,EAAA6tB,EAAA,GACAQ,EAAAtuB,EAAA,GACAuuB,EAAAvuB,EAAA,GAGA0P,EAAA,EACAE,EAAA,EACA9D,EAJA7L,EAAA,GAIAquB,EACAviB,EAJA9L,EAAA,GAIAsuB,EAGA,GADAlQ,EAAArD,EAAAsT,EACAxiB,KAAAuS,EAAA,IAGA,GAFAA,GAAAvS,EAEAA,EAAA,GACA,GAAAuS,EAAA3O,EAAA,OACA2O,EAAAzO,MAAAyO,QACG,GAAAvS,EAAA,GACH,GAAAuS,EAAAzO,EAAA,OACAyO,EAAA3O,MAAA2O,GAIA,GADAA,EAAAjD,EAAAkT,EACAxiB,KAAAuS,EAAA,IAGA,GAFAA,GAAAvS,EAEAA,EAAA,GACA,GAAAuS,EAAAzO,EAAA,OACAyO,EAAA3O,MAAA2O,QACG,GAAAvS,EAAA,GACH,GAAAuS,EAAA3O,EAAA,OACA2O,EAAAzO,MAAAyO,GAIA,GADAA,EAAAnD,EAAAqT,EACAxiB,KAAAsS,EAAA,IAGA,GAFAA,GAAAtS,EAEAA,EAAA,GACA,GAAAsS,EAAA3O,EAAA,OACA2O,EAAAzO,MAAAyO,QACG,GAAAtS,EAAA,GACH,GAAAsS,EAAAzO,EAAA,OACAyO,EAAA3O,MAAA2O,GAIA,GADAA,EAAA/C,EAAAiT,EACAxiB,KAAAsS,EAAA,IAGA,GAFAA,GAAAtS,EAEAA,EAAA,GACA,GAAAsS,EAAAzO,EAAA,OACAyO,EAAA3O,MAAA2O,QACG,GAAAtS,EAAA,GACH,GAAAsS,EAAA3O,EAAA,OACA2O,EAAAzO,MAAAyO,GAGA,QAAA3O,EAAA,GAAAE,EAAA,KAEAF,EAAA,IAAAoe,EAAA,IAAAQ,EAAA5e,EAAA5D,EAAAyiB,EAAA7e,EAAA3D,IACA6D,EAAA,IAAAke,EAAA,IAAAQ,EAAA1e,EAAA9D,EAAAyiB,EAAA3e,EAAA7D,KACA,OAGA,SAAAyiB,GAAAV,EAAA9S,EAAAE,EAAAE,EAAAE,GACA,IAAAuS,EAAAC,EAAA,GACA,GAAAD,EAAA,SACA,IASAY,EACAC,EAVAd,EAAAE,EAAA,GACA5jB,EAAA4jB,EAAA5jB,KACA0Q,EAAAkT,EAAAlT,MACA+T,EAAAzkB,EAAA,GACA0kB,EAAA1kB,EAAA,GACA2kB,EAAAjU,EAAA,GACAkU,EAAAlU,EAAA,GACAyF,GAAAsO,EAAAE,GAAA,EACAvO,GAAAsO,EAAAE,GAAA,EAIA,GAAAA,IAAAF,EAAA,CACA,GAAAvO,EAAArF,GAAAqF,GAAAjF,EAAA,OAEA,GAAAuT,EAAAE,EAAA,CACA,GAAAjB,GAA6B,GAAAA,EAAA,IAAAtS,EAAA,YAA7BsS,EAAA,CAAAvN,EAAAnF,GACA2S,EAAA,CAAAxN,EAAA/E,OACK,CACL,GAAAsS,GAA6B,GAAAA,EAAA,GAAA1S,EAAA,YAA7B0S,EAAA,CAAAvN,EAAA/E,GACAuS,EAAA,CAAAxN,EAAAnF,SAMA,GAFAwT,EAAApO,GADAmO,GAAAE,EAAAE,IAAAC,EAAAF,IACAvO,EAEAoO,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAjB,GAA2C,GAAAA,EAAA,IAAAtS,EAAA,YAA3CsS,EAAA,EAAA1S,EAAAwT,GAAAD,EAAAvT,GACA2S,EAAA,EAAAvS,EAAAoT,GAAAD,EAAAnT,OACO,CACP,GAAAsS,GAA2C,GAAAA,EAAA,GAAA1S,EAAA,YAA3C0S,EAAA,EAAAtS,EAAAoT,GAAAD,EAAAnT,GACAuS,EAAA,EAAA3S,EAAAwT,GAAAD,EAAAvT,QAGA,GAAA0T,EAAAE,EAAA,CACA,GAAAlB,GAAyC,GAAAA,EAAA,IAAAxS,EAAA,YAAzCwS,EAAA,CAAA5S,EAAAyT,EAAAzT,EAAA0T,GACAb,EAAA,CAAAzS,EAAAqT,EAAArT,EAAAsT,OACO,CACP,GAAAd,GAAyC,GAAAA,EAAA,GAAA5S,EAAA,YAAzC4S,EAAA,CAAAxS,EAAAqT,EAAArT,EAAAsT,GACAb,EAAA,CAAA7S,EAAAyT,EAAAzT,EAAA0T,GAOA,OAFAZ,EAAA,GAAAF,EACAE,EAAA,GAAAD,GACA,ECzIA,SAAAkB,GAAAC,EAAAlB,GACA,IAAAmB,EAAAD,EAAAC,KACAC,EAAApB,EAAA5jB,KACAilB,EAAArB,EAAAlT,MAEA,OADAqU,IAAAE,MAAAD,IAAAD,GACAE,EAAAvoB,KAAA6b,MAAA0M,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAD,IAAAC,KAAApB,EAAA,GAAAqB,EAAArB,EAAA,KAA8CoB,EAAApB,EAAA,GAAAqB,EAAArB,EAAA,IAC9ClnB,KAAA6b,MAAAyM,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGO,SAAAE,GAAAJ,EAAAlB,GACP,OAAAA,MAAA5jB,OAAA8kB,EAAAC,OAEO,SAAAI,GAAAL,EAAAlB,GACP,OAAAA,MAAA5jB,OAAA8kB,EAAAC,OCrBA,IACOK,GADPC,GAAA,GAGA,SAAAC,KACE5C,GAAYnyB,MACdA,KAAAoL,EAAApL,KAAAkP,EAAAlP,KAAA+rB,IAAA/rB,KAAAw0B,KAAAx0B,KAAAivB,GAAA,KAGO,SAAA+F,GAAAjJ,GACP,IAAAkJ,EAAAlJ,EAAAyG,EACA0C,EAAAnJ,EAAAlP,EACA,GAAAoY,GAAAC,EAAA,CACA,IAAAC,EAAAF,EAAAT,KACAY,EAAArJ,EAAAyI,KACAa,EAAAH,EAAAV,KACA,GAAAW,IAAAE,EAAA,CACA,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvB,EAAAsB,EAAA,GAAAG,EACAxB,EAAAqB,EAAA,GAAAI,EACAvG,EAAAqG,EAAA,GAAAC,EACArG,EAAAoG,EAAA,GAAAE,EACAhsB,EAAA,GAAAsqB,EAAA5E,EAAA6E,EAAA9E,GACA,KAAAzlB,IAAYisB,IAAZ,CACA,IAAAC,EAAA5B,IAAAC,IACA4B,EAAA1G,IAAAC,IACA7jB,GAAA6jB,EAAAwG,EAAA3B,EAAA4B,GAAAnsB,EACA2F,GAAA2kB,EAAA6B,EAAA1G,EAAAyG,GAAAlsB,EACAosB,EAAAb,GAAAjT,OAAA,IAAAkT,GACAY,EAAA5J,MACA4J,EAAAnB,KAAAY,EACAO,EAAAvqB,IAAAkqB,EACAK,EAAAzmB,GAAAymB,EAAA1G,GAAA/f,EAAAqmB,GAAAppB,KAAAoH,KAAAnI,IAAA8D,KAEA6c,EAAA4J,SAIA,IAHA,IAAA3nB,EAAA,KACAlJ,EAAa8wB,GAAO/1B,EAEpBiF,GACA,GAAA6wB,EAAAzmB,EAAApK,EAAAoK,GAAAymB,EAAAzmB,IAAApK,EAAAoK,GAAAymB,EAAAvqB,GAAAtG,EAAAsG,EAAA,CACA,IAAAtG,EAAAwtB,EAAgC,CAChCtkB,EAAAlJ,EAAA0tB,EACA,MAFA1tB,IAAAwtB,MAIK,CACL,IAAAxtB,EAAAytB,EAAgC,CAChCvkB,EAAAlJ,EACA,MAFAA,IAAAytB,EAOEqD,GAAO7nB,OAAAC,EAAA2nB,GACT3nB,IAAA6mB,GAAAc,MAEO,SAAAE,GAAA9J,GACP,IAAA4J,EAAA5J,EAAA4J,OAEAA,IACAA,EAAAnD,IAAAqC,GAAAc,EAAA9Y,GACI+Y,GAAOhvB,OAAA+uB,GACXb,GAAAt0B,KAAAm1B,GACIxD,GAAYwD,GAChB5J,EAAA4J,OAAA,MC5DA,IAAAG,GAAA,GAEA,SAAAC,KACE5D,GAAYnyB,MACdA,KAAAqzB,KAAArzB,KAAAw0B,KAAAx0B,KAAA21B,OAAA,KAGA,SAAAK,GAAAxB,GACA,IAAAyB,EAAAH,GAAAjU,OAAA,IAAAkU,GAEA,OADAE,EAAAzB,OACAyB,EAGA,SAAAC,GAAAD,GACEJ,GAAYI,GACZE,GAAOvvB,OAAAqvB,GACTH,GAAAt1B,KAAAy1B,GACE9D,GAAY8D,GAGP,SAAAG,GAAAH,GACP,IAAAN,EAAAM,EAAAN,OACAvqB,EAAAuqB,EAAAvqB,EACA8D,EAAAymB,EAAA1G,GACA0E,EAAA,CAAAvoB,EAAA8D,GACA1D,EAAAyqB,EAAAzD,EACAjuB,EAAA0xB,EAAApZ,EACAwZ,EAAA,CAAAJ,GACAC,GAAAD,GAGA,IAFA,IAAAhB,EAAAzpB,EAEAypB,EAAAU,QAAAxpB,KAAAya,IAAAxb,EAAA6pB,EAAAU,OAAAvqB,GAAsDkrB,IAAOnqB,KAAAya,IAAA1X,EAAA+lB,EAAAU,OAAA1G,IAAmCqH,IAChG9qB,EAAAypB,EAAAzC,EACA6D,EAAAE,QAAAtB,GACAiB,GAAAjB,GACAA,EAAAzpB,EAGA6qB,EAAAE,QAAAtB,GACEY,GAAYZ,GAGd,IAFA,IAAAC,EAAA3wB,EAEA2wB,EAAAS,QAAAxpB,KAAAya,IAAAxb,EAAA8pB,EAAAS,OAAAvqB,GAAsDkrB,IAAOnqB,KAAAya,IAAA1X,EAAAgmB,EAAAS,OAAA1G,IAAmCqH,IAChG/xB,EAAA2wB,EAAArY,EACAwZ,EAAA71B,KAAA00B,GACAgB,GAAAhB,GACAA,EAAA3wB,EAGA8xB,EAAA71B,KAAA00B,GACEW,GAAYX,GACd,IACAsB,EADAC,EAAAJ,EAAAz2B,OAGA,IAAA42B,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BtB,EAAAmB,EAAAG,GACAvB,EAAAoB,EAAAG,EAAA,GACIjD,GAAU2B,EAAA7B,KAAA4B,EAAAT,KAAAU,EAAAV,KAAAb,GAGdsB,EAAAoB,EAAA,IACAnB,EAAAmB,EAAAI,EAAA,IACApD,KAAcH,GAAU+B,EAAAT,KAAAU,EAAAV,KAAA,KAAAb,GACtBqB,GAAYC,GACZD,GAAYE,GAEP,SAAAwB,GAAAlC,GASP,IARA,IAEAS,EACAC,EACAyB,EACAC,EALAxrB,EAAAopB,EAAA,GACAqC,EAAArC,EAAA,GAKA1vB,EAAaqxB,GAAOt2B,EAEpBiF,GAEA,IADA6xB,EAAAG,GAAAhyB,EAAA+xB,GAAAzrB,GACckrB,GAAOxxB,IAAAwtB,MAAgB,CAGrC,MAFAsE,EAAAxrB,EAAA2rB,GAAAjyB,EAAA+xB,IAEgBP,IAOT,CACPK,GAAmBL,IACnBrB,EAAAnwB,EAAA0tB,EACA0C,EAAApwB,GACS8xB,GAAiBN,IAC1BrB,EAAAnwB,EACAowB,EAAApwB,EAAA+X,GAEAoY,EAAAC,EAAApwB,EAGA,MAjBA,IAAAA,EAAAytB,EAAA,CACA0C,EAAAnwB,EACA,MAGAA,IAAAytB,GFzFO,SAAAiC,GACEhB,GAAKgB,EAAAlsB,OAAA,CACdksB,OACAf,UAAA,IEuGEuD,CAAUxC,GACZ,IAAAyC,EAAAjB,GAAAxB,GAEA,GADE2B,GAAOpoB,OAAAknB,EAAAgC,GACThC,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,OANIW,GAAYZ,GAChBC,EAAAc,GAAAf,EAAAT,MACI2B,GAAOpoB,OAAAkpB,EAAA/B,GACX+B,EAAA5D,KAAA6B,EAAA7B,KAA8BH,GAAU+B,EAAAT,KAAAyC,EAAAzC,MACpCQ,GAAYC,QACZD,GAAYE,GAIhB,GAAAA,EAAA,CAOEW,GAAYZ,GACZY,GAAYX,GACd,IAAAC,EAAAF,EAAAT,KACAX,EAAAsB,EAAA,GACArB,EAAAqB,EAAA,GACAG,EAAAd,EAAA,GAAAX,EACA0B,EAAAf,EAAA,GAAAV,EACAuB,EAAAH,EAAAV,KACAxF,EAAAqG,EAAA,GAAAxB,EACA5E,EAAAoG,EAAA,GAAAvB,EACAvqB,EAAA,GAAA+rB,EAAArG,EAAAsG,EAAAvG,GACAkI,EAAA5B,IAAAC,IACAG,EAAA1G,IAAAC,IACA0E,EAAA,EAAA1E,EAAAiI,EAAA3B,EAAAG,GAAAnsB,EAAAsqB,GAAAyB,EAAAI,EAAA1G,EAAAkI,GAAA3tB,EAAAuqB,GACEP,GAAU2B,EAAA7B,KAAA8B,EAAAE,EAAA1B,GACZsD,EAAA5D,KAAgBH,GAAUiC,EAAAX,EAAA,KAAAb,GAC1BuB,EAAA7B,KAAcH,GAAUsB,EAAAa,EAAA,KAAA1B,GACtBqB,GAAYC,GACZD,GAAYE,QAvBd+B,EAAA5D,KAAkBH,GAAU+B,EAAAT,KAAAyC,EAAAzC,OA0B5B,SAAAsC,GAAA/K,EAAA8K,GACA,IAAArC,EAAAzI,EAAAyI,KACA2C,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GACA6C,EAAAD,EAAAP,EACA,IAAAQ,EAAA,OAAAF,EACA,IAAAlC,EAAAlJ,EAAAyG,EACA,IAAAyC,EAAA,OAAA7f,IAEA,IAAAkiB,GADA9C,EAAAS,EAAAT,MACA,GACA+C,EAAA/C,EAAA,GACAgD,EAAAD,EAAAV,EACA,IAAAW,EAAA,OAAAF,EACA,IAAAG,EAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAhyB,EAAAiyB,EAAAD,EACA,OAAAE,IAAAlyB,EAAA2G,KAAAoH,KAAA/N,IAAA,EAAAkyB,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAGA,SAAAP,GAAAhL,EAAA8K,GACA,IAAA3B,EAAAnJ,EAAAlP,EACA,GAAAqY,EAAA,OAAA4B,GAAA5B,EAAA2B,GACA,IAAArC,EAAAzI,EAAAyI,KACA,OAAAA,EAAA,KAAAqC,EAAArC,EAAA,GAAApf,IC1KO,IAEA+gB,GACA3C,GACAoC,GACItC,GALAgD,GAAO,KACPd,GAAQ,MAUnB,SAAAmC,GAAApyB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,GAGe,SAAAqyB,GAAAC,EAAAzV,GACf,IACAhX,EACA8D,EACAymB,EAHAnB,EAAAqD,EAAAprB,KAAAkrB,IAAA9V,MASA,IALEyR,GAAK,GACPE,GAAA,IAAAt0B,MAAA24B,EAAAj4B,QACAu2B,GAAA,IAAgBlD,GAChB2C,GAAA,IAAgB3C,KAKhB,GAFA0C,EAAad,GAEbL,KAAAmB,GAAAnB,EAAA,GAAAmB,EAAAzmB,GAAAslB,EAAA,KAAAmB,EAAAzmB,GAAAslB,EAAA,GAAAmB,EAAAvqB,GACAopB,EAAA,KAAAppB,GAAAopB,EAAA,KAAAtlB,IACQwnB,GAAQlC,GAChBppB,EAAAopB,EAAA,GAAAtlB,EAAAslB,EAAA,IAGAA,EAAAqD,EAAAhW,UACK,KAAA8T,EAGL,MAFMS,GAAWT,EAAA5J,KAQjB,GHxBO,WACP,QAA2BwI,EAAAd,EAAAxqB,EAAAC,EAA3BzJ,EAAA,EAAAC,EAAsB8zB,GAAK5zB,OAA+BH,EAAAC,IAAOD,EACjE,IAAA80B,EAAgBf,GAAK/zB,MAAAyJ,GAAAuqB,EAAAc,EAAAd,WAAA7zB,QAAA,CACrB,IAAA0I,EAAA,IAAApJ,MAAAgK,GACAwhB,EAAA,IAAAxrB,MAAAgK,GAEA,IAAAD,EAAA,EAAiBA,EAAAC,IAAOD,EACxBX,EAAAW,KAAAyhB,EAAAzhB,GAAAqrB,GAAAC,EAAyDjB,GAAKG,EAAAxqB,KAO9D,IAJAX,EAAAmE,KAAA,SAAAhN,EAAAwJ,GACA,OAAAyhB,EAAAzhB,GAAAyhB,EAAAjrB,KAGAwJ,EAAA,EAAiBA,EAAAC,IAAOD,EACxByhB,EAAAzhB,GAAAwqB,EAAAnrB,EAAAW,IAGA,IAAAA,EAAA,EAAiBA,EAAAC,IAAOD,EACxBwqB,EAAAxqB,GAAAyhB,EAAAzhB,IGGE6uB,GAEF1V,EAAA,CACA,IAAA7B,GAAA6B,EAAA,MACA3B,GAAA2B,EAAA,MACAzB,GAAAyB,EAAA,MACAvB,GAAAuB,EAAA,OJgGO,SAAA7B,EAAAE,EAAAE,EAAAE,GAIP,IAHA,IACAwS,EADA5zB,EAAU6zB,GAAK1zB,OAGfH,KACAs0B,GAAAV,EAA4BC,GAAK7zB,GAAA8gB,EAAAE,EAAAE,EAAAE,IAAA+S,GAAAP,EAAA9S,EAAAE,EAAAE,EAAAE,KAAA1U,KAAAya,IAAAyM,EAAA,MAAAA,EAAA,OAAiGiD,IAAOnqB,KAAAya,IAAAyM,EAAA,MAAAA,EAAA,OAAwCiD,YACpKhD,GAAK7zB,GIrGds4B,CAASxX,EAAAE,EAAAE,EAAAE,GHLN,SAAAN,EAAAE,EAAAE,EAAAE,GACP,IACAmX,EACAzD,EACAC,EACAyD,EACAxE,EACAyE,EACArhB,EACAshB,EACAC,EACAC,EACAC,EACAC,EAZAC,EAAehF,GAAK5zB,OAapBkiB,GAAA,EAEA,IAAAkW,EAAA,EAAiBA,EAAAQ,IAAgBR,EACjC,GAAAzD,EAAef,GAAKwE,GAAA,CAKpB,IAJAxD,EAAAD,EAAAC,KAEAyD,GADAxE,EAAAc,EAAAd,WACA7zB,OAEAq4B,KACa3E,GAAKG,EAAAwE,KAClBxE,EAAA1sB,OAAAkxB,EAAA,GAOA,IAFAA,EAAA,EAAAC,EAAAzE,EAAA7zB,OAEAq4B,EAAAC,GACyCI,GAAzCD,EAAAzD,GAAAL,EAAoCjB,GAAKG,EAAAwE,MAAA,GAAAM,EAAAF,EAAA,GACIF,GAA7CthB,EAAA8d,GAAAJ,EAAwCjB,GAAKG,IAAAwE,EAAAC,MAAA,GAAAE,EAAAvhB,EAAA,IAE7C1K,KAAAya,IAAA0R,EAAAH,GAAsC7B,IAAOnqB,KAAAya,IAAA2R,EAAAH,GAA8B9B,MAC3E7C,EAAA1sB,OAAAkxB,EAAA,EAAyC3E,GAAK9yB,KAAMkzB,GAAgBc,EAAA6D,EAAAlsB,KAAAya,IAAA0R,EAAA/X,GAAkC+V,IAAOzV,EAAA0X,EAAgBjC,GAAO,CAAA/V,EAAApU,KAAAya,IAAAuR,EAAA5X,GAAgC+V,GAAO8B,EAAAvX,GAAA1U,KAAAya,IAAA2R,EAAA1X,GAAwCyV,IAAO3V,EAAA2X,EAAgBhC,GAAO,CAAAnqB,KAAAya,IAAAwR,EAAAvX,GAA4ByV,GAAO6B,EAAAxX,EAAAE,GAAA1U,KAAAya,IAAA0R,EAAA3X,GAA4C2V,IAAOiC,EAAA9X,EAAgB6V,GAAO,CAAA3V,EAAAxU,KAAAya,IAAAuR,EAAAxX,GAAgC2V,GAAO8B,EAAA3X,GAAAtU,KAAAya,IAAA2R,EAAA9X,GAAwC6V,IAAOgC,EAAA/X,EAAgB+V,GAAO,CAAAnqB,KAAAya,IAAAwR,EAAA3X,GAA4B6V,GAAO6B,EAAA5X,EAAAE,GAAA,YAC9eyX,GAIAA,IAAApW,GAAA,GAMA,GAAAA,EAAA,CACA,IAAAzQ,EACAC,EACAuR,EACA4V,EAAArjB,IAEA,IAAA4iB,EAAA,EAAAlW,EAAA,KAAiCkW,EAAAQ,IAAgBR,GACjDzD,EAAiBf,GAAKwE,MAItBnV,GAFAxR,GADAmjB,EAAAD,EAAAC,MACA,GAAAjU,GAEAlP,GADAC,EAAAkjB,EAAA,GAAA/T,GACAnP,GACAmnB,MAAA5V,EAAAf,EAAAyS,GAIA,GAAAzS,EAAA,CACA,IAAA4W,EAAA,CAAAnY,EAAAE,GACAkY,EAAA,CAAApY,EAAAM,GACA+X,EAAA,CAAAjY,EAAAE,GACAgY,EAAA,CAAAlY,EAAAF,GACAqB,EAAA2R,UAAAjzB,KAA2B8yB,GAAK9yB,KAAMkzB,GAAgBc,EAAA1S,EAAA0S,KAAAkE,EAAAC,IAAA,EAAoCrF,GAAK9yB,KAAMkzB,GAAgBc,EAAAmE,EAAAC,IAAA,EAAuBtF,GAAK9yB,KAAMkzB,GAAgBc,EAAAoE,EAAAC,IAAA,EAAuBvF,GAAK9yB,KAAMkzB,GAAgBc,EAAAqE,EAAAH,IAAA,IAKzN,IAAAV,EAAA,EAAiBA,EAAAQ,IAAgBR,GACjCzD,EAAef,GAAKwE,MACpBzD,EAAAd,UAAA7zB,eACe4zB,GAAKwE,IGtEhBc,CAASvY,EAAAE,EAAAE,EAAAE,GAGb7gB,KAAA+4B,MAAezF,GACftzB,KAAAwzB,SACA2C,GAAAP,GAAsBtC,GAAKE,GAAA,KAE3BoE,GAAAz4B,UAAA,CACAsB,YAAAm3B,GACAoB,SAAA,WACA,IAAAD,EAAA/4B,KAAA+4B,MACA,OAAA/4B,KAAAwzB,MAAAxyB,IAAA,SAAAuzB,GACA,IAAA1J,EAAA0J,EAAAd,UAAAzyB,IAAA,SAAAvB,GACA,OAAek1B,GAAiBJ,EAAAwE,EAAAt5B,MAGhC,OADAorB,EAAAhmB,KAAA0vB,EAAAC,KAAA3vB,KACAgmB,KAGAoO,UAAA,WACA,IAAAA,EAAA,GACAF,EAAA/4B,KAAA+4B,MAqBA,OApBA/4B,KAAAwzB,MAAA3V,QAAA,SAAA0W,EAAA90B,GACA,GAAAyJ,GAAAuqB,EAAAc,EAAAd,WAAA7zB,OASA,IARA,IACA6zB,EAEAvqB,EACAgwB,EAvEA3zB,EAAAC,EAAApF,EAmEAo0B,EAAAD,EAAAC,KAEAvrB,GAAA,EAGAkwB,EAAAJ,EAAAtF,EAAAvqB,EAAA,IACAkwB,EAAAD,EAAA1pB,OAAA+kB,EAAA2E,EAAAhZ,MAAAgZ,EAAA1pB,OAEAxG,EAAAC,GACAgwB,EAAAE,EAEAA,GADAD,EAAAJ,EAAAtF,EAAAxqB,KACAwG,OAAA+kB,EAAA2E,EAAAhZ,MAAAgZ,EAAA1pB,KAEAypB,GAAAE,GAAA35B,EAAAy5B,EAAA5wB,OAAA7I,EAAA25B,EAAA9wB,QAhFA9C,EAgFA0zB,EAhFA94B,EAgFAg5B,IAhFA7zB,EAgFAivB,GA/EA,GAAAp0B,EAAA,KAAAoF,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAApF,EAAA,GAAAmF,EAAA,IA+EA,IACA0zB,EAAAz4B,KAAA,CAAAg0B,EAAA3vB,KAAAq0B,EAAAr0B,KAAAu0B,EAAAv0B,SAIAo0B,GAEA/U,MAAA,WACA,OAAAlkB,KAAA+4B,MAAA/tB,OAAA,SAAAqoB,GACA,OAAAA,EAAAlT,QACKnf,IAAA,SAAAqyB,GACL,OACA1kB,OAAA0kB,EAAA5jB,KAAA5K,KACAqM,OAAAmiB,EAAAlT,MAAAtb,SAIAwd,KAAA,SAAAjX,EAAA8D,EAAAoT,GAOA,IANA,IACA7W,EAGA8oB,EAJAlzB,EAAArB,KAEA0L,EAAArK,EAAAg4B,QAAA,EACA35B,EAAA2B,EAAAmyB,MAAA5zB,SAGA20B,EAAAlzB,EAAAmyB,MAAA9nB,KACA,KAAAA,GAAAhM,EAAA,YAGA,IAAA2R,EAAAjG,EAAAmpB,EAAAC,KAAA,GACAljB,EAAApC,EAAAqlB,EAAAC,KAAA,GACA3R,EAAAxR,IAAAC,IAEA,GACAijB,EAAAlzB,EAAAmyB,MAAA/nB,EAAAC,KAAA,KACA6oB,EAAAd,UAAA5V,QAAA,SAAA9I,GACA,IAAAse,EAAAhyB,EAAA03B,MAAAhkB,GACA3H,EAAAimB,EAAA5jB,KACA,GAAArC,IAAAmnB,EAAAC,MAAApnB,MAAAimB,EAAAlT,OAAA,CACA,IAAAuB,EAAAtW,EAAAgC,EAAA,GACAwU,EAAA1S,EAAA9B,EAAA,GACAksB,EAAA5X,IAAAE,IACA0X,EAAAzW,MAAAyW,EAAA5tB,EAAA0B,EAAA9E,gBAEK,OAAAoD,GAGL,OADArK,EAAAg4B,OAAA5tB,EACA,MAAA6W,GAAAO,GAAAP,IAAAiS,EAAAC,KAAA,OC1IO,SAAA+E,GAAAhhB,EAAAnN,EAAA8D,GACPlP,KAAAuY,IACAvY,KAAAoL,IACApL,KAAAkP,IAEAqqB,GAAAp6B,UAAA,CACAsB,YAAA84B,GACAxK,MAAA,SAAAxW,GACA,WAAAA,EAAAvY,KAAA,IAAAu5B,GAAAv5B,KAAAuY,IAAAvY,KAAAoL,EAAApL,KAAAkP,IAEAsqB,UAAA,SAAApuB,EAAA8D,GACA,WAAA9D,EAAA,IAAA8D,EAAAlP,KAAA,IAAAu5B,GAAAv5B,KAAAuY,EAAAvY,KAAAoL,EAAApL,KAAAuY,EAAAnN,EAAApL,KAAAkP,EAAAlP,KAAAuY,EAAArJ,IAEA3N,MAAA,SAAAyN,GACA,OAAAA,EAAA,GAAAhP,KAAAuY,EAAAvY,KAAAoL,EAAA4D,EAAA,GAAAhP,KAAAuY,EAAAvY,KAAAkP,IAEAuqB,OAAA,SAAAruB,GACA,OAAAA,EAAApL,KAAAuY,EAAAvY,KAAAoL,GAEAsuB,OAAA,SAAAxqB,GACA,OAAAA,EAAAlP,KAAAuY,EAAAvY,KAAAkP,GAEAia,OAAA,SAAAwQ,GACA,QAAAA,EAAA,GAAA35B,KAAAoL,GAAApL,KAAAuY,GAAAohB,EAAA,GAAA35B,KAAAkP,GAAAlP,KAAAuY,IAEAqhB,QAAA,SAAAxuB,GACA,OAAAA,EAAApL,KAAAoL,GAAApL,KAAAuY,GAEAshB,QAAA,SAAA3qB,GACA,OAAAA,EAAAlP,KAAAkP,GAAAlP,KAAAuY,GAEAuhB,SAAA,SAAA1uB,GACA,OAAAA,EAAAjK,OAAA4wB,OAAA3mB,EAAA0mB,QAAA9wB,IAAAhB,KAAA45B,QAAA55B,MAAAgB,IAAAoK,EAAA+d,OAAA/d,KAEA2uB,SAAA,SAAA7qB,GACA,OAAAA,EAAA/N,OAAA4wB,OAAA7iB,EAAA4iB,QAAA9wB,IAAAhB,KAAA65B,QAAA75B,MAAAgB,IAAAkO,EAAAia,OAAAja,KAEAT,SAAA,WACA,mBAAAzO,KAAAoL,EAAA,IAAApL,KAAAkP,EAAA,WAAAlP,KAAAuY,EAAA,MAGmB,IAAAghB,GAAA,OACVA,GAAAp6B,UC1CT66B,EAAAzwB,EAAA0wB,EAAA,sBAAAnoB,KAAAkoB,EAAAzwB,EAAA0wB,EAAA,sBAAA7a,KAAA4a,EAAAzwB,EAAA0wB,EAAA,sBAAAhX,KAAA+W,EAAAzwB,EAAA0wB,EAAA,sBAAAhW,KAAA+V,EAAAzwB,EAAA0wB,EAAA,sBAAA3T,KAAA0T,EAAAzwB,EAAA0wB,EAAA,sBAAAhV,KAAA+U,EAAAzwB,EAAA0wB,EAAA,sBAAApI,KAAAmI,EAAAzwB,EAAA0wB,EAAA,sBAAAC,GAAA,eAAAF,EAAAzwB,EAAA0wB,EAAA,sBAAA3rB,KAAA0rB,EAAAzwB,EAAA0wB,EAAA,sBAAAlqB,KAAAiqB,EAAAzwB,EAAA0wB,EAAA,sBAAAhyB","file":"static/js/17.54f348f7.chunk.js","sourcesContent":["export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\", \"visualization\", \"svg\", \"animation\", \"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\n  \"name\": \"Mike Bostock\",\n  \"url\": \"https://bost.ocks.org/mike\"\n};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\n  \"type\": \"git\",\n  \"url\": \"https://github.com/d3/d3.git\"\n};\nexport var scripts = {\n  \"pretest\": \"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\n  \"test\": \"tape 'test/**/*-test.js'\",\n  \"prepublishOnly\": \"yarn test && rollup -c\",\n  \"postpublish\": \"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"\n};\nexport var devDependencies = {\n  \"json2module\": \"0.0\",\n  \"rimraf\": \"2\",\n  \"rollup\": \"0.64\",\n  \"rollup-plugin-ascii\": \"0.0\",\n  \"rollup-plugin-node-resolve\": \"3\",\n  \"rollup-plugin-terser\": \"1\",\n  \"tape\": \"4\"\n};\nexport var dependencies = {\n  \"d3-array\": \"1\",\n  \"d3-axis\": \"1\",\n  \"d3-brush\": \"1\",\n  \"d3-chord\": \"1\",\n  \"d3-collection\": \"1\",\n  \"d3-color\": \"1\",\n  \"d3-contour\": \"1\",\n  \"d3-dispatch\": \"1\",\n  \"d3-drag\": \"1\",\n  \"d3-dsv\": \"1\",\n  \"d3-ease\": \"1\",\n  \"d3-fetch\": \"1\",\n  \"d3-force\": \"1\",\n  \"d3-format\": \"1\",\n  \"d3-geo\": \"1\",\n  \"d3-hierarchy\": \"1\",\n  \"d3-interpolate\": \"1\",\n  \"d3-path\": \"1\",\n  \"d3-polygon\": \"1\",\n  \"d3-quadtree\": \"1\",\n  \"d3-random\": \"1\",\n  \"d3-scale\": \"2\",\n  \"d3-scale-chromatic\": \"1\",\n  \"d3-selection\": \"1\",\n  \"d3-shape\": \"1\",\n  \"d3-time\": \"1\",\n  \"d3-time-format\": \"2\",\n  \"d3-timer\": \"1\",\n  \"d3-transition\": \"1\",\n  \"d3-voronoi\": \"1\",\n  \"d3-zoom\": \"1\"\n};","export var slice = Array.prototype.slice;","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export var xhtml = \"http://www.w3.org/1999/xhtml\";\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};","import namespaces from \"./namespaces\";\nexport default function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n}","import namespace from \"./namespace\";\nimport { xhtml } from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}","function none() {}\n\nexport default function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}","function empty() {\n  return [];\n}\n\nexport default function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}","var matcher = function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function matcher(selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;","export default function (update) {\n  return new Array(update.length);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { Selection } from \"./index\";\nimport { EnterNode } from \"./enter\";\nimport constant from \"../constant\";\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}","import { Selection } from \"./index\";\nexport default function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}","export default function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function (name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n}\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n}","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function () {\n  return this.each(raise);\n}","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function () {\n  return this.each(lower);\n}","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function (name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function () {\n  return this.each(remove);\n}","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function (deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}","var filterEvents = {};\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\nexport default function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n}\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n}","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\nexport var root = [null];\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\nexport default selection;","import { Selection } from \"./index\";\nimport selector from \"../selector\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import { Selection } from \"./index\";\nimport selectorAll from \"../selectorAll\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}","import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}","import { Selection } from \"./index\";\nexport default function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}","export default function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}","export default function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}","export default function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n}","export default function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}","export default function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n}","export default function () {\n  return !this.node();\n}","export default function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}","function propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\nexport default function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}","import creator from \"../creator\";\nexport default function (name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}","export default function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n}","var nextId = 0;\nexport default function local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function get(node) {\n    var id = this._;\n\n    while (!(id in node)) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node[id];\n  },\n  set: function set(node, value) {\n    return node[this._] = value;\n  },\n  remove: function remove(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function toString() {\n    return this._;\n  }\n};","import { event } from \"./selection/on\";\nexport default function () {\n  var current = event,\n      source;\n\n  while (source = current.sourceEvent) {\n    current = source;\n  }\n\n  return current;\n}","export default function (node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([selector == null ? [] : selector], root);\n}","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}","import { event } from \"d3-selection\";\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\nexport default function () {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}","import { select } from \"d3-selection\";\nimport noevent from \"./noevent\";\nexport default function (view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function () {\n      selection.on(\"click.drag\", null);\n    }, 0);\n  }\n\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function () {\n  var value = this._.on.apply(this._, arguments);\n\n  return value === this._ ? this : value;\n};","import { dispatch } from \"d3-dispatch\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport nodrag, { yesdrag } from \"./nodrag\";\nimport noevent, { nopropagation } from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {\n    x: event.x,\n    y: event.y\n  } : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection.on(\"mousedown.drag\", mousedowned).filter(touchable).on(\"touchstart.drag\", touchstarted).on(\"touchmove.drag\", touchmoved).on(\"touchend.drag touchcancel.drag\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx,\n          dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, 500); // Ghost clicks are delayed!\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id),\n        s,\n        dx,\n        dy,\n        sublisteners = listeners.copy();\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n    return function gesture(type) {\n      var p0 = p,\n          n;\n\n      switch (type) {\n        case \"start\":\n          gestures[id] = gesture, n = active++;\n          break;\n\n        case \"end\":\n          delete gestures[id], --active;\n        // nobreak\n\n        case \"drag\":\n          p = point(container, id), n = active;\n          break;\n      }\n\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function (_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function (_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { Timer } from \"./timer\";\nexport default function (callback, delay, time) {\n  var t = new Timer();\n  delay = delay == null ? 0 : +delay;\n  t.restart(function (elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}","import { dispatch } from \"d3-dispatch\";\nimport { timer, timeout } from \"d3-timer\";\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\nexport default function (node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween; // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n\n      if (o.state === STARTED) return timeout(start); // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      } // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n    } // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n    timeout(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    }); // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n\n    self.state = STARTED; // Initialize the tween, deleting null tween.\n\n    tween = new Array(n = self.tween.length);\n\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    } // Dispatch the end event.\n\n\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line no-unused-vars\n\n\n    delete node.__transition;\n  }\n}","import { STARTING, ENDING, ENDED } from \"./transition/schedule\";\nexport default function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}","import { get, set } from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n\n      for (var t = {\n        name: name,\n        value: value\n      }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function (name, value) {\n  var id = this._id;\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return get(node, id).value[name];\n  };\n}","import { color } from \"d3-color\";\nimport { interpolateNumber, interpolateRgb, interpolateString } from \"d3-interpolate\";\nexport default function (a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);\n}","function removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n\n    for (var i in this.__transition) {\n      if (+i !== id) return;\n    }\n\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function () {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}","import { selection } from \"d3-selection\";\nvar Selection = selection.prototype.constructor;\nexport default function () {\n  return new Selection(this._groups, this._parents);\n}","import { tweenValue } from \"./tween\";\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function (value) {\n  return this.tween(\"text\", typeof value === \"function\" ? textFunction(tweenValue(this, \"text\", value)) : textConstant(value == null ? \"\" : value + \"\"));\n}","import { selection } from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nvar id = 0;\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nexport default function transition(name) {\n  return selection().transition(name);\n}\nexport function newId() {\n  return ++id;\n}\nvar selection_prototype = selection.prototype;\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};","import { selector } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}","import { selectorAll } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}","import { matcher } from \"d3-selection\";\nimport { Transition } from \"./index\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}","import { Transition } from \"./index\";\nexport default function (transition) {\n  if (transition._id !== this._id) throw new Error();\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}","import { Transition, newId } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function () {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}","import { get, set, init } from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = start(name) ? init : set;\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\nexport default function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}","import { interpolateTransformSvg as interpolateTransform } from \"d3-interpolate\";\nimport { namespace } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name),\n      i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}","import { namespace } from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}","import { interpolateTransformCss as interpolateTransform } from \"d3-interpolate\";\nimport { style } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = style(this, name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this.styleTween(name, styleRemove(name, i)).on(\"end.style.\" + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === \"function\" ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value)) : styleConstant(name, i, value + \"\"), priority);\n}","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}","import { get, init } from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function () {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;\n}","import { get, set } from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function () {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;\n}","import { get, set } from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;\n}","var exponent = 3;\nexport var polyIn = function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n  return polyIn;\n}(exponent);\nexport var polyOut = function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n  return polyOut;\n}(exponent);\nexport var polyInOut = function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n  return polyInOut;\n}(exponent);","var pi = Math.PI,\n    halfPi = pi / 2;\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}","var overshoot = 1.70158;\nexport var backIn = function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n  return backIn;\n}(overshoot);\nexport var backOut = function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n  return backOut;\n}(overshoot);\nexport var backInOut = function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n  return backInOut;\n}(overshoot);","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\nexport var elasticIn = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticIn.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticIn;\n}(amplitude, period);\nexport var elasticOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticOut;\n}(amplitude, period);\nexport var elasticInOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticInOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticInOut;\n}(amplitude, period);","import { Transition, newId } from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport { easeCubicInOut } from \"d3-ease\";\nimport { now } from \"d3-timer\";\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n\n  return timing;\n}\n\nexport default function (name) {\n  var id, timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}","export function cubicIn(t) {\n  return t * t * t;\n}\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}","import { selection } from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;","import interrupt from \"../interrupt\";\nexport default function (name) {\n  return this.each(function () {\n    interrupt(this, name);\n  });\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { customEvent, event, mouse, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, { nopropagation } from \"./noevent\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function input(x, e) {\n    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function input(y, e) {\n    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function input(xy) {\n    return xy;\n  },\n  output: function output(xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) {\n    if (!(node = node.parentNode)) return;\n  }\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function (group, selection) {\n    if (group.selection) {\n      group.on(\"start.brush\", function () {\n        emitter(this, arguments).beforestart().start();\n      }).on(\"interrupt.brush end.brush\", function () {\n        emitter(this, arguments).end();\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && empty(selection1) ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 && selection1 ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 == null || empty(selection1) ? null : selection1;\n        redraw.call(that);\n        emit.start().brush().end();\n      });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function beforestart() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function start() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function brush() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) {\n      if (event.changedTouches.length < event.touches.length) return noevent();\n    } else if (touchending) return;\n\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group.on(\"touchmove.brush\", moved, true).on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view).on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","export var slice = Array.prototype.slice;","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","var array = Array.prototype;\nexport var slice = array.slice;","import { max, range, tickStep } from \"d3-array\";\nimport { slice } from \"./array\";\nimport { blurX, blurY } from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function () {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20,\n      // blur radius\n  k = 2,\n      // log2(grid cell size)\n  o = r * 3,\n      // grid offset, to pad for blur\n  n = dx + o * 2 >> k,\n      // grid width\n  m = dy + o * 2 >> k,\n      // grid height\n  threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n    data.forEach(function (d, i, data) {\n      var xi = +x(d, i, data) + o >> k,\n          yi = +y(d, i, data) + o >> k,\n          wi = +weight(d, i, data);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    }); // TODO Optimize.\n\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours().thresholds(tz).size([n, m])(values0).map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  } // TODO Optimize.\n\n\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = dx + o * 2 >> k;\n    m = dy + o * 2 >> k;\n    return density;\n  }\n\n  density.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function (_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.ceil(_[0]),\n        _1 = Math.ceil(_[1]);\n\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function (_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function (_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\" : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}","import dsv from \"./dsv\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;","import dsv from \"./dsv\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","import { csvParse, dsvFormat, tsvParse } from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);","import text from \"./text\";\n\nfunction parser(type) {\n  return function (input, init) {\n    return text(input, init).then(function (text) {\n      return new DOMParser().parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\nexport var html = parser(\"text/html\");\nexport var svg = parser(\"image/svg+xml\");","export default function (x, y) {\n  var nodes;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, inherit the existing extent.\n\n\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | x < (x0 + x1) / 2) {\n        case 0:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1));\n\n            break;\n          }\n\n        case 1:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1));\n\n            break;\n          }\n\n        case 2:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y));\n\n            break;\n          }\n\n        case 3:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y));\n\n            break;\n          }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    } // If the quadtree covers the point already, just return.\n    else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function (radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { map } from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i,\n        n = _nodes.length,\n        node;\n    _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n    forces.each(function (force) {\n      force(_alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = _nodes[i];\n      if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\nimport { x, y } from \"./simulation\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do {\n          strength += strengths[q.data.index];\n        } while (q = q.next);\n      }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function () {\n  return Math.random();\n}","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function () {\n      var y; // If available, use the second previously-generated uniform random.\n\n      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.\n      else do {\n          x = source() * 2 - 1;\n          y = source() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n  return randomNormal;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;else max -= min;\n    return function () {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n  return randomUniform;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function () {\n      for (var sum = 0, i = 0; i < n; ++i) {\n        sum += source();\n      }\n\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n  return randomIrwinHall;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function () {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n  return randomLogNormal;\n})(defaultSource);","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function () {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n  return randomBates;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function () {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n  return randomExponential;\n})(defaultSource);","import { map } from \"d3-collection\";\nimport { slice } from \"./array\";\nexport var implicit = {\n  name: \"implicit\"\n};\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\",\n        i = index.get(key);\n\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1,\n        n = _.length,\n        d,\n        key;\n\n    while (++i < n) {\n      if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    }\n\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal().domain(domain).range(range).unknown(unknown);\n  };\n\n  return scale;\n}","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function insert(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n\n      if (after.R) {\n        after = after.R;\n\n        while (after.L) {\n          after = after.L;\n        }\n\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n\n    while (parent && parent.C) {\n      grandpa = parent.U;\n\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n\n      parent = after.U;\n    }\n\n    this._.C = false;\n  },\n  remove: function remove(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n\n    do {\n      if (node === this._) break;\n\n      if (node === parent.L) {\n        sibling = parent.R;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) {\n    node = node.L;\n  }\n\n  return node;\n}\n\nexport default RedBlackTree;","import { cells, edges, epsilon } from \"./Diagram\";\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n} // Liang–Barsky line clipping.\n\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}","import { createBorderEdge } from \"./Edge\";\nimport { cells, edges, epsilon } from \"./Diagram\";\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n\n      for (j = 0; j < m; ++j) {\n        index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      }\n\n      index.sort(function (i, j) {\n        return array[j] - array[i];\n      });\n\n      for (j = 0; j < m; ++j) {\n        array[j] = halfedges[index[j]];\n      }\n\n      for (j = 0; j < m; ++j) {\n        halfedges[j] = array[j];\n      }\n    }\n  }\n}\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length; // Remove any dangling clipped edges.\n\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      } // Insert any border edges as necessary.\n\n\n      iHalfedge = 0, nHalfedges = halfedges.length;\n\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1] : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1] : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0] : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0] : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  } // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n\n\n  if (cover) {\n    var dx,\n        dy,\n        d2,\n        dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0],\n          v01 = [x0, y1],\n          v11 = [x1, y1],\n          v10 = [x1, y0];\n      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);\n    }\n  } // Lastly delete any cells with no edges; these were entirely clipped.\n\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { circles, epsilon2 } from \"./Diagram\";\nvar circlePool = [];\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n      iArc;\n\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  } // else lArc !== rArc\n\n\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}","import { addBeach, removeBeach } from \"./Beach\";\nimport { sortCellHalfedges, cellHalfedgeStart, clipCells } from \"./Cell\";\nimport { firstCircle } from \"./Circle\";\nimport { clipEdges } from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1] || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree();\n  circles = new RedBlackTree();\n\n  while (true) {\n    circle = firstCircle;\n\n    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n  beaches = circles = edges = cells = null;\n}\nDiagram.prototype = {\n  constructor: Diagram,\n  polygons: function polygons() {\n    var edges = this.edges;\n    return this.cells.map(function (cell) {\n      var polygon = cell.halfedges.map(function (i) {\n        return cellHalfedgeStart(cell, edges[i]);\n      });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n  triangles: function triangles() {\n    var triangles = [],\n        edges = this.edges;\n    this.cells.forEach(function (cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n    return triangles;\n  },\n  links: function links() {\n    return this.edges.filter(function (edge) {\n      return edge.right;\n    }).map(function (edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n  find: function find(x, y, radius) {\n    var that = this,\n        i0,\n        i1 = that._found || 0,\n        n = that.cells.length,\n        cell; // Use the previously-found cell, or start with an arbitrary one.\n\n    while (!(cell = that.cells[i1])) {\n      if (++i1 >= n) return null;\n    }\n\n    var dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function (e) {\n        var edge = that.edges[e],\n            v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\nTransform.prototype = {\n  constructor: Transform,\n  scale: function scale(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function translate(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function apply(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function applyX(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function applyY(y) {\n    return y * this.k + this.y;\n  },\n  invert: function invert(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function invertX(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function invertY(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function rescaleX(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function rescaleY(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function toString() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\nexport var identity = new Transform(1, 0, 0);\ntransform.prototype = Transform.prototype;\nexport default function transform(node) {\n  return node.__zoom || identity;\n}","export { version } from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";"],"sourceRoot":""}