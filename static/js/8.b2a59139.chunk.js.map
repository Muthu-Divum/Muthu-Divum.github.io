{"version":3,"sources":["app/components/loader/index.js","app/containers/KnowledgeGraphUnCompressed/variables.js","app/containers/KnowledgeGraphUnCompressed/link.js","app/containers/KnowledgeGraphUnCompressed/node.js","app/containers/KnowledgeGraphUnCompressed/index.js","app/pages/model-explorer/index.js"],"names":["antIcon","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_6__","type","style","fontSize","spin","Loader","className","antd__WEBPACK_IMPORTED_MODULE_7__","indicator","Component","__webpack_require__","r","__webpack_exports__","d","FORCE","d3__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","n","nsp","color","d3","getColor","id","nodeClick","updateNode","selection","call","on","dragStarted","dragging","dragEnded","Math","random","b","attr","isNaN","x","y","max","min","width","updateLink","source","target","updateGraph","selectAll","active","force","alphaTarget","restart","fx","fy","height","enterNode","select","enterLink","initForce","nodes","links","distance","index","iterations","stop","restartGraph","drag","tick","that","d3Graph","ReactDOM","findDOMNode","GRPAH_CONSTANTS","require","Link","this","d3Link","datum","props","data","isParent","react_default","Node","d3Node","name","nodeClicked","_this","onClick","childNodeClicked","fill","getGraphNode","GraphActions","getGraphLink","nodeCopy","linkData","linkDataCopy","linkComponent","nodeComponent","KnowledgeGraphUnCompressed","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","isLoading","showHideFlag","graphnodes","graphlinkData","currrentNode","onClickNode","bind","assertThisInitialized","crawlJSON","setState","undefined","isFromReceipts","generateDataFromJsonLd","node","self","JSON","parse","nodeId","jsonLd","nodeID","pushNode","setTimeout","generateNodesAndLinksComponent","json","parentNode","flag","parentName","keys","length","key","Array","isArray","crawlJSONArray","obj","value","String","constructNodeData","createLink","jsonArray","nodeStr","parent","isExists","canExpand","some","item","canFetchData","i","push","src","isSrcExists","isTargetExists","srcIndex","findIndex","targetIndex","nextProps","GraphNode","content","status","j","GraphLink","Graphobject","prevState","forceUpdate","_this2","map","KnowledgeGraphUnCompressed_node","link","KnowledgeGraphUnCompressed_link","loader","getLinks","getNodes","React","connect","objectSpread","modelExplorer","withRouter","ModelExplorer","containers_KnowledgeGraphUnCompressed__WEBPACK_IMPORTED_MODULE_9__","BasePage"],"mappings":"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","file":"static/js/8.b2a59139.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Spin, Icon } from 'antd';\nimport './index.scss';\n// import loading from 'images/loading.gif';\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 30 }} spin />;\n\nclass Loader extends Component {\n \n\n    render() {\n        return (\n            <div className=\"loader\">\n                <Spin indicator={antIcon} />\n                {/* <img src={loading} alt=\"loading\" width=\"40\" height=\"40\"/> */}\n            </div>\n        );\n    }\n}\n\nexport default Loader;\n","\nimport * as d3 from \"d3\";\nimport ReactDOM from 'react-dom'\n// import _ from 'lodash';\n\n\nexport var FORCE = (function (nsp) {\n\n  var\n    width = 1000,\n    height = 1000,\n    // width = window.innerWidth,\n    // height = window.innerHeight,\n\n    color = d3.scaleOrdinal(d3.schemePaired),\n    // .force(\"charge\", d3.forceManyBody().strength(-200))\n    // .force(\"link\", d3.forceLink(links).distance(100))\n    // .force(\"center\", d3.forceCenter().x(nsp.width /2).y(nsp.height / 2))\n    // .force(\"collide\", d3.forceCollide([5]).iterations([5]));\n\n    initForce = (nodes, links) => {\n      nsp.force = d3.forceSimulation(nodes)\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"center\", d3.forceCenter().x(nsp.width /2 ).y(nsp.height / 2))\n        .force(\"link\", d3.forceLink(links).distance(100).id((d) => {\n            // console.log('d links'+d.index)\n            return d.index;\n        } ))\n        // .force(\"link\", d3.forceLink(links).distance(200))\n        .force(\"collide\", d3.forceCollide([5]).iterations([5]))\n        .restart()\n        // .alphaDecay(0)\n      //  .on(\"tick\", tick);\n       \n    },\n\n\n    stop = ()=> {\n      nsp.force.stop();\n      // selection.exit().remove();\n      // link.exit().remove();\n    },\n\n    restartGraph = (nodes, links) => {\n      d3.forceSimulation(nodes)\n        .force(\"node\",d3.forceSimulation(nodes))\n        .force(\"link\", d3.forceLink(links).distance(100))\n      .restart();\n    },\n\n    getColor = (d) => {\n      return nsp.color(d.id);\n    },\n\n    enterNode = (selection) => {\n      var circle = selection.select('circle')\n        .attr(\"r\", 10)\n        .style(\"fill\", getColor)\n        .call(d3.drag()\n          .on(\"start\", dragStarted)\n          .on(\"drag\", dragging)\n          .on(\"end\", dragEnded)\n        )\n        .on(\"click\",nodeClick)\n      //.style(\"stroke\", \"grey\")\n      //.style(\"stroke-width\", \"3px\")\n\n      selection.select('text')\n        .attr(\"dy\", 20)\n        .style(\"fill\", \"black\")\n        .style(\"font-weight\", \"600\")\n        .style(\"text-transform\", \"uppercase\")\n        .style(\"text-anchor\", \"middle\")\n        .style(\"alignment-baseline\", \"middle\")\n        .style(\"font-size\", \"8px\")\n        .style(\"font-family\", \"cursive\")\n\n\n    },\n\n    nodeClick = (d) => {\n      console.log('click node'+ JSON.stringify(d));\n     \n    },\n\n    updateNode = (selection) => {\n\n      selection.call(d3.drag()\n        .on(\"start\", dragStarted)\n        .on(\"drag\", dragging)\n        .on(\"end\", dragEnded)\n      )\n       const a = Math.random();\n       const b = Math.random();\n      //  selection.data(nodes).exit().remove();\n        selection\n         .attr(\"transform\", (d) => {\n          \n          if(!isNaN(d.x) && !isNaN(d.y)){\n            return \"translate(\" + d.x + \",\" + d.y + \")\"\n          }\n          return \"translate(\" + a + \",\" + b + \")\"\n         })\n          .attr(\"cx\", function(d) { \n            if(!isNaN(d.x)){\n              return Math.max(30, Math.min(width - 30, d.x)); \n            }\n            return a;\n          })\n          .attr(\"cy\", function(d) { \n            if(!isNaN(d.y)){\n              return Math.max(30, Math.min(width - 30, d.y)); \n            }\n            return b;\n          })\n\n         \n        // selection\n        //   .attr(\"transform\", (d) => \"translate(\" + d.x + \",\" + d.y + \")\")\n        //   .attr(\"cx\", function(d) { return Math.max(30, Math.min(height - 30, d.x));})\n        //   .attr(\"cy\", function(d) { return Math.max(30, Math.min(height - 30, d.y));});\n\n    },\n\n    enterLink = (selection) => {\n      selection\n        .attr(\"stroke-width\", 1)\n        .attr(\"stroke\", \"grey\")\n    },\n\n    updateLink = (selection) => {\n\n      selection\n      .attr(\"x1\", (d) => \n      { \n        if(isNaN(d.source.x)){\n          return Math.random();\n        }\n        return d.source.x;\n      })\n      .attr(\"y1\", (d) => \n      { \n        if(isNaN(d.source.y)){\n          return Math.random();\n        }\n        return d.source.y;\n      })\n      .attr(\"x2\", (d) => \n      { \n        if(isNaN(d.target.x)){\n          return Math.random();\n        }\n        return d.target.x;\n      })\n      .attr(\"y2\", (d) => \n      { \n        if(isNaN(d.target.y)){\n          return Math.random();\n        }\n        return d.target.y;\n      })\n     \n      // selection\n      //   .attr(\"x1\", (d) => d.source.x)\n      //   .attr(\"y1\", (d) => d.source.y)\n      //   .attr(\"x2\", (d) => d.target.x)\n        // .attr(\"y2\", (d) => d.target.y);\n    },\n\n    updateGraph = (selection) => {\n      selection.selectAll('.node')\n        .call(updateNode)\n      selection.selectAll('.link')\n        .call(updateLink);\n\n    },\n\n    dragStarted = (d) => {\n      if (!d3.event.active) nsp.force.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n     \n    },\n\n    dragging = (d) => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y\n    },\n\n    dragEnded = (d) => {\n      if (!d3.event.active) nsp.force.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n      // d.fx = d3.event.x;\n      // d.fy = d3.event.y;\n    },\n\n    drag = () => d3.selectAll('g.node')\n      .call(d3.drag()\n        .on(\"start\", dragStarted)\n        .on(\"drag\", dragging)\n        .on(\"end\", dragEnded)\n         \n      ),\n\n    \n\n    tick = (that) => {\n      that.d3Graph = d3.select(ReactDOM.findDOMNode(that));\n      nsp.force.on('tick', () => {\n        that.d3Graph.call(updateGraph)\n      });\n    };\n   \n    \n\n\n  nsp.width = width;\n  nsp.color = color//d3.scale.category20();\n  nsp.height = height;\n  nsp.enterNode = enterNode;\n  nsp.updateNode = updateNode;\n  nsp.enterLink = enterLink;\n  nsp.updateLink = updateLink;\n  nsp.updateGraph = updateGraph;\n  nsp.initForce = initForce;\n  nsp.stop = stop;\n  nsp.restartGraph = restartGraph;\n  nsp.dragStarted = dragStarted;\n  nsp.dragging = dragging;\n  nsp.dragEnded = dragEnded;\n  nsp.drag = drag;\n  nsp.tick = tick;\n  nsp.nodeClick =  nodeClick;\n  // nsp.start = start;\n  \n\n  return nsp\n\n})(FORCE || {})","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport * as d3 from \"d3\";\nconst GRPAH_CONSTANTS = require('./variables')\nclass Link extends Component {\n\n    componentDidMount() {\n        this.d3Link = d3.select(ReactDOM.findDOMNode(this))\n            .datum(this.props.data)\n            .call(GRPAH_CONSTANTS.FORCE.enterLink);\n    }\n\n    componentDidUpdate() {\n        this.d3Link.datum(this.props.data)\n            .call(GRPAH_CONSTANTS.FORCE.updateLink)\n    }\n\n    render() {\n        // console.log(this.props.data)\n        return (\n            this.props.data.type === 2 && !this.props.data.isParent?\n                null\n            :\n                <line className='link' />\n        );\n    }\n}\n\nexport default Link;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport * as d3 from \"d3\";\n\nconst GRPAH_CONSTANTS= require('./variables')\n\n\nclass Node extends Component {\n    \n        componentDidMount() {\n          this.d3Node = d3.select(ReactDOM.findDOMNode(this))\n            .datum(this.props.data)\n            .call(GRPAH_CONSTANTS.FORCE.enterNode)\n        }\n    \n        componentDidUpdate() {\n          this.d3Node.datum(this.props.data)\n            .call(GRPAH_CONSTANTS.FORCE.updateNode)\n        }\n\n        childNodeClicked(id,name,type,isParent){\n           // alert(\"node clicked \"+data)\n          //  console.log(name,type,isParent);\n           switch(type){\n             case 0:\n            //  console.log(\"Type 0 1st click show\");\n                if(id !== \"invoice\" && !isNaN(id)){\n                  this.props.nodeClicked(id,name,1,isParent,0)\n                }\n                break;\n             case 1:\n                // console.log(\"Type 1 2nd click hide\");\n                if(id !== \"invoice\" && !isNaN(id)){\n                  this.props.nodeClicked(id,name,2,isParent,1)\n                }\n                break;\n\n             case 2:\n                // console.log(\"Type 2 3rd click show again\");\n                this.props.nodeClicked(id,name,1,isParent,0)\n                break;\n\n             default:\n               break;\n           }\n            // this.props.nodeClicked(id,name)\n        }\n\n        render() {\n            // console.log(this.props.data);\n          return (\n            this.props.data.type === 2 && !this.props.data.isParent?\n                null\n                :\n                <g className='node' onClick={()=>this.childNodeClicked(this.props.data.id,this.props.data.name,this.props.data.type,this.props.data.isParent)}>\n                      <circle fill={\"purple\"}               \n                      />\n                      <text>{this.props.data.name}</text>\n                </g>\n          );\n        }\n    }\n\n    export default Node;\n    ","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from \"react-redux\";\n// import ReactDOM from 'react-dom'\n// import { Row } from 'antd';\n// constants\n// import { pathConstants } from 'constants/path-constants';\nimport Loader from 'components/loader';\n\n// import * as d3 from \"d3\";\n\nimport Link from './link'\nimport Node from './node'\n// Actions\nimport { default as GraphActions } from \"store/modelExplorer/actions\";\nconst { getGraphNode, getGraphLink } = GraphActions;\n\n// const APP_CONSTANTS = require('constants/app-constants');\nconst GRPAH_CONSTANTS = require('./variables');\n\nvar nodes = [];\nvar nodeCopy = [];\nvar linkData = [];\nvar linkDataCopy = [];\nvar linkComponent = [];\nvar nodeComponent = [];\n\nclass KnowledgeGraphUnCompressed extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            showHideFlag:0,\n            graphnodes: [],\n            graphlinkData: [],\n            currrentNode: {},\n        }\n        this.onClickNode = this.onClickNode.bind(this);\n        this.crawlJSON = this.crawlJSON.bind(this);\n    }\n\n    componentDidMount() {\n        debugger;\n        this.setState({ isLoading: true })\n        if (this.props.isFromReceipts !== undefined && this.props.isFromReceipts) {\n            // var nodeID = (JSON.parse(this.props.nodeId.jsonLd))['@id']\n            // //console.log(\"KnowledgeGraph NODEID \" + nodeID);\n            // this.props.getGraphNode(nodeID);\n            this.generateDataFromJsonLd();\n            return;\n        }\n        this.props.getGraphNode();\n    }\n\n    componentWillUnmount() {\n        //console.log(\"GRPAH COMPONENTWILLUNMOUNT\")\n        nodes = [];\n        linkData = [];\n        linkComponent = [];\n        nodeComponent = [];\n        this.setState({\n            graphnodes: [],\n            graphlinkData: [],\n            isLoading: false,\n        })\n    }\n\n    generateDataFromJsonLd() {\n        var node = [];\n        var self = this;\n        node = JSON.parse(this.props.nodeId.jsonLd);\n        var nodeID = (JSON.parse(this.props.nodeId.jsonLd))['@id']\n        this.pushNode(nodeID)\n        //node.push({ id: nodeID, name: nodeID });\n        this.crawlJSON(node, nodeID);\n        linkComponent = [];\n        nodeComponent = [];\n        setTimeout(function () {\n            self.generateNodesAndLinksComponent();\n            GRPAH_CONSTANTS.FORCE.initForce(nodes, linkData)\n            GRPAH_CONSTANTS.FORCE.tick(self)\n            GRPAH_CONSTANTS.FORCE.drag()\n            self.setState(({\n                graphnodes: nodes,\n                isLoading: false,\n            }));\n        }, 2000);\n    }\n\n    crawlJSON(json, parentNode,flag) {\n        // console.log(\"CRAWLJSON JSON DATA \" + JSON.stringify(json))\n        // console.log(\"CRAWLJSON JSON parentNode DATA \" + JSON.stringify(parentNode))\n        let type;\n        let parentName = parentNode.name;\n        debugger;\n        if(flag === 0){\n            type = 1;\n        }else{\n            type = 2;\n        }\n\n        debugger\n        if (!json)\n            return;\n\n        let keys = Object.keys(json);\n        for (let index = 0; index < keys.length; index++) {\n            let key = keys[index];\n            //|| key == \"name\"\n            // if (key == \"id\" || key == \"type\")\n            //     continue\n            if (key === \"id\" || key === \"type\" || key === \"name\" || key === \"@id\" || key === \"@name\" || key === \"@type\" || key === \"value\")\n                continue\n            if(Array.isArray(json[key])) {\n                this.crawlJSONArray(json[key], parentNode,flag)\n                continue;\n            }\n            // debugger\n            // console.log('------'+key,parentName);\n            let id  = key + \"_\"+ parentName;\n            \n            var obj = {\n                'name':key,\n                'id':id\n            }\n            this.pushNode(obj,type,false);\n            if (typeof json[key] === \"object\") {\n                //TODO Create link parentNode to Key\n                // debugger\n                this.createLink(parentNode,id,type,false)\n                this.crawlJSON(json[key],key,flag)\n                continue;\n            }\n\n            // debugger\n            let value = String(json[key]);\n            var constructNodeData = {\n                \"name\": value,\n                \"id\": value +\"_\"+parentName,\n               \n            }\n           \n            // debugger\n            this.createLink(parentNode, id,type,false)\n            this.pushNode(constructNodeData,type,false);\n            // debugger\n            this.createLink(id, constructNodeData,type,false)\n        }\n    }\n\n    crawlJSONArray(jsonArray, parentNode,flag) {\n        // console.log(jsonArray);\n        let keys = Object.keys(jsonArray);\n        for (let index = 0; index < keys.length; index++) {\n            let key = keys[index];\n            // debugger\n            if (Array.isArray(jsonArray[key])) {\n                this.crawlJSONArray(jsonArray[key], parentNode,flag)\n                continue;\n            }\n            this.crawlJSON(jsonArray[key], parentNode,flag)\n        }\n    }\n\n    pushNode(nodeStr,type,parent) {\n        debugger;\n        // console.log(type,parent);\n        var nodeId;\n        let isExists;\n        var type = type !== undefined?type:0;\n        var parent = parent !== undefined?parent:false;\n       \n        // var nodes=this.state.graphnodes;\n        let canExpand = true;\n        if (typeof nodeStr === 'object') {\n            nodeId = nodeStr.id;\n            isExists = nodes.some(item => item.id === nodeId);\n            canExpand = nodeStr.canFetchData ? nodeStr.canFetchData : false;\n            nodeStr = nodeStr.name;\n        } else {\n            isExists = nodes.some(item => item.id === nodeStr);\n            nodeId = nodeStr;\n        }\n\n        // console.log(isExists,nodeStr);\n        if (isExists){\n            for(var i in nodes){\n                if(nodes[i].id === nodeId){\n                        nodes[i].type = type;\n                }\n            }\n            return\n        }\n\n        // console.log(\"NODES ADDING DATA  ID- \" + nodeId + \" NAME - \" + nodeStr)\n        nodes.push({ id: nodeId, name: nodeStr, canFetchData: canExpand, type:type, isParent:parent })\n        nodeCopy.push({ id: nodeId, name: nodeStr, canFetchData: canExpand, type:type, isParent:parent })\n        // console.log(\"NODES AFTER ADDING \" + JSON.stringify(nodes))\n    }\n\n    createLink(src, target,type,parent) {\n        debugger;\n        // console.log('source'+src);\n        // console.log('target'+JSON.stringify(target));\n        let isSrcExists,isTargetExists;\n        if (typeof src === 'object') {\n            let nodeId = src.id;\n\n            let isExists = nodes.some(item => item.id === nodeId);\n            if (!isExists) {\n                this.pushNode(src,type,parent);\n            }\n            src = nodeId;\n\n            // if link sc already exists\n            isSrcExists = linkData.some(item => item.source.id === nodeId);\n            \n        }\n        if (typeof target === 'object') {\n            let nodeId = target.id;\n            let isExists = nodes.some(item => item.id === nodeId);\n            if (!isExists) {\n                this.pushNode(target,type,parent);\n            }\n            target = nodeId;\n            isTargetExists = linkData.some(item => item.target.id === nodeId);\n           \n        }\n        if (src === target)\n            return;\n        let srcIndex = nodes.findIndex(item => item.name === src);\n        if (srcIndex === -1)\n            srcIndex = nodes.findIndex(item => item.id === src);\n        let targetIndex = nodes.findIndex(item => item.id === target);\n        if (targetIndex === -1)\n            targetIndex = nodes.findIndex(item => item.name === target);\n        if (srcIndex === -1 || targetIndex === -1) {\n            return;\n        }\n        //console.log(\"SOURCE LINK BEFORE ADDING \" + JSON.stringify(nodes[srcIndex]))\n        //console.log(\"TARGET LINK BEFORE ADDING \" + JSON.stringify(nodes[targetIndex]))\n        \n        if(!isSrcExists && !isTargetExists){\n            linkData.push({ source: srcIndex, target: targetIndex, type:type, isParent:parent })\n            linkDataCopy.push({ source: srcIndex, target: targetIndex, type:type, isParent:parent})\n            //console.log(\"LINKS AFTER ADDING \" + JSON.stringify(linkData)) \n                \n        }else{\n            for(var i in linkData){\n                if(src === linkData[i].source.id && target === linkData[i].target.id){\n                    linkData[i].type = type;\n                }\n            }\n        }\n      \n    }\n\n    componentWillReceiveProps(nextProps) {\n        debugger;\n        //console.log(nextProps);\n        //&& nextProps.getGraphNode !== this.props.getGraphNode\n        if (nextProps.GraphNode.content !== undefined &&\n            this.props.GraphNode.content !== nextProps.GraphNode.content) {\n            if (nextProps.GraphNode.status === 200) {\n                var node = [];\n                var self = this;\n                node = nextProps.GraphNode.content.node;\n                node.push({ id: \"invoice\", name: \"invoice\" });\n                //this.pushNode(\"invoice\")\n                for (var i = 0; i < node.length; i++) {\n                    this.pushNode(node[i],0,true)\n                }\n\n                for (var j = 0; j < node.length; j++) {\n                    this.createLink(\"invoice\", node[j],0,true)\n                }\n\n                this.generateNodesAndLinksComponent();\n\n               \n                GRPAH_CONSTANTS.FORCE.initForce(nodes, linkData)\n                GRPAH_CONSTANTS.FORCE.tick(this)\n                GRPAH_CONSTANTS.FORCE.drag()\n              \n\n                this.setState({\n                    graphnodes: node,\n                    isLoading: false,\n                })\n            }\n            //console.log(\"NODES \" + JSON.stringify(node));\n        }\n\n\n        if (nextProps.GraphLink.content !== undefined &&\n            this.props.GraphLink.content !== nextProps.GraphLink.content) {\n            self = this\n            var Graphobject = nextProps.GraphLink.content.node[0];\n            nodeCopy = [];\n            linkDataCopy = [];\n            this.crawlJSON(Graphobject,this.state.currrentNode,this.state.showHideFlag);\n            linkComponent = [];\n            nodeComponent = [];\n            // self.generateNodesAndLinksComponent();\n\n            setTimeout(function () {\n               \n                self.generateNodesAndLinksComponent();\n                // GRPAH_CONSTANTS.FORCE.restartGraph(nodes,linkData)\n                GRPAH_CONSTANTS.FORCE.initForce(nodes, linkData)\n                GRPAH_CONSTANTS.FORCE.tick(self)\n                GRPAH_CONSTANTS.FORCE.drag()\n                self.setState(prevState => ({\n                    //graphnodes: [...prevState.graphnodes, nodeCopy,],\n                    isLoading: false,\n                }));\n                self.forceUpdate()\n            }, 1000);\n\n            // setTimeout(function () {\n            //     self.setState(prevState => ({\n            //         isLoading: false,\n            //     }));\n            // },7000)\n\n        }\n    }\n\n \n\n\n    //graph event callbacks\n    onClickNode(nodeId, name,type,parent,flag) {\n        // console.log('clicked Node id'+ nodeId, name);\n        if (this.props.isFromReceipts !== undefined && this.props.isFromReceipts) {\n            return;\n        }\n        var obj = {\n            \"name\": name,\n            \"id\": nodeId,\n            // \"type\":type,\n        }\n        \n        //console.log(`Clicked node ${nodeId}`);\n        if(!isNaN(name) && parent && nodeId !== \"invoice\"){\n\n            for(var i in nodes){\n                if(nodes[i].id === nodeId){\n                    nodes[i].type = type;\n                    console.log('node id'+JSON.stringify(nodes[i]))\n                    // return;\n                }\n                \n            }\n\n            // if(type !== 2){\n                this.setState({ currrentNode: obj, isLoading: true,showHideFlag:flag })\n                GRPAH_CONSTANTS.FORCE.stop();\n                this.props.getGraphLink(nodeId);\n            // }\n        }\n    };\n\n    generateNodesAndLinksComponent() {\n\n        nodeComponent = nodes.map((node,index) => {\n            //console.log(\"NODE DATA \" + JSON.stringify(node))\n            return (\n                <Node\n                    data={node}\n                    name={node.name}\n                    key={index}\n                    nodeClicked={this.onClickNode}\n                />);\n        });\n\n        linkComponent = linkData.map((link,index) => {\n            //console.log(\"NODE LINK \" + JSON.stringify(link))\n            return (\n                <Link\n                    key={index}\n                    data={link}\n                />);\n        });\n    }\n\n    getLinks() {\n        //console.log(\"getLinks \" + JSON.stringify(linkComponent))\n        return linkComponent;\n    }\n\n    getNodes() {\n        //console.log(\"getNodes \" + JSON.stringify(nodeComponent))\n        return nodeComponent;\n    }\n\n    render() {\n        return (\n            <div className=\"graph__container\">\n                {this.state.isLoading ?\n                    <Loader />\n                    : null\n                }\n                {/* <div className=\"chart\"></div> */}\n                <svg className=\"d3\"\n                    width={GRPAH_CONSTANTS.FORCE.width}\n                    height={GRPAH_CONSTANTS.FORCE.height}\n                >\n                    <g>\n                        {this.getLinks()}\n                    </g>\n                    <g>\n                        {this.getNodes()}\n                    </g>\n                </svg>\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        ...state,\n        GraphNode: state.modelExplorer.GraphNode,\n        GraphLink: state.modelExplorer.GraphLink,\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        getGraphNode,\n        getGraphLink\n    })(withRouter(KnowledgeGraphUnCompressed));\n\n","import React from 'react';\nimport { withRouter } from 'react-router';\n// import { connect } from \"react-redux\";\n// base page\nimport BasePage from '../../pages/base-page';\nimport './index.scss';\n// components and containers\nimport GraphContainer from 'containers/KnowledgeGraphUnCompressed';\n\n// const APP_CONSTANTS = require('constants/app-constants')\n\n\nclass ModelExplorer extends BasePage {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    //<GraphContainer />\n\n    render() {\n        return (\n            <div className=\"model-explorer-page \">\n                {/* <div className=\"model-explorer-page__comingsoon\">\n                        <h1>COMING SOON</h1>\n                        <hr />\n                </div> */}\n                <GraphContainer />\n            </div>\n        );\n    }\n\n}\nexport default withRouter(ModelExplorer);\n\n\n\n"],"sourceRoot":""}